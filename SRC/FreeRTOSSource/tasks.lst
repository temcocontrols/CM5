                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.4.8 #964 (Feb 23 2005)
                              4 ; This file generated Fri May 20 14:05:27 2005
                              5 ;--------------------------------------------------------
                              6 	.module ______Source_tasks
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _TF2
                             13 	.globl _EXF2
                             14 	.globl _RCLK
                             15 	.globl _TCLK
                             16 	.globl _EXEN2
                             17 	.globl _TR2
                             18 	.globl _C_T2
                             19 	.globl _CP_RL2
                             20 	.globl _T2CON_7
                             21 	.globl _T2CON_6
                             22 	.globl _T2CON_5
                             23 	.globl _T2CON_4
                             24 	.globl _T2CON_3
                             25 	.globl _T2CON_2
                             26 	.globl _T2CON_1
                             27 	.globl _T2CON_0
                             28 	.globl _ET2
                             29 	.globl _CY
                             30 	.globl _AC
                             31 	.globl _F0
                             32 	.globl _RS1
                             33 	.globl _RS0
                             34 	.globl _OV
                             35 	.globl _F1
                             36 	.globl _P
                             37 	.globl _PS
                             38 	.globl _PT1
                             39 	.globl _PX1
                             40 	.globl _PT0
                             41 	.globl _PX0
                             42 	.globl _RD
                             43 	.globl _WR
                             44 	.globl _T1
                             45 	.globl _T0
                             46 	.globl _INT1
                             47 	.globl _INT0
                             48 	.globl _TXD
                             49 	.globl _RXD
                             50 	.globl _P3_7
                             51 	.globl _P3_6
                             52 	.globl _P3_5
                             53 	.globl _P3_4
                             54 	.globl _P3_3
                             55 	.globl _P3_2
                             56 	.globl _P3_1
                             57 	.globl _P3_0
                             58 	.globl _EA
                             59 	.globl _ES
                             60 	.globl _ET1
                             61 	.globl _EX1
                             62 	.globl _ET0
                             63 	.globl _EX0
                             64 	.globl _P2_7
                             65 	.globl _P2_6
                             66 	.globl _P2_5
                             67 	.globl _P2_4
                             68 	.globl _P2_3
                             69 	.globl _P2_2
                             70 	.globl _P2_1
                             71 	.globl _P2_0
                             72 	.globl _SM0
                             73 	.globl _SM1
                             74 	.globl _SM2
                             75 	.globl _REN
                             76 	.globl _TB8
                             77 	.globl _RB8
                             78 	.globl _TI
                             79 	.globl _RI
                             80 	.globl _P1_7
                             81 	.globl _P1_6
                             82 	.globl _P1_5
                             83 	.globl _P1_4
                             84 	.globl _P1_3
                             85 	.globl _P1_2
                             86 	.globl _P1_1
                             87 	.globl _P1_0
                             88 	.globl _TF1
                             89 	.globl _TR1
                             90 	.globl _TF0
                             91 	.globl _TR0
                             92 	.globl _IE1
                             93 	.globl _IT1
                             94 	.globl _IE0
                             95 	.globl _IT0
                             96 	.globl _P0_7
                             97 	.globl _P0_6
                             98 	.globl _P0_5
                             99 	.globl _P0_4
                            100 	.globl _P0_3
                            101 	.globl _P0_2
                            102 	.globl _P0_1
                            103 	.globl _P0_0
                            104 	.globl _TH2
                            105 	.globl _TL2
                            106 	.globl _RCAP2H
                            107 	.globl _RCAP2L
                            108 	.globl _T2CON
                            109 	.globl _B
                            110 	.globl _ACC
                            111 	.globl _PSW
                            112 	.globl _IP
                            113 	.globl _P3
                            114 	.globl _IE
                            115 	.globl _P2
                            116 	.globl _SBUF
                            117 	.globl _SCON
                            118 	.globl _P1
                            119 	.globl _TH1
                            120 	.globl _TH0
                            121 	.globl _TL1
                            122 	.globl _TL0
                            123 	.globl _TMOD
                            124 	.globl _TCON
                            125 	.globl _PCON
                            126 	.globl _DPH
                            127 	.globl _DPL
                            128 	.globl _SP
                            129 	.globl _P0
                            130 	.globl _pxCurrentTCB
                            131 	.globl _sTaskCreate
                            132 	.globl _vTaskDelayUntil
                            133 	.globl _vTaskDelay
                            134 	.globl _vTaskStartScheduler
                            135 	.globl _vTaskEndScheduler
                            136 	.globl _vTaskSuspendAll
                            137 	.globl _cTaskResumeAll
                            138 	.globl _xTaskGetTickCount
                            139 	.globl _usTaskGetNumberOfTasks
                            140 	.globl _vTaskIncrementTick
                            141 	.globl _vTaskSwitchContext
                            142 	.globl _vTaskPlaceOnEventList
                            143 	.globl _cTaskRemoveFromEventList
                            144 ;--------------------------------------------------------
                            145 ; special function registers
                            146 ;--------------------------------------------------------
                            147 	.area RSEG    (DATA)
                    0080    148 _P0	=	0x0080
                    0081    149 _SP	=	0x0081
                    0082    150 _DPL	=	0x0082
                    0083    151 _DPH	=	0x0083
                    0087    152 _PCON	=	0x0087
                    0088    153 _TCON	=	0x0088
                    0089    154 _TMOD	=	0x0089
                    008A    155 _TL0	=	0x008a
                    008B    156 _TL1	=	0x008b
                    008C    157 _TH0	=	0x008c
                    008D    158 _TH1	=	0x008d
                    0090    159 _P1	=	0x0090
                    0098    160 _SCON	=	0x0098
                    0099    161 _SBUF	=	0x0099
                    00A0    162 _P2	=	0x00a0
                    00A8    163 _IE	=	0x00a8
                    00B0    164 _P3	=	0x00b0
                    00B8    165 _IP	=	0x00b8
                    00D0    166 _PSW	=	0x00d0
                    00E0    167 _ACC	=	0x00e0
                    00F0    168 _B	=	0x00f0
                    00C8    169 _T2CON	=	0x00c8
                    00CA    170 _RCAP2L	=	0x00ca
                    00CB    171 _RCAP2H	=	0x00cb
                    00CC    172 _TL2	=	0x00cc
                    00CD    173 _TH2	=	0x00cd
                            174 ;--------------------------------------------------------
                            175 ; special function bits 
                            176 ;--------------------------------------------------------
                            177 	.area RSEG    (DATA)
                    0080    178 _P0_0	=	0x0080
                    0081    179 _P0_1	=	0x0081
                    0082    180 _P0_2	=	0x0082
                    0083    181 _P0_3	=	0x0083
                    0084    182 _P0_4	=	0x0084
                    0085    183 _P0_5	=	0x0085
                    0086    184 _P0_6	=	0x0086
                    0087    185 _P0_7	=	0x0087
                    0088    186 _IT0	=	0x0088
                    0089    187 _IE0	=	0x0089
                    008A    188 _IT1	=	0x008a
                    008B    189 _IE1	=	0x008b
                    008C    190 _TR0	=	0x008c
                    008D    191 _TF0	=	0x008d
                    008E    192 _TR1	=	0x008e
                    008F    193 _TF1	=	0x008f
                    0090    194 _P1_0	=	0x0090
                    0091    195 _P1_1	=	0x0091
                    0092    196 _P1_2	=	0x0092
                    0093    197 _P1_3	=	0x0093
                    0094    198 _P1_4	=	0x0094
                    0095    199 _P1_5	=	0x0095
                    0096    200 _P1_6	=	0x0096
                    0097    201 _P1_7	=	0x0097
                    0098    202 _RI	=	0x0098
                    0099    203 _TI	=	0x0099
                    009A    204 _RB8	=	0x009a
                    009B    205 _TB8	=	0x009b
                    009C    206 _REN	=	0x009c
                    009D    207 _SM2	=	0x009d
                    009E    208 _SM1	=	0x009e
                    009F    209 _SM0	=	0x009f
                    00A0    210 _P2_0	=	0x00a0
                    00A1    211 _P2_1	=	0x00a1
                    00A2    212 _P2_2	=	0x00a2
                    00A3    213 _P2_3	=	0x00a3
                    00A4    214 _P2_4	=	0x00a4
                    00A5    215 _P2_5	=	0x00a5
                    00A6    216 _P2_6	=	0x00a6
                    00A7    217 _P2_7	=	0x00a7
                    00A8    218 _EX0	=	0x00a8
                    00A9    219 _ET0	=	0x00a9
                    00AA    220 _EX1	=	0x00aa
                    00AB    221 _ET1	=	0x00ab
                    00AC    222 _ES	=	0x00ac
                    00AF    223 _EA	=	0x00af
                    00B0    224 _P3_0	=	0x00b0
                    00B1    225 _P3_1	=	0x00b1
                    00B2    226 _P3_2	=	0x00b2
                    00B3    227 _P3_3	=	0x00b3
                    00B4    228 _P3_4	=	0x00b4
                    00B5    229 _P3_5	=	0x00b5
                    00B6    230 _P3_6	=	0x00b6
                    00B7    231 _P3_7	=	0x00b7
                    00B0    232 _RXD	=	0x00b0
                    00B1    233 _TXD	=	0x00b1
                    00B2    234 _INT0	=	0x00b2
                    00B3    235 _INT1	=	0x00b3
                    00B4    236 _T0	=	0x00b4
                    00B5    237 _T1	=	0x00b5
                    00B6    238 _WR	=	0x00b6
                    00B7    239 _RD	=	0x00b7
                    00B8    240 _PX0	=	0x00b8
                    00B9    241 _PT0	=	0x00b9
                    00BA    242 _PX1	=	0x00ba
                    00BB    243 _PT1	=	0x00bb
                    00BC    244 _PS	=	0x00bc
                    00D0    245 _P	=	0x00d0
                    00D1    246 _F1	=	0x00d1
                    00D2    247 _OV	=	0x00d2
                    00D3    248 _RS0	=	0x00d3
                    00D4    249 _RS1	=	0x00d4
                    00D5    250 _F0	=	0x00d5
                    00D6    251 _AC	=	0x00d6
                    00D7    252 _CY	=	0x00d7
                    00AD    253 _ET2	=	0x00ad
                    00C8    254 _T2CON_0	=	0x00c8
                    00C9    255 _T2CON_1	=	0x00c9
                    00CA    256 _T2CON_2	=	0x00ca
                    00CB    257 _T2CON_3	=	0x00cb
                    00CC    258 _T2CON_4	=	0x00cc
                    00CD    259 _T2CON_5	=	0x00cd
                    00CE    260 _T2CON_6	=	0x00ce
                    00CF    261 _T2CON_7	=	0x00cf
                    00C8    262 _CP_RL2	=	0x00c8
                    00C9    263 _C_T2	=	0x00c9
                    00CA    264 _TR2	=	0x00ca
                    00CB    265 _EXEN2	=	0x00cb
                    00CC    266 _TCLK	=	0x00cc
                    00CD    267 _RCLK	=	0x00cd
                    00CE    268 _EXF2	=	0x00ce
                    00CF    269 _TF2	=	0x00cf
                            270 ;--------------------------------------------------------
                            271 ; overlayable register banks 
                            272 ;--------------------------------------------------------
                            273 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     274 	.ds 8
                            275 ;--------------------------------------------------------
                            276 ; internal ram data
                            277 ;--------------------------------------------------------
                            278 	.area DSEG    (DATA)
                            279 ;--------------------------------------------------------
                            280 ; overlayable items in internal ram 
                            281 ;--------------------------------------------------------
                            282 	.area OSEG    (OVR,DATA)
                            283 ;--------------------------------------------------------
                            284 ; indirectly addressable internal ram data
                            285 ;--------------------------------------------------------
                            286 	.area ISEG    (DATA)
                            287 ;--------------------------------------------------------
                            288 ; bit data
                            289 ;--------------------------------------------------------
                            290 	.area BSEG    (BIT)
                            291 ;--------------------------------------------------------
                            292 ; paged external ram data
                            293 ;--------------------------------------------------------
                            294 	.area PSEG    (PAG,XDATA)
                            295 ;--------------------------------------------------------
                            296 ; external ram data
                            297 ;--------------------------------------------------------
                            298 	.area XSEG    (XDATA)
   0000                     299 _pxReadyTasksLists:
   0000                     300 	.ds 88
   0058                     301 _xDelayedTaskList1:
   0058                     302 	.ds 22
   006E                     303 _xDelayedTaskList2:
   006E                     304 	.ds 22
   0084                     305 _pxDelayedTaskList:
   0084                     306 	.ds 3
   0087                     307 _pxOverflowDelayedTaskList:
   0087                     308 	.ds 3
   008A                     309 _xPendingReadyList:
   008A                     310 	.ds 22
   00A0                     311 _sTaskCreate_ucTaskNumber_1_1:
   00A0                     312 	.ds 1
                            313 ;--------------------------------------------------------
                            314 ; external initialized ram data
                            315 ;--------------------------------------------------------
                            316 	.area XISEG   (XDATA)
   0000                     317 _pxCurrentTCB::
   0000                     318 	.ds 3
   0003                     319 _sUsingPreemption:
   0003                     320 	.ds 2
   0005                     321 _usCurrentNumberOfTasks:
   0005                     322 	.ds 2
   0007                     323 _xTickCount:
   0007                     324 	.ds 2
   0009                     325 _ucTopUsedPriority:
   0009                     326 	.ds 1
   000A                     327 _ucTopReadyPriority:
   000A                     328 	.ds 1
   000B                     329 _cSchedulerRunning:
   000B                     330 	.ds 1
   000C                     331 _ucSchedulerSuspended:
   000C                     332 	.ds 1
   000D                     333 _ucMissedTicks:
   000D                     334 	.ds 1
                            335 	.area CSEG    (CODE)
                            336 	.area GSINIT0 (CODE)
                            337 	.area GSINIT1 (CODE)
                            338 	.area GSINIT2 (CODE)
                            339 	.area GSINIT3 (CODE)
                            340 	.area GSINIT4 (CODE)
                            341 	.area GSINIT5 (CODE)
                            342 ;--------------------------------------------------------
                            343 ; global & static initialisations
                            344 ;--------------------------------------------------------
                            345 	.area CSEG    (CODE)
                            346 	.area GSINIT  (CODE)
                            347 	.area GSFINAL (CODE)
                            348 	.area GSINIT  (CODE)
                            349 ;------------------------------------------------------------
                            350 ;Allocation info for local variables in function 'sTaskCreate'
                            351 ;------------------------------------------------------------
                            352 ;pcName                    Allocated to stack - offset -5
                            353 ;usStackDepth              Allocated to stack - offset -7
                            354 ;pvParameters              Allocated to stack - offset -10
                            355 ;ucPriority                Allocated to stack - offset -11
                            356 ;pxCreatedTask             Allocated to stack - offset -14
                            357 ;pvTaskCode                Allocated to stack - offset 1
                            358 ;sReturn                   Allocated to registers r2 r3 
                            359 ;pxNewTCB                  Allocated to stack - offset 3
                            360 ;pxTopOfStack              Allocated to registers r7 r2 r3 
                            361 ;sloc0                     Allocated to stack - offset 11
                            362 ;sloc1                     Allocated to stack - offset 6
                            363 ;ucTaskNumber              Allocated with name '_sTaskCreate_ucTaskNumber_1_1'
                            364 ;------------------------------------------------------------
                            365 ;../../Source/tasks.c:365: static unsigned portCHAR ucTaskNumber = 0; /*lint !e956 Static is deliberate - this is guarded before use. */
                            366 ;     genAssign
   0000 90s00rA0            367 	mov	dptr,#_sTaskCreate_ucTaskNumber_1_1
   0003 74 00               368 	mov	a,#0x00
   0005 F0                  369 	movx	@dptr,a
                            370 ;--------------------------------------------------------
                            371 ; Home
                            372 ;--------------------------------------------------------
                            373 	.area HOME    (CODE)
                            374 	.area CSEG    (CODE)
                            375 ;--------------------------------------------------------
                            376 ; code
                            377 ;--------------------------------------------------------
                            378 	.area CSEG    (CODE)
                            379 ;------------------------------------------------------------
                            380 ;Allocation info for local variables in function 'sTaskCreate'
                            381 ;------------------------------------------------------------
                            382 ;pcName                    Allocated to stack - offset -5
                            383 ;usStackDepth              Allocated to stack - offset -7
                            384 ;pvParameters              Allocated to stack - offset -10
                            385 ;ucPriority                Allocated to stack - offset -11
                            386 ;pxCreatedTask             Allocated to stack - offset -14
                            387 ;pvTaskCode                Allocated to stack - offset 1
                            388 ;sReturn                   Allocated to registers r2 r3 
                            389 ;pxNewTCB                  Allocated to stack - offset 3
                            390 ;pxTopOfStack              Allocated to registers r7 r2 r3 
                            391 ;sloc0                     Allocated to stack - offset 11
                            392 ;sloc1                     Allocated to stack - offset 6
                            393 ;ucTaskNumber              Allocated with name '_sTaskCreate_ucTaskNumber_1_1'
                            394 ;------------------------------------------------------------
                            395 ;../../Source/tasks.c:361: portSHORT sTaskCreate( pdTASK_CODE pvTaskCode, const signed portCHAR * const pcName, unsigned portSHORT usStackDepth, void *pvParameters, unsigned portCHAR ucPriority, xTaskHandle *pxCreatedTask )
                            396 ;	-----------------------------------------
                            397 ;	 function sTaskCreate
                            398 ;	-----------------------------------------
   0000                     399 _sTaskCreate:
                    0002    400 	ar2 = 0x02
                    0003    401 	ar3 = 0x03
                    0004    402 	ar4 = 0x04
                    0005    403 	ar5 = 0x05
                    0006    404 	ar6 = 0x06
                    0007    405 	ar7 = 0x07
                    0000    406 	ar0 = 0x00
                    0001    407 	ar1 = 0x01
   0000 C0*00               408 	push	_bp
   0002 85 81*00            409 	mov	_bp,sp
                            410 ;     genReceive
   0005 C0 82               411 	push	dpl
   0007 C0 83               412 	push	dph
   0009 E5 81               413 	mov	a,sp
   000B 24 08               414 	add	a,#0x08
   000D F5 81               415 	mov	sp,a
                            416 ;../../Source/tasks.c:369: pxNewTCB = prvAllocateTCBAndStack( usStackDepth );
                            417 ;     genCall
   000F E5*00               418 	mov	a,_bp
   0011 24 F9               419 	add	a,#0xf9
   0013 F8                  420 	mov	r0,a
   0014 86 82               421 	mov	dpl,@r0
   0016 08                  422 	inc	r0
   0017 86 83               423 	mov	dph,@r0
   0019 12s12r93            424 	lcall	_prvAllocateTCBAndStack
   001C AC 82               425 	mov	r4,dpl
   001E AD 83               426 	mov	r5,dph
   0020 AE F0               427 	mov	r6,b
                            428 ;     genAssign
   0022 E5*00               429 	mov	a,_bp
   0024 24 03               430 	add	a,#0x03
   0026 F8                  431 	mov	r0,a
   0027 A6 04               432 	mov	@r0,ar4
   0029 08                  433 	inc	r0
   002A A6 05               434 	mov	@r0,ar5
   002C 08                  435 	inc	r0
   002D A6 06               436 	mov	@r0,ar6
                            437 ;../../Source/tasks.c:370: if( pxNewTCB != NULL )
                            438 ;     genCmpEq
   002F E5*00               439 	mov	a,_bp
   0031 24 03               440 	add	a,#0x03
   0033 F8                  441 	mov	r0,a
   0034 B6 00 0B            442 	cjne	@r0,#0x00,00135$
   0037 08                  443 	inc	r0
   0038 B6 00 07            444 	cjne	@r0,#0x00,00135$
   003B 08                  445 	inc	r0
   003C B6 00 03            446 	cjne	@r0,#0x00,00135$
   003F 02s02r80            447 	ljmp	00113$
   0042                     448 00135$:
                            449 ;../../Source/tasks.c:375: prvInitialiseTCBVariables( pxNewTCB, usStackDepth, pcName, ucPriority );
                            450 ;     genIpush
   0042 E5*00               451 	mov	a,_bp
   0044 24 F5               452 	add	a,#0xf5
   0046 F8                  453 	mov	r0,a
   0047 E6                  454 	mov	a,@r0
   0048 C0 E0               455 	push	acc
                            456 ;     genIpush
   004A E5*00               457 	mov	a,_bp
   004C 24 FB               458 	add	a,#0xfb
   004E F8                  459 	mov	r0,a
   004F E6                  460 	mov	a,@r0
   0050 C0 E0               461 	push	acc
   0052 08                  462 	inc	r0
   0053 E6                  463 	mov	a,@r0
   0054 C0 E0               464 	push	acc
   0056 08                  465 	inc	r0
   0057 E6                  466 	mov	a,@r0
   0058 C0 E0               467 	push	acc
                            468 ;     genIpush
   005A E5*00               469 	mov	a,_bp
   005C 24 F9               470 	add	a,#0xf9
   005E F8                  471 	mov	r0,a
   005F E6                  472 	mov	a,@r0
   0060 C0 E0               473 	push	acc
   0062 08                  474 	inc	r0
   0063 E6                  475 	mov	a,@r0
   0064 C0 E0               476 	push	acc
                            477 ;     genCall
   0066 E5*00               478 	mov	a,_bp
   0068 24 03               479 	add	a,#0x03
   006A F8                  480 	mov	r0,a
   006B 86 82               481 	mov	dpl,@r0
   006D 08                  482 	inc	r0
   006E 86 83               483 	mov	dph,@r0
   0070 08                  484 	inc	r0
   0071 86 F0               485 	mov	b,@r0
   0073 12s0FrDB            486 	lcall	_prvInitialiseTCBVariables
   0076 E5 81               487 	mov	a,sp
   0078 24 FA               488 	add	a,#0xfa
   007A F5 81               489 	mov	sp,a
                            490 ;../../Source/tasks.c:390: pxTopOfStack = pxNewTCB->pxStack;	
                            491 ;     genPlus
   007C E5*00               492 	mov	a,_bp
   007E 24 03               493 	add	a,#0x03
   0080 F8                  494 	mov	r0,a
                            495 ;     genPlusIncr
   0081 74 03               496 	mov	a,#0x03
   0083 26                  497 	add	a,@r0
   0084 FF                  498 	mov	r7,a
   0085 74 00               499 	mov	a,#0x00
   0087 08                  500 	inc	r0
   0088 36                  501 	addc	a,@r0
   0089 FA                  502 	mov	r2,a
   008A 08                  503 	inc	r0
   008B 86 03               504 	mov	ar3,@r0
                            505 ;     genPointerGet
                            506 ;     genGenPointerGet
   008D 8F 82               507 	mov	dpl,r7
   008F 8A 83               508 	mov	dph,r2
   0091 8B F0               509 	mov	b,r3
   0093 12s00r00            510 	lcall	__gptrget
   0096 FF                  511 	mov	r7,a
   0097 A3                  512 	inc	dptr
   0098 12s00r00            513 	lcall	__gptrget
   009B FA                  514 	mov	r2,a
   009C A3                  515 	inc	dptr
   009D 12s00r00            516 	lcall	__gptrget
   00A0 FB                  517 	mov	r3,a
                            518 ;     genAssign
                            519 ;../../Source/tasks.c:398: pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pvTaskCode, pvParameters );
                            520 ;     genIpush
   00A1 E5*00               521 	mov	a,_bp
   00A3 24 F6               522 	add	a,#0xf6
   00A5 F8                  523 	mov	r0,a
   00A6 E6                  524 	mov	a,@r0
   00A7 C0 E0               525 	push	acc
   00A9 08                  526 	inc	r0
   00AA E6                  527 	mov	a,@r0
   00AB C0 E0               528 	push	acc
   00AD 08                  529 	inc	r0
   00AE E6                  530 	mov	a,@r0
   00AF C0 E0               531 	push	acc
                            532 ;     genIpush
   00B1 E5*00               533 	mov	a,_bp
   00B3 24 01               534 	add	a,#0x01
   00B5 F8                  535 	mov	r0,a
   00B6 E6                  536 	mov	a,@r0
   00B7 C0 E0               537 	push	acc
   00B9 08                  538 	inc	r0
   00BA E6                  539 	mov	a,@r0
   00BB C0 E0               540 	push	acc
                            541 ;     genCall
   00BD 8F 82               542 	mov	dpl,r7
   00BF 8A 83               543 	mov	dph,r2
   00C1 8B F0               544 	mov	b,r3
   00C3 12s00r00            545 	lcall	_pxPortInitialiseStack
   00C6 AA 82               546 	mov	r2,dpl
   00C8 AB 83               547 	mov	r3,dph
   00CA AF F0               548 	mov	r7,b
   00CC E5 81               549 	mov	a,sp
   00CE 24 FB               550 	add	a,#0xfb
   00D0 F5 81               551 	mov	sp,a
                            552 ;     genPointerSet
                            553 ;     genGenPointerSet
   00D2 E5*00               554 	mov	a,_bp
   00D4 24 03               555 	add	a,#0x03
   00D6 F8                  556 	mov	r0,a
   00D7 86 82               557 	mov	dpl,@r0
   00D9 08                  558 	inc	r0
   00DA 86 83               559 	mov	dph,@r0
   00DC 08                  560 	inc	r0
   00DD 86 F0               561 	mov	b,@r0
   00DF EA                  562 	mov	a,r2
   00E0 12s00r00            563 	lcall	__gptrput
   00E3 A3                  564 	inc	dptr
   00E4 EB                  565 	mov	a,r3
   00E5 12s00r00            566 	lcall	__gptrput
   00E8 A3                  567 	inc	dptr
   00E9 EF                  568 	mov	a,r7
   00EA 12s00r00            569 	lcall	__gptrput
                            570 ;../../Source/tasks.c:402: portENTER_CRITICAL();
                            571 ;     genInline
   00ED C0 E0 C0 A8         572 	 push ACC push IE 
                            573 ;     genAssign
   00F1 C2 AF               574 	clr	_EA
                            575 ;../../Source/tasks.c:404: usCurrentNumberOfTasks++;
                            576 ;     genAssign
   00F3 90s00r05            577 	mov	dptr,#_usCurrentNumberOfTasks
   00F6 E0                  578 	movx	a,@dptr
   00F7 FA                  579 	mov	r2,a
   00F8 A3                  580 	inc	dptr
   00F9 E0                  581 	movx	a,@dptr
   00FA FB                  582 	mov	r3,a
                            583 ;     genPlus
   00FB 90s00r05            584 	mov	dptr,#_usCurrentNumberOfTasks
                            585 ;     genPlusIncr
   00FE 74 01               586 	mov	a,#0x01
   0100 25 02               587 	add	a,ar2
   0102 F0                  588 	movx	@dptr,a
   0103 74 00               589 	mov	a,#0x00
   0105 35 03               590 	addc	a,ar3
   0107 A3                  591 	inc	dptr
   0108 F0                  592 	movx	@dptr,a
                            593 ;../../Source/tasks.c:405: if( usCurrentNumberOfTasks == ( unsigned portSHORT ) 1 )
                            594 ;     genAssign
   0109 90s00r05            595 	mov	dptr,#_usCurrentNumberOfTasks
   010C E0                  596 	movx	a,@dptr
   010D FA                  597 	mov	r2,a
   010E A3                  598 	inc	dptr
   010F E0                  599 	movx	a,@dptr
   0110 FB                  600 	mov	r3,a
                            601 ;     genCmpEq
   0111 BA 01 05            602 	cjne	r2,#0x01,00136$
   0114 BB 00 02            603 	cjne	r3,#0x00,00136$
   0117 80 03               604 	sjmp	00137$
   0119                     605 00136$:
   0119 02s01r38            606 	ljmp	00106$
   011C                     607 00137$:
                            608 ;../../Source/tasks.c:408: pxCurrentTCB = ( volatile tskTCB * volatile ) pxNewTCB;
                            609 ;     genAssign
   011C E5*00               610 	mov	a,_bp
   011E 24 03               611 	add	a,#0x03
   0120 F8                  612 	mov	r0,a
   0121 90s00r00            613 	mov	dptr,#_pxCurrentTCB
   0124 E6                  614 	mov	a,@r0
   0125 F0                  615 	movx	@dptr,a
   0126 08                  616 	inc	r0
   0127 A3                  617 	inc	dptr
   0128 E6                  618 	mov	a,@r0
   0129 F0                  619 	movx	@dptr,a
   012A 08                  620 	inc	r0
   012B A3                  621 	inc	dptr
   012C E6                  622 	mov	a,@r0
   012D F0                  623 	movx	@dptr,a
                            624 ;../../Source/tasks.c:413: sReturn = prvInitialiseTaskLists();
                            625 ;     genCall
   012E 12s11rCC            626 	lcall	_prvInitialiseTaskLists
   0131 AA 82               627 	mov	r2,dpl
   0133 AB 83               628 	mov	r3,dph
                            629 ;     genAssign
   0135 02s01r91            630 	ljmp	00107$
   0138                     631 00106$:
                            632 ;../../Source/tasks.c:417: sReturn = pdPASS;
                            633 ;     genAssign
   0138 7A 01               634 	mov	r2,#0x01
   013A 7B 00               635 	mov	r3,#0x00
                            636 ;../../Source/tasks.c:422: if( cSchedulerRunning == pdFALSE )
                            637 ;     genAssign
   013C 90s00r0B            638 	mov	dptr,#_cSchedulerRunning
   013F E0                  639 	movx	a,@dptr
   0140 FF                  640 	mov	r7,a
                            641 ;     genCmpEq
   0141 BF 00 02            642 	cjne	r7,#0x00,00138$
   0144 80 03               643 	sjmp	00139$
   0146                     644 00138$:
   0146 02s01r91            645 	ljmp	00107$
   0149                     646 00139$:
                            647 ;../../Source/tasks.c:424: if( pxCurrentTCB->ucPriority <= ucPriority )
                            648 ;     genIpush
   0149 C0 02               649 	push	ar2
   014B C0 03               650 	push	ar3
                            651 ;     genAssign
   014D 90s00r00            652 	mov	dptr,#_pxCurrentTCB
   0150 E0                  653 	movx	a,@dptr
   0151 FF                  654 	mov	r7,a
   0152 A3                  655 	inc	dptr
   0153 E0                  656 	movx	a,@dptr
   0154 FA                  657 	mov	r2,a
   0155 A3                  658 	inc	dptr
   0156 E0                  659 	movx	a,@dptr
   0157 FB                  660 	mov	r3,a
                            661 ;     genPlus
   0158 74 18               662 	mov	a,#0x18
   015A 25 07               663 	add	a,ar7
   015C FF                  664 	mov	r7,a
   015D 74 00               665 	mov	a,#0x00
   015F 35 02               666 	addc	a,ar2
   0161 FA                  667 	mov	r2,a
                            668 ;     genPointerGet
                            669 ;     genGenPointerGet
   0162 8F 82               670 	mov	dpl,r7
   0164 8A 83               671 	mov	dph,r2
   0166 8B F0               672 	mov	b,r3
   0168 12s00r00            673 	lcall	__gptrget
   016B FF                  674 	mov	r7,a
                            675 ;     genCmpGt
   016C E5*00               676 	mov	a,_bp
   016E 24 F5               677 	add	a,#0xf5
   0170 F8                  678 	mov	r0,a
                            679 ;     genCmp
   0171 C3                  680 	clr	c
   0172 E6                  681 	mov	a,@r0
   0173 9F                  682 	subb	a,r7
   0174 E4                  683 	clr	a
   0175 33                  684 	rlc	a
                            685 ;     genIpop
   0176 D0 03               686 	pop	ar3
   0178 D0 02               687 	pop	ar2
                            688 ;     genIfx
                            689 ;     genIfxJump
   017A 60 03               690 	jz	00140$
   017C 02s01r91            691 	ljmp	00107$
   017F                     692 00140$:
                            693 ;../../Source/tasks.c:426: pxCurrentTCB = ( volatile tskTCB * volatile ) pxNewTCB;	
                            694 ;     genAssign
   017F E5*00               695 	mov	a,_bp
   0181 24 03               696 	add	a,#0x03
   0183 F8                  697 	mov	r0,a
   0184 90s00r00            698 	mov	dptr,#_pxCurrentTCB
   0187 E6                  699 	mov	a,@r0
   0188 F0                  700 	movx	@dptr,a
   0189 08                  701 	inc	r0
   018A A3                  702 	inc	dptr
   018B E6                  703 	mov	a,@r0
   018C F0                  704 	movx	@dptr,a
   018D 08                  705 	inc	r0
   018E A3                  706 	inc	dptr
   018F E6                  707 	mov	a,@r0
   0190 F0                  708 	movx	@dptr,a
   0191                     709 00107$:
                            710 ;../../Source/tasks.c:433: if( pxNewTCB->ucPriority > ucTopUsedPriority )
                            711 ;     genIpush
   0191 C0 02               712 	push	ar2
   0193 C0 03               713 	push	ar3
                            714 ;     genPlus
   0195 E5*00               715 	mov	a,_bp
   0197 24 03               716 	add	a,#0x03
   0199 F8                  717 	mov	r0,a
   019A 74 18               718 	mov	a,#0x18
   019C 26                  719 	add	a,@r0
   019D FF                  720 	mov	r7,a
   019E 74 00               721 	mov	a,#0x00
   01A0 08                  722 	inc	r0
   01A1 36                  723 	addc	a,@r0
   01A2 FA                  724 	mov	r2,a
   01A3 08                  725 	inc	r0
   01A4 86 03               726 	mov	ar3,@r0
                            727 ;     genPointerGet
                            728 ;     genGenPointerGet
   01A6 8F 82               729 	mov	dpl,r7
   01A8 8A 83               730 	mov	dph,r2
   01AA 8B F0               731 	mov	b,r3
   01AC 12s00r00            732 	lcall	__gptrget
   01AF FD                  733 	mov	r5,a
                            734 ;     genAssign
   01B0 90s00r09            735 	mov	dptr,#_ucTopUsedPriority
   01B3 E0                  736 	movx	a,@dptr
   01B4 FA                  737 	mov	r2,a
                            738 ;     genCmpGt
                            739 ;     genCmp
   01B5 C3                  740 	clr	c
   01B6 EA                  741 	mov	a,r2
   01B7 9D                  742 	subb	a,r5
   01B8 E4                  743 	clr	a
   01B9 33                  744 	rlc	a
                            745 ;     genIpop
   01BA D0 03               746 	pop	ar3
   01BC D0 02               747 	pop	ar2
                            748 ;     genIfx
                            749 ;     genIfxJump
   01BE 70 03               750 	jnz	00141$
   01C0 02s01rC8            751 	ljmp	00109$
   01C3                     752 00141$:
                            753 ;../../Source/tasks.c:435: ucTopUsedPriority = pxNewTCB->ucPriority;
                            754 ;     genAssign
   01C3 90s00r09            755 	mov	dptr,#_ucTopUsedPriority
   01C6 ED                  756 	mov	a,r5
   01C7 F0                  757 	movx	@dptr,a
   01C8                     758 00109$:
                            759 ;../../Source/tasks.c:439: pxNewTCB->ucTCBNumber = ucTaskNumber;
                            760 ;     genIpush
   01C8 C0 02               761 	push	ar2
   01CA C0 03               762 	push	ar3
                            763 ;     genPlus
   01CC E5*00               764 	mov	a,_bp
   01CE 24 03               765 	add	a,#0x03
   01D0 F8                  766 	mov	r0,a
   01D1 74 35               767 	mov	a,#0x35
   01D3 26                  768 	add	a,@r0
   01D4 FF                  769 	mov	r7,a
   01D5 74 00               770 	mov	a,#0x00
   01D7 08                  771 	inc	r0
   01D8 36                  772 	addc	a,@r0
   01D9 FA                  773 	mov	r2,a
   01DA 08                  774 	inc	r0
   01DB 86 03               775 	mov	ar3,@r0
                            776 ;     genAssign
   01DD 90s00rA0            777 	mov	dptr,#_sTaskCreate_ucTaskNumber_1_1
   01E0 E0                  778 	movx	a,@dptr
   01E1 FC                  779 	mov	r4,a
                            780 ;     genPointerSet
                            781 ;     genGenPointerSet
   01E2 8F 82               782 	mov	dpl,r7
   01E4 8A 83               783 	mov	dph,r2
   01E6 8B F0               784 	mov	b,r3
   01E8 EC                  785 	mov	a,r4
   01E9 12s00r00            786 	lcall	__gptrput
                            787 ;../../Source/tasks.c:440: ucTaskNumber++;
                            788 ;     genPlus
   01EC 90s00rA0            789 	mov	dptr,#_sTaskCreate_ucTaskNumber_1_1
                            790 ;     genPlusIncr
   01EF 74 01               791 	mov	a,#0x01
   01F1 25 04               792 	add	a,ar4
   01F3 F0                  793 	movx	@dptr,a
                            794 ;../../Source/tasks.c:442: prvAddTaskToReadyQueue( pxNewTCB );
                            795 ;     genPlus
   01F4 E5*00               796 	mov	a,_bp
   01F6 24 03               797 	add	a,#0x03
   01F8 F8                  798 	mov	r0,a
   01F9 E5*00               799 	mov	a,_bp
   01FB 24 06               800 	add	a,#0x06
   01FD F9                  801 	mov	r1,a
   01FE 74 19               802 	mov	a,#0x19
   0200 26                  803 	add	a,@r0
   0201 F7                  804 	mov	@r1,a
   0202 74 00               805 	mov	a,#0x00
   0204 08                  806 	inc	r0
   0205 36                  807 	addc	a,@r0
   0206 09                  808 	inc	r1
   0207 F7                  809 	mov	@r1,a
   0208 08                  810 	inc	r0
   0209 09                  811 	inc	r1
   020A E6                  812 	mov	a,@r0
   020B F7                  813 	mov	@r1,a
                            814 ;     genPointerSet
                            815 ;     genGenPointerSet
   020C E5*00               816 	mov	a,_bp
   020E 24 06               817 	add	a,#0x06
   0210 F8                  818 	mov	r0,a
   0211 86 82               819 	mov	dpl,@r0
   0213 08                  820 	inc	r0
   0214 86 83               821 	mov	dph,@r0
   0216 08                  822 	inc	r0
   0217 86 F0               823 	mov	b,@r0
   0219 74 00               824 	mov	a,#0x00
   021B 12s00r00            825 	lcall	__gptrput
   021E A3                  826 	inc	dptr
   021F 74 00               827 	mov	a,#0x00
   0221 12s00r00            828 	lcall	__gptrput
                            829 ;     genAssign
   0224 90s00r0A            830 	mov	dptr,#_ucTopReadyPriority
   0227 E0                  831 	movx	a,@dptr
   0228 FA                  832 	mov	r2,a
                            833 ;     genCmpGt
                            834 ;     genCmp
   0229 C3                  835 	clr	c
   022A EA                  836 	mov	a,r2
   022B 9D                  837 	subb	a,r5
   022C E4                  838 	clr	a
   022D 33                  839 	rlc	a
                            840 ;     genIpop
   022E D0 03               841 	pop	ar3
   0230 D0 02               842 	pop	ar2
                            843 ;     genIfx
                            844 ;     genIfxJump
   0232 70 03               845 	jnz	00142$
   0234 02s02r3C            846 	ljmp	00111$
   0237                     847 00142$:
                            848 ;     genAssign
   0237 90s00r0A            849 	mov	dptr,#_ucTopReadyPriority
   023A ED                  850 	mov	a,r5
   023B F0                  851 	movx	@dptr,a
   023C                     852 00111$:
                            853 ;     genMult
                            854 ;     genMultOneByte
   023C ED                  855 	mov	a,r5
   023D 75 F0 16            856 	mov	b,#0x16
   0240 A4                  857 	mul	ab
                            858 ;     genPlus
   0241 24r00               859 	add	a,#_pxReadyTasksLists
   0243 FC                  860 	mov	r4,a
   0244 E5 F0               861 	mov	a,b
   0246 34s00               862 	addc	a,#(_pxReadyTasksLists >> 8)
   0248 FD                  863 	mov	r5,a
                            864 ;     genCast
   0249 7E 01               865 	mov	r6,#0x1
                            866 ;     genIpush
   024B C0 02               867 	push	ar2
   024D C0 03               868 	push	ar3
   024F E5*00               869 	mov	a,_bp
   0251 24 06               870 	add	a,#0x06
   0253 F8                  871 	mov	r0,a
   0254 E6                  872 	mov	a,@r0
   0255 C0 E0               873 	push	acc
   0257 08                  874 	inc	r0
   0258 E6                  875 	mov	a,@r0
   0259 C0 E0               876 	push	acc
   025B 08                  877 	inc	r0
   025C E6                  878 	mov	a,@r0
   025D C0 E0               879 	push	acc
                            880 ;     genCall
   025F 8C 82               881 	mov	dpl,r4
   0261 8D 83               882 	mov	dph,r5
   0263 8E F0               883 	mov	b,r6
   0265 12s00r00            884 	lcall	_vListInsertEnd
   0268 15 81               885 	dec	sp
   026A 15 81               886 	dec	sp
   026C 15 81               887 	dec	sp
   026E D0 03               888 	pop	ar3
   0270 D0 02               889 	pop	ar2
                            890 ;../../Source/tasks.c:444: portEXIT_CRITICAL();
                            891 ;     genInline
   0272 D0 E0               892 	 pop ACC 
                            893 ;     genAnd
   0274 53 E0 80            894 	anl	_ACC,#0x80
                            895 ;     genOr
   0277 E5 E0               896 	mov	a,_ACC
   0279 42 A8               897 	orl	_IE,a
                            898 ;     genInline
   027B D0 E0               899 	 pop ACC 
   027D 02s02r84            900 	ljmp	00114$
   0280                     901 00113$:
                            902 ;../../Source/tasks.c:448: sReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
                            903 ;     genAssign
   0280 7A FF               904 	mov	r2,#0xFF
   0282 7B FF               905 	mov	r3,#0xFF
   0284                     906 00114$:
                            907 ;../../Source/tasks.c:451: if( sReturn == pdPASS )
                            908 ;     genCmpEq
   0284 BA 01 05            909 	cjne	r2,#0x01,00143$
   0287 BB 00 02            910 	cjne	r3,#0x00,00143$
   028A 80 03               911 	sjmp	00144$
   028C                     912 00143$:
   028C 02s02rFD            913 	ljmp	00122$
   028F                     914 00144$:
                            915 ;../../Source/tasks.c:453: if( ( void * ) pxCreatedTask != NULL )
                            916 ;     genAssign
   028F E5*00               917 	mov	a,_bp
   0291 24 F2               918 	add	a,#0xf2
   0293 F8                  919 	mov	r0,a
   0294 86 04               920 	mov	ar4,@r0
   0296 08                  921 	inc	r0
   0297 86 05               922 	mov	ar5,@r0
   0299 08                  923 	inc	r0
   029A 86 06               924 	mov	ar6,@r0
                            925 ;     genCmpEq
   029C BC 00 09            926 	cjne	r4,#0x00,00145$
   029F BD 00 06            927 	cjne	r5,#0x00,00145$
   02A2 BE 00 03            928 	cjne	r6,#0x00,00145$
   02A5 02s02rC3            929 	ljmp	00116$
   02A8                     930 00145$:
                            931 ;../../Source/tasks.c:458: *pxCreatedTask = ( xTaskHandle ) pxNewTCB;
                            932 ;     genPointerSet
                            933 ;     genGenPointerSet
   02A8 8C 82               934 	mov	dpl,r4
   02AA 8D 83               935 	mov	dph,r5
   02AC 8E F0               936 	mov	b,r6
   02AE E5*00               937 	mov	a,_bp
   02B0 24 03               938 	add	a,#0x03
   02B2 F8                  939 	mov	r0,a
   02B3 E6                  940 	mov	a,@r0
   02B4 12s00r00            941 	lcall	__gptrput
   02B7 A3                  942 	inc	dptr
   02B8 08                  943 	inc	r0
   02B9 E6                  944 	mov	a,@r0
   02BA 12s00r00            945 	lcall	__gptrput
   02BD A3                  946 	inc	dptr
   02BE 08                  947 	inc	r0
   02BF E6                  948 	mov	a,@r0
   02C0 12s00r00            949 	lcall	__gptrput
   02C3                     950 00116$:
                            951 ;../../Source/tasks.c:461: if( cSchedulerRunning != pdFALSE )
                            952 ;     genAssign
   02C3 90s00r0B            953 	mov	dptr,#_cSchedulerRunning
   02C6 E0                  954 	movx	a,@dptr
   02C7 FC                  955 	mov	r4,a
                            956 ;     genCmpEq
   02C8 BC 00 03            957 	cjne	r4,#0x00,00146$
   02CB 02s02rFD            958 	ljmp	00122$
   02CE                     959 00146$:
                            960 ;../../Source/tasks.c:465: if( pxCurrentTCB->ucPriority < ucPriority )
                            961 ;     genAssign
   02CE 90s00r00            962 	mov	dptr,#_pxCurrentTCB
   02D1 E0                  963 	movx	a,@dptr
   02D2 FC                  964 	mov	r4,a
   02D3 A3                  965 	inc	dptr
   02D4 E0                  966 	movx	a,@dptr
   02D5 FD                  967 	mov	r5,a
   02D6 A3                  968 	inc	dptr
   02D7 E0                  969 	movx	a,@dptr
   02D8 FE                  970 	mov	r6,a
                            971 ;     genPlus
   02D9 74 18               972 	mov	a,#0x18
   02DB 25 04               973 	add	a,ar4
   02DD FC                  974 	mov	r4,a
   02DE 74 00               975 	mov	a,#0x00
   02E0 35 05               976 	addc	a,ar5
   02E2 FD                  977 	mov	r5,a
                            978 ;     genPointerGet
                            979 ;     genGenPointerGet
   02E3 8C 82               980 	mov	dpl,r4
   02E5 8D 83               981 	mov	dph,r5
   02E7 8E F0               982 	mov	b,r6
   02E9 12s00r00            983 	lcall	__gptrget
   02EC FC                  984 	mov	r4,a
                            985 ;     genCmpLt
   02ED E5*00               986 	mov	a,_bp
   02EF 24 F5               987 	add	a,#0xf5
   02F1 F8                  988 	mov	r0,a
                            989 ;     genCmp
   02F2 C3                  990 	clr	c
   02F3 EC                  991 	mov	a,r4
   02F4 96                  992 	subb	a,@r0
                            993 ;     genIfxJump
   02F5 40 03               994 	jc	00147$
   02F7 02s02rFD            995 	ljmp	00122$
   02FA                     996 00147$:
                            997 ;../../Source/tasks.c:467: taskYIELD();
                            998 ;     genCall
   02FA 12s00r00            999 	lcall	_vPortYield
   02FD                    1000 00122$:
                           1001 ;../../Source/tasks.c:472: return sReturn;
                           1002 ;     genRet
   02FD 8A 82              1003 	mov	dpl,r2
   02FF 8B 83              1004 	mov	dph,r3
   0301                    1005 00123$:
   0301 85*00 81           1006 	mov	sp,_bp
   0304 D0*00              1007 	pop	_bp
   0306 22                 1008 	ret
                           1009 ;------------------------------------------------------------
                           1010 ;Allocation info for local variables in function 'vTaskDelayUntil'
                           1011 ;------------------------------------------------------------
                           1012 ;xTimeIncrement            Allocated to stack - offset -4
                           1013 ;pxPreviousWakeTime        Allocated to stack - offset 1
                           1014 ;xTimeToWake               Allocated to registers r3 r2 
                           1015 ;cAlreadyYielded           Allocated to registers r2 
                           1016 ;cShouldDelay              Allocated to stack - offset 4
                           1017 ;------------------------------------------------------------
                           1018 ;../../Source/tasks.c:522: void vTaskDelayUntil( portTickType *pxPreviousWakeTime, portTickType xTimeIncrement )
                           1019 ;	-----------------------------------------
                           1020 ;	 function vTaskDelayUntil
                           1021 ;	-----------------------------------------
   0307                    1022 _vTaskDelayUntil:
   0307 C0*00              1023 	push	_bp
   0309 85 81*00           1024 	mov	_bp,sp
                           1025 ;     genReceive
   030C C0 82              1026 	push	dpl
   030E C0 83              1027 	push	dph
   0310 C0 F0              1028 	push	b
   0312 05 81              1029 	inc	sp
                           1030 ;../../Source/tasks.c:525: portCHAR cAlreadyYielded, cShouldDelay = ( portCHAR ) pdFALSE;
                           1031 ;     genAssign
   0314 E5*00              1032 	mov	a,_bp
   0316 24 04              1033 	add	a,#0x04
   0318 F8                 1034 	mov	r0,a
   0319 76 00              1035 	mov	@r0,#0x00
                           1036 ;../../Source/tasks.c:527: vTaskSuspendAll();
                           1037 ;     genCall
   031B 12s06r05           1038 	lcall	_vTaskSuspendAll
                           1039 ;../../Source/tasks.c:530: xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
                           1040 ;     genPointerGet
                           1041 ;     genGenPointerGet
   031E E5*00              1042 	mov	a,_bp
   0320 24 01              1043 	add	a,#0x01
   0322 F8                 1044 	mov	r0,a
   0323 86 82              1045 	mov	dpl,@r0
   0325 08                 1046 	inc	r0
   0326 86 83              1047 	mov	dph,@r0
   0328 08                 1048 	inc	r0
   0329 86 F0              1049 	mov	b,@r0
   032B 12s00r00           1050 	lcall	__gptrget
   032E FE                 1051 	mov	r6,a
   032F A3                 1052 	inc	dptr
   0330 12s00r00           1053 	lcall	__gptrget
   0333 FF                 1054 	mov	r7,a
                           1055 ;     genPlus
   0334 E5*00              1056 	mov	a,_bp
   0336 24 FC              1057 	add	a,#0xfc
   0338 F8                 1058 	mov	r0,a
   0339 E6                 1059 	mov	a,@r0
   033A 25 06              1060 	add	a,ar6
   033C FD                 1061 	mov	r5,a
   033D 08                 1062 	inc	r0
   033E E6                 1063 	mov	a,@r0
   033F 35 07              1064 	addc	a,ar7
   0341 FA                 1065 	mov	r2,a
                           1066 ;     genAssign
   0342 8D 03              1067 	mov	ar3,r5
                           1068 ;../../Source/tasks.c:532: if( xTickCount < *pxPreviousWakeTime )
                           1069 ;     genAssign
   0344 90s00r07           1070 	mov	dptr,#_xTickCount
   0347 E0                 1071 	movx	a,@dptr
   0348 FC                 1072 	mov	r4,a
   0349 A3                 1073 	inc	dptr
   034A E0                 1074 	movx	a,@dptr
   034B FD                 1075 	mov	r5,a
                           1076 ;     genCmpLt
                           1077 ;     genCmp
   034C C3                 1078 	clr	c
   034D EC                 1079 	mov	a,r4
   034E 9E                 1080 	subb	a,r6
   034F ED                 1081 	mov	a,r5
   0350 9F                 1082 	subb	a,r7
                           1083 ;     genIfxJump
   0351 40 03              1084 	jc	00126$
   0353 02s03r7C           1085 	ljmp	00108$
   0356                    1086 00126$:
                           1087 ;../../Source/tasks.c:539: if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xTickCount ) )
                           1088 ;     genCmpLt
                           1089 ;     genCmp
   0356 C3                 1090 	clr	c
   0357 EB                 1091 	mov	a,r3
   0358 9E                 1092 	subb	a,r6
   0359 EA                 1093 	mov	a,r2
   035A 9F                 1094 	subb	a,r7
                           1095 ;     genIfxJump
   035B 40 03              1096 	jc	00127$
   035D 02s03r9F           1097 	ljmp	00109$
   0360                    1098 00127$:
                           1099 ;     genAssign
   0360 90s00r07           1100 	mov	dptr,#_xTickCount
   0363 E0                 1101 	movx	a,@dptr
   0364 FC                 1102 	mov	r4,a
   0365 A3                 1103 	inc	dptr
   0366 E0                 1104 	movx	a,@dptr
   0367 FD                 1105 	mov	r5,a
                           1106 ;     genCmpGt
                           1107 ;     genCmp
   0368 C3                 1108 	clr	c
   0369 EC                 1109 	mov	a,r4
   036A 9B                 1110 	subb	a,r3
   036B ED                 1111 	mov	a,r5
   036C 9A                 1112 	subb	a,r2
                           1113 ;     genIfxJump
   036D 40 03              1114 	jc	00128$
   036F 02s03r9F           1115 	ljmp	00109$
   0372                    1116 00128$:
                           1117 ;../../Source/tasks.c:541: cShouldDelay = ( portCHAR ) pdTRUE;
                           1118 ;     genAssign
   0372 E5*00              1119 	mov	a,_bp
   0374 24 04              1120 	add	a,#0x04
   0376 F8                 1121 	mov	r0,a
   0377 76 01              1122 	mov	@r0,#0x01
   0379 02s03r9F           1123 	ljmp	00109$
   037C                    1124 00108$:
                           1125 ;../../Source/tasks.c:549: if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xTickCount ) )
                           1126 ;     genCmpLt
                           1127 ;     genCmp
   037C C3                 1128 	clr	c
   037D EB                 1129 	mov	a,r3
   037E 9E                 1130 	subb	a,r6
   037F EA                 1131 	mov	a,r2
   0380 9F                 1132 	subb	a,r7
                           1133 ;     genIfxJump
   0381 50 03              1134 	jnc	00129$
   0383 02s03r98           1135 	ljmp	00104$
   0386                    1136 00129$:
                           1137 ;     genAssign
   0386 90s00r07           1138 	mov	dptr,#_xTickCount
   0389 E0                 1139 	movx	a,@dptr
   038A FC                 1140 	mov	r4,a
   038B A3                 1141 	inc	dptr
   038C E0                 1142 	movx	a,@dptr
   038D FD                 1143 	mov	r5,a
                           1144 ;     genCmpGt
                           1145 ;     genCmp
   038E C3                 1146 	clr	c
   038F EC                 1147 	mov	a,r4
   0390 9B                 1148 	subb	a,r3
   0391 ED                 1149 	mov	a,r5
   0392 9A                 1150 	subb	a,r2
                           1151 ;     genIfxJump
   0393 40 03              1152 	jc	00130$
   0395 02s03r9F           1153 	ljmp	00109$
   0398                    1154 00130$:
   0398                    1155 00104$:
                           1156 ;../../Source/tasks.c:551: cShouldDelay = ( portCHAR ) pdTRUE;
                           1157 ;     genAssign
   0398 E5*00              1158 	mov	a,_bp
   039A 24 04              1159 	add	a,#0x04
   039C F8                 1160 	mov	r0,a
   039D 76 01              1161 	mov	@r0,#0x01
   039F                    1162 00109$:
                           1163 ;../../Source/tasks.c:556: *pxPreviousWakeTime = xTimeToWake;
                           1164 ;     genPointerSet
                           1165 ;     genGenPointerSet
   039F E5*00              1166 	mov	a,_bp
   03A1 24 01              1167 	add	a,#0x01
   03A3 F8                 1168 	mov	r0,a
   03A4 86 82              1169 	mov	dpl,@r0
   03A6 08                 1170 	inc	r0
   03A7 86 83              1171 	mov	dph,@r0
   03A9 08                 1172 	inc	r0
   03AA 86 F0              1173 	mov	b,@r0
   03AC EB                 1174 	mov	a,r3
   03AD 12s00r00           1175 	lcall	__gptrput
   03B0 A3                 1176 	inc	dptr
   03B1 EA                 1177 	mov	a,r2
   03B2 12s00r00           1178 	lcall	__gptrput
                           1179 ;../../Source/tasks.c:558: if( cShouldDelay )
                           1180 ;     genIfx
   03B5 E5*00              1181 	mov	a,_bp
   03B7 24 04              1182 	add	a,#0x04
   03B9 F8                 1183 	mov	r0,a
   03BA E6                 1184 	mov	a,@r0
                           1185 ;     genIfxJump
   03BB 70 03              1186 	jnz	00131$
   03BD 02s04r89           1187 	ljmp	00114$
   03C0                    1188 00131$:
                           1189 ;../../Source/tasks.c:563: vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
                           1190 ;     genAssign
   03C0 90s00r00           1191 	mov	dptr,#_pxCurrentTCB
   03C3 E0                 1192 	movx	a,@dptr
   03C4 FC                 1193 	mov	r4,a
   03C5 A3                 1194 	inc	dptr
   03C6 E0                 1195 	movx	a,@dptr
   03C7 FD                 1196 	mov	r5,a
   03C8 A3                 1197 	inc	dptr
   03C9 E0                 1198 	movx	a,@dptr
   03CA FE                 1199 	mov	r6,a
                           1200 ;     genPlus
   03CB 74 19              1201 	mov	a,#0x19
   03CD 25 04              1202 	add	a,ar4
   03CF FC                 1203 	mov	r4,a
   03D0 74 00              1204 	mov	a,#0x00
   03D2 35 05              1205 	addc	a,ar5
   03D4 FD                 1206 	mov	r5,a
                           1207 ;     genCall
   03D5 8C 82              1208 	mov	dpl,r4
   03D7 8D 83              1209 	mov	dph,r5
   03D9 8E F0              1210 	mov	b,r6
   03DB C0 02              1211 	push	ar2
   03DD C0 03              1212 	push	ar3
   03DF 12s00r00           1213 	lcall	_vListRemove
   03E2 D0 03              1214 	pop	ar3
   03E4 D0 02              1215 	pop	ar2
                           1216 ;../../Source/tasks.c:566: listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
                           1217 ;     genAssign
   03E6 90s00r00           1218 	mov	dptr,#_pxCurrentTCB
   03E9 E0                 1219 	movx	a,@dptr
   03EA FC                 1220 	mov	r4,a
   03EB A3                 1221 	inc	dptr
   03EC E0                 1222 	movx	a,@dptr
   03ED FD                 1223 	mov	r5,a
   03EE A3                 1224 	inc	dptr
   03EF E0                 1225 	movx	a,@dptr
   03F0 FE                 1226 	mov	r6,a
                           1227 ;     genPlus
   03F1 74 19              1228 	mov	a,#0x19
   03F3 25 04              1229 	add	a,ar4
   03F5 FC                 1230 	mov	r4,a
   03F6 74 00              1231 	mov	a,#0x00
   03F8 35 05              1232 	addc	a,ar5
   03FA FD                 1233 	mov	r5,a
                           1234 ;     genPointerSet
                           1235 ;     genGenPointerSet
   03FB 8C 82              1236 	mov	dpl,r4
   03FD 8D 83              1237 	mov	dph,r5
   03FF 8E F0              1238 	mov	b,r6
   0401 EB                 1239 	mov	a,r3
   0402 12s00r00           1240 	lcall	__gptrput
   0405 A3                 1241 	inc	dptr
   0406 EA                 1242 	mov	a,r2
   0407 12s00r00           1243 	lcall	__gptrput
                           1244 ;../../Source/tasks.c:568: if( xTimeToWake < xTickCount )
                           1245 ;     genAssign
   040A 90s00r07           1246 	mov	dptr,#_xTickCount
   040D E0                 1247 	movx	a,@dptr
   040E FC                 1248 	mov	r4,a
   040F A3                 1249 	inc	dptr
   0410 E0                 1250 	movx	a,@dptr
   0411 FD                 1251 	mov	r5,a
                           1252 ;     genCmpLt
                           1253 ;     genCmp
   0412 C3                 1254 	clr	c
   0413 EB                 1255 	mov	a,r3
   0414 9C                 1256 	subb	a,r4
   0415 EA                 1257 	mov	a,r2
   0416 9D                 1258 	subb	a,r5
                           1259 ;     genIfxJump
   0417 40 03              1260 	jc	00132$
   0419 02s04r54           1261 	ljmp	00111$
   041C                    1262 00132$:
                           1263 ;../../Source/tasks.c:572: vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
                           1264 ;     genAssign
   041C 90s00r00           1265 	mov	dptr,#_pxCurrentTCB
   041F E0                 1266 	movx	a,@dptr
   0420 FA                 1267 	mov	r2,a
   0421 A3                 1268 	inc	dptr
   0422 E0                 1269 	movx	a,@dptr
   0423 FB                 1270 	mov	r3,a
   0424 A3                 1271 	inc	dptr
   0425 E0                 1272 	movx	a,@dptr
   0426 FC                 1273 	mov	r4,a
                           1274 ;     genPlus
   0427 74 19              1275 	mov	a,#0x19
   0429 25 02              1276 	add	a,ar2
   042B FA                 1277 	mov	r2,a
   042C 74 00              1278 	mov	a,#0x00
   042E 35 03              1279 	addc	a,ar3
   0430 FB                 1280 	mov	r3,a
                           1281 ;     genAssign
   0431 90s00r87           1282 	mov	dptr,#_pxOverflowDelayedTaskList
   0434 E0                 1283 	movx	a,@dptr
   0435 FD                 1284 	mov	r5,a
   0436 A3                 1285 	inc	dptr
   0437 E0                 1286 	movx	a,@dptr
   0438 FE                 1287 	mov	r6,a
   0439 A3                 1288 	inc	dptr
   043A E0                 1289 	movx	a,@dptr
   043B FF                 1290 	mov	r7,a
                           1291 ;     genIpush
   043C C0 02              1292 	push	ar2
   043E C0 03              1293 	push	ar3
   0440 C0 04              1294 	push	ar4
                           1295 ;     genCall
   0442 8D 82              1296 	mov	dpl,r5
   0444 8E 83              1297 	mov	dph,r6
   0446 8F F0              1298 	mov	b,r7
   0448 12s00r00           1299 	lcall	_vListInsert
   044B 15 81              1300 	dec	sp
   044D 15 81              1301 	dec	sp
   044F 15 81              1302 	dec	sp
   0451 02s04r89           1303 	ljmp	00114$
   0454                    1304 00111$:
                           1305 ;../../Source/tasks.c:578: vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
                           1306 ;     genAssign
   0454 90s00r00           1307 	mov	dptr,#_pxCurrentTCB
   0457 E0                 1308 	movx	a,@dptr
   0458 FA                 1309 	mov	r2,a
   0459 A3                 1310 	inc	dptr
   045A E0                 1311 	movx	a,@dptr
   045B FB                 1312 	mov	r3,a
   045C A3                 1313 	inc	dptr
   045D E0                 1314 	movx	a,@dptr
   045E FC                 1315 	mov	r4,a
                           1316 ;     genPlus
   045F 74 19              1317 	mov	a,#0x19
   0461 25 02              1318 	add	a,ar2
   0463 FA                 1319 	mov	r2,a
   0464 74 00              1320 	mov	a,#0x00
   0466 35 03              1321 	addc	a,ar3
   0468 FB                 1322 	mov	r3,a
                           1323 ;     genAssign
   0469 90s00r84           1324 	mov	dptr,#_pxDelayedTaskList
   046C E0                 1325 	movx	a,@dptr
   046D FD                 1326 	mov	r5,a
   046E A3                 1327 	inc	dptr
   046F E0                 1328 	movx	a,@dptr
   0470 FE                 1329 	mov	r6,a
   0471 A3                 1330 	inc	dptr
   0472 E0                 1331 	movx	a,@dptr
   0473 FF                 1332 	mov	r7,a
                           1333 ;     genIpush
   0474 C0 02              1334 	push	ar2
   0476 C0 03              1335 	push	ar3
   0478 C0 04              1336 	push	ar4
                           1337 ;     genCall
   047A 8D 82              1338 	mov	dpl,r5
   047C 8E 83              1339 	mov	dph,r6
   047E 8F F0              1340 	mov	b,r7
   0480 12s00r00           1341 	lcall	_vListInsert
   0483 15 81              1342 	dec	sp
   0485 15 81              1343 	dec	sp
   0487 15 81              1344 	dec	sp
   0489                    1345 00114$:
                           1346 ;../../Source/tasks.c:582: cAlreadyYielded = cTaskResumeAll();
                           1347 ;     genCall
   0489 12s06r28           1348 	lcall	_cTaskResumeAll
   048C AA 82              1349 	mov	r2,dpl
                           1350 ;     genAssign
                           1351 ;../../Source/tasks.c:586: if( !cAlreadyYielded )
                           1352 ;     genIfx
   048E EA                 1353 	mov	a,r2
                           1354 ;     genIfxJump
   048F 60 03              1355 	jz	00133$
   0491 02s04r97           1356 	ljmp	00117$
   0494                    1357 00133$:
                           1358 ;../../Source/tasks.c:588: taskYIELD(); 
                           1359 ;     genCall
   0494 12s00r00           1360 	lcall	_vPortYield
   0497                    1361 00117$:
   0497 85*00 81           1362 	mov	sp,_bp
   049A D0*00              1363 	pop	_bp
   049C 22                 1364 	ret
                           1365 ;------------------------------------------------------------
                           1366 ;Allocation info for local variables in function 'vTaskDelay'
                           1367 ;------------------------------------------------------------
                           1368 ;xTicksToDelay             Allocated to registers r2 r3 
                           1369 ;xTimeToWake               Allocated to registers r2 r3 
                           1370 ;cAlreadyYielded           Allocated to registers r4 
                           1371 ;sloc0                     Allocated to stack - offset 6
                           1372 ;------------------------------------------------------------
                           1373 ;../../Source/tasks.c:595: void vTaskDelay( portTickType xTicksToDelay )
                           1374 ;	-----------------------------------------
                           1375 ;	 function vTaskDelay
                           1376 ;	-----------------------------------------
   049D                    1377 _vTaskDelay:
   049D C0*00              1378 	push	_bp
   049F 85 81*00           1379 	mov	_bp,sp
                           1380 ;     genReceive
   04A2 AA 82              1381 	mov	r2,dpl
   04A4 AB 83              1382 	mov	r3,dph
                           1383 ;../../Source/tasks.c:598: signed portCHAR cAlreadyYielded = pdFALSE;
                           1384 ;     genAssign
   04A6 7C 00              1385 	mov	r4,#0x00
                           1386 ;../../Source/tasks.c:601: if( xTicksToDelay > ( portTickType ) 0 )
                           1387 ;     genIfx
   04A8 EA                 1388 	mov	a,r2
   04A9 4B                 1389 	orl	a,r3
                           1390 ;     genIfxJump
   04AA 70 03              1391 	jnz	00113$
   04AC 02s05r9C           1392 	ljmp	00105$
   04AF                    1393 00113$:
                           1394 ;../../Source/tasks.c:603: vTaskSuspendAll();
                           1395 ;     genCall
   04AF C0 02              1396 	push	ar2
   04B1 C0 03              1397 	push	ar3
   04B3 12s06r05           1398 	lcall	_vTaskSuspendAll
   04B6 D0 03              1399 	pop	ar3
   04B8 D0 02              1400 	pop	ar2
                           1401 ;../../Source/tasks.c:615: xTimeToWake = xTickCount + xTicksToDelay;
                           1402 ;     genAssign
   04BA 90s00r07           1403 	mov	dptr,#_xTickCount
   04BD E0                 1404 	movx	a,@dptr
   04BE FD                 1405 	mov	r5,a
   04BF A3                 1406 	inc	dptr
   04C0 E0                 1407 	movx	a,@dptr
   04C1 FE                 1408 	mov	r6,a
                           1409 ;     genPlus
   04C2 E5 02              1410 	mov	a,ar2
   04C4 25 05              1411 	add	a,ar5
   04C6 FA                 1412 	mov	r2,a
   04C7 E5 03              1413 	mov	a,ar3
   04C9 35 06              1414 	addc	a,ar6
   04CB FB                 1415 	mov	r3,a
                           1416 ;     genAssign
                           1417 ;../../Source/tasks.c:620: vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
                           1418 ;     genAssign
   04CC 90s00r00           1419 	mov	dptr,#_pxCurrentTCB
   04CF E0                 1420 	movx	a,@dptr
   04D0 FD                 1421 	mov	r5,a
   04D1 A3                 1422 	inc	dptr
   04D2 E0                 1423 	movx	a,@dptr
   04D3 FE                 1424 	mov	r6,a
   04D4 A3                 1425 	inc	dptr
   04D5 E0                 1426 	movx	a,@dptr
   04D6 FF                 1427 	mov	r7,a
                           1428 ;     genPlus
   04D7 74 19              1429 	mov	a,#0x19
   04D9 25 05              1430 	add	a,ar5
   04DB FD                 1431 	mov	r5,a
   04DC 74 00              1432 	mov	a,#0x00
   04DE 35 06              1433 	addc	a,ar6
   04E0 FE                 1434 	mov	r6,a
                           1435 ;     genCall
   04E1 8D 82              1436 	mov	dpl,r5
   04E3 8E 83              1437 	mov	dph,r6
   04E5 8F F0              1438 	mov	b,r7
   04E7 C0 02              1439 	push	ar2
   04E9 C0 03              1440 	push	ar3
   04EB 12s00r00           1441 	lcall	_vListRemove
   04EE D0 03              1442 	pop	ar3
   04F0 D0 02              1443 	pop	ar2
                           1444 ;../../Source/tasks.c:623: listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
                           1445 ;     genAssign
   04F2 90s00r00           1446 	mov	dptr,#_pxCurrentTCB
   04F5 E0                 1447 	movx	a,@dptr
   04F6 FD                 1448 	mov	r5,a
   04F7 A3                 1449 	inc	dptr
   04F8 E0                 1450 	movx	a,@dptr
   04F9 FE                 1451 	mov	r6,a
   04FA A3                 1452 	inc	dptr
   04FB E0                 1453 	movx	a,@dptr
   04FC FF                 1454 	mov	r7,a
                           1455 ;     genPlus
   04FD 74 19              1456 	mov	a,#0x19
   04FF 25 05              1457 	add	a,ar5
   0501 FD                 1458 	mov	r5,a
   0502 74 00              1459 	mov	a,#0x00
   0504 35 06              1460 	addc	a,ar6
   0506 FE                 1461 	mov	r6,a
                           1462 ;     genPointerSet
                           1463 ;     genGenPointerSet
   0507 8D 82              1464 	mov	dpl,r5
   0509 8E 83              1465 	mov	dph,r6
   050B 8F F0              1466 	mov	b,r7
   050D EA                 1467 	mov	a,r2
   050E 12s00r00           1468 	lcall	__gptrput
   0511 A3                 1469 	inc	dptr
   0512 EB                 1470 	mov	a,r3
   0513 12s00r00           1471 	lcall	__gptrput
                           1472 ;../../Source/tasks.c:625: if( xTimeToWake < xTickCount )
                           1473 ;     genAssign
   0516 90s00r07           1474 	mov	dptr,#_xTickCount
   0519 E0                 1475 	movx	a,@dptr
   051A FD                 1476 	mov	r5,a
   051B A3                 1477 	inc	dptr
   051C E0                 1478 	movx	a,@dptr
   051D FE                 1479 	mov	r6,a
                           1480 ;     genCmpLt
                           1481 ;     genCmp
   051E C3                 1482 	clr	c
   051F EA                 1483 	mov	a,r2
   0520 9D                 1484 	subb	a,r5
   0521 EB                 1485 	mov	a,r3
   0522 9E                 1486 	subb	a,r6
                           1487 ;     genIfxJump
   0523 40 03              1488 	jc	00114$
   0525 02s05r60           1489 	ljmp	00102$
   0528                    1490 00114$:
                           1491 ;../../Source/tasks.c:629: vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
                           1492 ;     genAssign
   0528 90s00r00           1493 	mov	dptr,#_pxCurrentTCB
   052B E0                 1494 	movx	a,@dptr
   052C FA                 1495 	mov	r2,a
   052D A3                 1496 	inc	dptr
   052E E0                 1497 	movx	a,@dptr
   052F FB                 1498 	mov	r3,a
   0530 A3                 1499 	inc	dptr
   0531 E0                 1500 	movx	a,@dptr
   0532 FD                 1501 	mov	r5,a
                           1502 ;     genPlus
   0533 74 19              1503 	mov	a,#0x19
   0535 25 02              1504 	add	a,ar2
   0537 FC                 1505 	mov	r4,a
   0538 74 00              1506 	mov	a,#0x00
   053A 35 03              1507 	addc	a,ar3
   053C FB                 1508 	mov	r3,a
                           1509 ;     genAssign
   053D 90s00r87           1510 	mov	dptr,#_pxOverflowDelayedTaskList
   0540 E0                 1511 	movx	a,@dptr
   0541 FE                 1512 	mov	r6,a
   0542 A3                 1513 	inc	dptr
   0543 E0                 1514 	movx	a,@dptr
   0544 FF                 1515 	mov	r7,a
   0545 A3                 1516 	inc	dptr
   0546 E0                 1517 	movx	a,@dptr
   0547 FA                 1518 	mov	r2,a
                           1519 ;     genIpush
   0548 C0 04              1520 	push	ar4
   054A C0 03              1521 	push	ar3
   054C C0 05              1522 	push	ar5
                           1523 ;     genCall
   054E 8E 82              1524 	mov	dpl,r6
   0550 8F 83              1525 	mov	dph,r7
   0552 8A F0              1526 	mov	b,r2
   0554 12s00r00           1527 	lcall	_vListInsert
   0557 15 81              1528 	dec	sp
   0559 15 81              1529 	dec	sp
   055B 15 81              1530 	dec	sp
   055D 02s05r95           1531 	ljmp	00103$
   0560                    1532 00102$:
                           1533 ;../../Source/tasks.c:635: vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
                           1534 ;     genAssign
   0560 90s00r00           1535 	mov	dptr,#_pxCurrentTCB
   0563 E0                 1536 	movx	a,@dptr
   0564 FA                 1537 	mov	r2,a
   0565 A3                 1538 	inc	dptr
   0566 E0                 1539 	movx	a,@dptr
   0567 FB                 1540 	mov	r3,a
   0568 A3                 1541 	inc	dptr
   0569 E0                 1542 	movx	a,@dptr
   056A FD                 1543 	mov	r5,a
                           1544 ;     genPlus
   056B 74 19              1545 	mov	a,#0x19
   056D 25 02              1546 	add	a,ar2
   056F FC                 1547 	mov	r4,a
   0570 74 00              1548 	mov	a,#0x00
   0572 35 03              1549 	addc	a,ar3
   0574 FB                 1550 	mov	r3,a
                           1551 ;     genAssign
   0575 90s00r84           1552 	mov	dptr,#_pxDelayedTaskList
   0578 E0                 1553 	movx	a,@dptr
   0579 FE                 1554 	mov	r6,a
   057A A3                 1555 	inc	dptr
   057B E0                 1556 	movx	a,@dptr
   057C FF                 1557 	mov	r7,a
   057D A3                 1558 	inc	dptr
   057E E0                 1559 	movx	a,@dptr
   057F FA                 1560 	mov	r2,a
                           1561 ;     genIpush
   0580 C0 04              1562 	push	ar4
   0582 C0 03              1563 	push	ar3
   0584 C0 05              1564 	push	ar5
                           1565 ;     genCall
   0586 8E 82              1566 	mov	dpl,r6
   0588 8F 83              1567 	mov	dph,r7
   058A 8A F0              1568 	mov	b,r2
   058C 12s00r00           1569 	lcall	_vListInsert
   058F 15 81              1570 	dec	sp
   0591 15 81              1571 	dec	sp
   0593 15 81              1572 	dec	sp
   0595                    1573 00103$:
                           1574 ;../../Source/tasks.c:638: cAlreadyYielded = cTaskResumeAll();
                           1575 ;     genCall
   0595 12s06r28           1576 	lcall	_cTaskResumeAll
   0598 AA 82              1577 	mov	r2,dpl
                           1578 ;     genAssign
   059A 8A 04              1579 	mov	ar4,r2
   059C                    1580 00105$:
                           1581 ;../../Source/tasks.c:643: if( !cAlreadyYielded )
                           1582 ;     genIfx
   059C EC                 1583 	mov	a,r4
                           1584 ;     genIfxJump
   059D 60 03              1585 	jz	00115$
   059F 02s05rA5           1586 	ljmp	00108$
   05A2                    1587 00115$:
                           1588 ;../../Source/tasks.c:645: taskYIELD(); 
                           1589 ;     genCall
   05A2 12s00r00           1590 	lcall	_vPortYield
   05A5                    1591 00108$:
   05A5 85*00 81           1592 	mov	sp,_bp
   05A8 D0*00              1593 	pop	_bp
   05AA 22                 1594 	ret
                           1595 ;------------------------------------------------------------
                           1596 ;Allocation info for local variables in function 'vTaskStartScheduler'
                           1597 ;------------------------------------------------------------
                           1598 ;sUsePreemption            Allocated to registers r2 r3 
                           1599 ;------------------------------------------------------------
                           1600 ;../../Source/tasks.c:798: void vTaskStartScheduler( portSHORT sUsePreemption )
                           1601 ;	-----------------------------------------
                           1602 ;	 function vTaskStartScheduler
                           1603 ;	-----------------------------------------
   05AB                    1604 _vTaskStartScheduler:
   05AB C0*00              1605 	push	_bp
   05AD 85 81*00           1606 	mov	_bp,sp
                           1607 ;     genReceive
   05B0 AA 82              1608 	mov	r2,dpl
   05B2 AB 83              1609 	mov	r3,dph
                           1610 ;../../Source/tasks.c:801: if( pxCurrentTCB != NULL )
                           1611 ;     genAssign
   05B4 90s00r00           1612 	mov	dptr,#_pxCurrentTCB
   05B7 E0                 1613 	movx	a,@dptr
   05B8 FC                 1614 	mov	r4,a
   05B9 A3                 1615 	inc	dptr
   05BA E0                 1616 	movx	a,@dptr
   05BB FD                 1617 	mov	r5,a
   05BC A3                 1618 	inc	dptr
   05BD E0                 1619 	movx	a,@dptr
   05BE FE                 1620 	mov	r6,a
                           1621 ;     genCmpEq
   05BF BC 00 09           1622 	cjne	r4,#0x00,00108$
   05C2 BD 00 06           1623 	cjne	r5,#0x00,00108$
   05C5 BE 00 03           1624 	cjne	r6,#0x00,00108$
   05C8 02s05rE9           1625 	ljmp	00105$
   05CB                    1626 00108$:
                           1627 ;../../Source/tasks.c:803: sUsingPreemption = sUsePreemption;
                           1628 ;     genAssign
   05CB 90s00r03           1629 	mov	dptr,#_sUsingPreemption
   05CE EA                 1630 	mov	a,r2
   05CF F0                 1631 	movx	@dptr,a
   05D0 A3                 1632 	inc	dptr
   05D1 EB                 1633 	mov	a,r3
   05D2 F0                 1634 	movx	@dptr,a
                           1635 ;../../Source/tasks.c:813: portDISABLE_INTERRUPTS();
                           1636 ;     genAssign
   05D3 C2 AF              1637 	clr	_EA
                           1638 ;../../Source/tasks.c:815: cSchedulerRunning = pdTRUE;
                           1639 ;     genAssign
   05D5 90s00r0B           1640 	mov	dptr,#_cSchedulerRunning
   05D8 74 01              1641 	mov	a,#0x01
   05DA F0                 1642 	movx	@dptr,a
                           1643 ;../../Source/tasks.c:816: xTickCount = ( portTickType ) 0;
                           1644 ;     genAssign
   05DB 90s00r07           1645 	mov	dptr,#_xTickCount
   05DE E4                 1646 	clr	a
   05DF F0                 1647 	movx	@dptr,a
   05E0 A3                 1648 	inc	dptr
   05E1 F0                 1649 	movx	@dptr,a
                           1650 ;../../Source/tasks.c:820: if( sPortStartScheduler( sUsePreemption ) )
                           1651 ;     genCall
   05E2 8A 82              1652 	mov	dpl,r2
   05E4 8B 83              1653 	mov	dph,r3
   05E6 12s00r00           1654 	lcall	_sPortStartScheduler
   05E9                    1655 00105$:
   05E9 85*00 81           1656 	mov	sp,_bp
   05EC D0*00              1657 	pop	_bp
   05EE 22                 1658 	ret
                           1659 ;------------------------------------------------------------
                           1660 ;Allocation info for local variables in function 'vTaskEndScheduler'
                           1661 ;------------------------------------------------------------
                           1662 ;------------------------------------------------------------
                           1663 ;../../Source/tasks.c:833: void vTaskEndScheduler( void )
                           1664 ;	-----------------------------------------
                           1665 ;	 function vTaskEndScheduler
                           1666 ;	-----------------------------------------
   05EF                    1667 _vTaskEndScheduler:
   05EF C0*00              1668 	push	_bp
   05F1 85 81*00           1669 	mov	_bp,sp
                           1670 ;../../Source/tasks.c:838: portDISABLE_INTERRUPTS();
                           1671 ;     genAssign
   05F4 C2 AF              1672 	clr	_EA
                           1673 ;../../Source/tasks.c:839: cSchedulerRunning = pdFALSE;
                           1674 ;     genAssign
   05F6 90s00r0B           1675 	mov	dptr,#_cSchedulerRunning
   05F9 74 00              1676 	mov	a,#0x00
   05FB F0                 1677 	movx	@dptr,a
                           1678 ;../../Source/tasks.c:840: vPortEndScheduler();
                           1679 ;     genCall
   05FC 12s00r00           1680 	lcall	_vPortEndScheduler
   05FF                    1681 00101$:
   05FF 85*00 81           1682 	mov	sp,_bp
   0602 D0*00              1683 	pop	_bp
   0604 22                 1684 	ret
                           1685 ;------------------------------------------------------------
                           1686 ;Allocation info for local variables in function 'vTaskSuspendAll'
                           1687 ;------------------------------------------------------------
                           1688 ;------------------------------------------------------------
                           1689 ;../../Source/tasks.c:844: void vTaskSuspendAll( void )
                           1690 ;	-----------------------------------------
                           1691 ;	 function vTaskSuspendAll
                           1692 ;	-----------------------------------------
   0605                    1693 _vTaskSuspendAll:
   0605 C0*00              1694 	push	_bp
   0607 85 81*00           1695 	mov	_bp,sp
                           1696 ;../../Source/tasks.c:846: portENTER_CRITICAL();
                           1697 ;     genInline
   060A C0 E0 C0 A8        1698 	 push ACC push IE 
                           1699 ;     genAssign
   060E C2 AF              1700 	clr	_EA
                           1701 ;../../Source/tasks.c:847: ++ucSchedulerSuspended;
                           1702 ;     genPlus
   0610 90s00r0C           1703 	mov	dptr,#_ucSchedulerSuspended
   0613 E0                 1704 	movx	a,@dptr
   0614 24 01              1705 	add	a,#0x01
   0616 F0                 1706 	movx	@dptr,a
                           1707 ;../../Source/tasks.c:848: portEXIT_CRITICAL();
                           1708 ;     genInline
   0617 D0 E0              1709 	 pop ACC 
                           1710 ;     genAnd
   0619 53 E0 80           1711 	anl	_ACC,#0x80
                           1712 ;     genOr
   061C E5 E0              1713 	mov	a,_ACC
   061E 42 A8              1714 	orl	_IE,a
                           1715 ;     genInline
   0620 D0 E0              1716 	 pop ACC 
   0622                    1717 00101$:
   0622 85*00 81           1718 	mov	sp,_bp
   0625 D0*00              1719 	pop	_bp
   0627 22                 1720 	ret
                           1721 ;------------------------------------------------------------
                           1722 ;Allocation info for local variables in function 'cTaskResumeAll'
                           1723 ;------------------------------------------------------------
                           1724 ;pxTCB                     Allocated to registers r6 r7 r2 
                           1725 ;cAlreadyYielded           Allocated to stack - offset 1
                           1726 ;sloc0                     Allocated to stack - offset 5
                           1727 ;sloc1                     Allocated to stack - offset 2
                           1728 ;------------------------------------------------------------
                           1729 ;../../Source/tasks.c:852: signed portCHAR cTaskResumeAll( void )
                           1730 ;	-----------------------------------------
                           1731 ;	 function cTaskResumeAll
                           1732 ;	-----------------------------------------
   0628                    1733 _cTaskResumeAll:
   0628 C0*00              1734 	push	_bp
   062A 85 81*00           1735 	mov	_bp,sp
   062D E5 81              1736 	mov	a,sp
   062F 24 04              1737 	add	a,#0x04
   0631 F5 81              1738 	mov	sp,a
                           1739 ;../../Source/tasks.c:855: signed portCHAR cAlreadyYielded = ( signed portCHAR ) pdFALSE;
                           1740 ;     genAssign
   0633 E5*00              1741 	mov	a,_bp
   0635 24 01              1742 	add	a,#0x01
   0637 F8                 1743 	mov	r0,a
   0638 76 00              1744 	mov	@r0,#0x00
                           1745 ;../../Source/tasks.c:862: portENTER_CRITICAL();
                           1746 ;     genInline
   063A C0 E0 C0 A8        1747 	 push ACC push IE 
                           1748 ;     genAssign
   063E C2 AF              1749 	clr	_EA
                           1750 ;../../Source/tasks.c:864: --ucSchedulerSuspended;
                           1751 ;     genMinus
   0640 90s00r0C           1752 	mov	dptr,#_ucSchedulerSuspended
                           1753 ;     genMinusDec
   0643 E0                 1754 	movx	a,@dptr
   0644 14                 1755 	dec	a
                           1756 ;     genAssign
   0645 90s00r0C           1757 	mov	dptr,#_ucSchedulerSuspended
   0648 F0                 1758 	movx	@dptr,a
                           1759 ;../../Source/tasks.c:866: if( ucSchedulerSuspended == pdFALSE )
                           1760 ;     genAssign
   0649 90s00r0C           1761 	mov	dptr,#_ucSchedulerSuspended
   064C E0                 1762 	movx	a,@dptr
   064D FB                 1763 	mov	r3,a
                           1764 ;     genCmpEq
   064E BB 00 02           1765 	cjne	r3,#0x00,00126$
   0651 80 03              1766 	sjmp	00127$
   0653                    1767 00126$:
   0653 02s07rF3           1768 	ljmp	00114$
   0656                    1769 00127$:
                           1770 ;../../Source/tasks.c:868: if( usCurrentNumberOfTasks > ( unsigned portSHORT ) 0 )
                           1771 ;     genAssign
   0656 90s00r05           1772 	mov	dptr,#_usCurrentNumberOfTasks
   0659 E0                 1773 	movx	a,@dptr
   065A FB                 1774 	mov	r3,a
   065B A3                 1775 	inc	dptr
   065C E0                 1776 	movx	a,@dptr
   065D FC                 1777 	mov	r4,a
                           1778 ;     genIfx
   065E EB                 1779 	mov	a,r3
   065F 4C                 1780 	orl	a,r4
                           1781 ;     genIfxJump
   0660 70 03              1782 	jnz	00128$
   0662 02s07rF3           1783 	ljmp	00114$
   0665                    1784 00128$:
                           1785 ;../../Source/tasks.c:872: while( ( pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) ) ) != NULL )
   0665                    1786 00103$:
                           1787 ;     genPointerGet
                           1788 ;     genFarPointerGet
   0665 90s00r8A           1789 	mov	dptr,#_xPendingReadyList
   0668 E0                 1790 	movx	a,@dptr
   0669 FB                 1791 	mov	r3,a
   066A A3                 1792 	inc	dptr
   066B E0                 1793 	movx	a,@dptr
   066C FC                 1794 	mov	r4,a
                           1795 ;     genCmpEq
   066D BB 00 07           1796 	cjne	r3,#0x00,00129$
   0670 BC 00 04           1797 	cjne	r4,#0x00,00129$
   0673 74 01              1798 	mov	a,#0x01
   0675 80 01              1799 	sjmp	00130$
   0677                    1800 00129$:
   0677 E4                 1801 	clr	a
   0678                    1802 00130$:
   0678 FB                 1803 	mov	r3,a
                           1804 ;     genNot
   0679 EB                 1805 	mov	a,r3
   067A B4 01 00           1806 	cjne	a,#0x01,00131$
   067D                    1807 00131$:
   067D E4                 1808 	clr	a
   067E 33                 1809 	rlc	a
   067F FB                 1810 	mov	r3,a
                           1811 ;     genIfx
   0680 EB                 1812 	mov	a,r3
                           1813 ;     genIfxJump
   0681 70 03              1814 	jnz	00132$
   0683 02s06rD9           1815 	ljmp	00117$
   0686                    1816 00132$:
                           1817 ;     genPointerGet
                           1818 ;     genGenPointerGet
   0686 90s00r8C           1819 	mov	dptr,#(_xPendingReadyList + 0x0002)
   0689 75 F0 01           1820 	mov	b,#0x01
   068C 12s00r00           1821 	lcall	__gptrget
   068F FB                 1822 	mov	r3,a
   0690 A3                 1823 	inc	dptr
   0691 12s00r00           1824 	lcall	__gptrget
   0694 FC                 1825 	mov	r4,a
   0695 A3                 1826 	inc	dptr
   0696 12s00r00           1827 	lcall	__gptrget
   0699 FD                 1828 	mov	r5,a
                           1829 ;     genPlus
                           1830 ;     genPlusIncr
   069A 74 02              1831 	mov	a,#0x02
   069C 25 03              1832 	add	a,ar3
   069E FB                 1833 	mov	r3,a
   069F 74 00              1834 	mov	a,#0x00
   06A1 35 04              1835 	addc	a,ar4
   06A3 FC                 1836 	mov	r4,a
                           1837 ;     genPointerGet
                           1838 ;     genGenPointerGet
   06A4 8B 82              1839 	mov	dpl,r3
   06A6 8C 83              1840 	mov	dph,r4
   06A8 8D F0              1841 	mov	b,r5
   06AA 12s00r00           1842 	lcall	__gptrget
   06AD FB                 1843 	mov	r3,a
   06AE A3                 1844 	inc	dptr
   06AF 12s00r00           1845 	lcall	__gptrget
   06B2 FC                 1846 	mov	r4,a
   06B3 A3                 1847 	inc	dptr
   06B4 12s00r00           1848 	lcall	__gptrget
   06B7 FD                 1849 	mov	r5,a
                           1850 ;     genPlus
   06B8 74 08              1851 	mov	a,#0x08
   06BA 25 03              1852 	add	a,ar3
   06BC FB                 1853 	mov	r3,a
   06BD 74 00              1854 	mov	a,#0x00
   06BF 35 04              1855 	addc	a,ar4
   06C1 FC                 1856 	mov	r4,a
                           1857 ;     genPointerGet
                           1858 ;     genGenPointerGet
   06C2 8B 82              1859 	mov	dpl,r3
   06C4 8C 83              1860 	mov	dph,r4
   06C6 8D F0              1861 	mov	b,r5
   06C8 12s00r00           1862 	lcall	__gptrget
   06CB FB                 1863 	mov	r3,a
   06CC A3                 1864 	inc	dptr
   06CD 12s00r00           1865 	lcall	__gptrget
   06D0 FC                 1866 	mov	r4,a
   06D1 A3                 1867 	inc	dptr
   06D2 12s00r00           1868 	lcall	__gptrget
   06D5 FD                 1869 	mov	r5,a
   06D6 02s06rDF           1870 	ljmp	00118$
   06D9                    1871 00117$:
                           1872 ;     genAssign
   06D9 7B 00              1873 	mov	r3,#0x00
   06DB 7C 00              1874 	mov	r4,#0x00
   06DD 7D 00              1875 	mov	r5,#0x00
   06DF                    1876 00118$:
                           1877 ;     genAssign
                           1878 ;     genAssign
   06DF 8B 06              1879 	mov	ar6,r3
   06E1 8C 07              1880 	mov	ar7,r4
   06E3 8D 02              1881 	mov	ar2,r5
                           1882 ;     genCmpEq
   06E5 BB 00 09           1883 	cjne	r3,#0x00,00133$
   06E8 BC 00 06           1884 	cjne	r4,#0x00,00133$
   06EB BD 00 03           1885 	cjne	r5,#0x00,00133$
   06EE 02s07rBE           1886 	ljmp	00105$
   06F1                    1887 00133$:
                           1888 ;../../Source/tasks.c:874: vListRemove( &( pxTCB->xEventListItem ) );
                           1889 ;     genPlus
   06F1 74 27              1890 	mov	a,#0x27
   06F3 25 06              1891 	add	a,ar6
   06F5 FB                 1892 	mov	r3,a
   06F6 74 00              1893 	mov	a,#0x00
   06F8 35 07              1894 	addc	a,ar7
   06FA FC                 1895 	mov	r4,a
   06FB 8A 05              1896 	mov	ar5,r2
                           1897 ;     genCall
   06FD 8B 82              1898 	mov	dpl,r3
   06FF 8C 83              1899 	mov	dph,r4
   0701 8D F0              1900 	mov	b,r5
   0703 C0 02              1901 	push	ar2
   0705 C0 06              1902 	push	ar6
   0707 C0 07              1903 	push	ar7
   0709 12s00r00           1904 	lcall	_vListRemove
   070C D0 07              1905 	pop	ar7
   070E D0 06              1906 	pop	ar6
   0710 D0 02              1907 	pop	ar2
                           1908 ;../../Source/tasks.c:875: vListRemove( &( pxTCB->xGenericListItem ) );
                           1909 ;     genPlus
   0712 74 19              1910 	mov	a,#0x19
   0714 25 06              1911 	add	a,ar6
   0716 FB                 1912 	mov	r3,a
   0717 74 00              1913 	mov	a,#0x00
   0719 35 07              1914 	addc	a,ar7
   071B FC                 1915 	mov	r4,a
   071C 8A 05              1916 	mov	ar5,r2
                           1917 ;     genCall
   071E 8B 82              1918 	mov	dpl,r3
   0720 8C 83              1919 	mov	dph,r4
   0722 8D F0              1920 	mov	b,r5
   0724 C0 02              1921 	push	ar2
   0726 C0 06              1922 	push	ar6
   0728 C0 07              1923 	push	ar7
   072A 12s00r00           1924 	lcall	_vListRemove
   072D D0 07              1925 	pop	ar7
   072F D0 06              1926 	pop	ar6
   0731 D0 02              1927 	pop	ar2
                           1928 ;../../Source/tasks.c:876: prvAddTaskToReadyQueue( pxTCB );
                           1929 ;     genPlus
   0733 74 19              1930 	mov	a,#0x19
   0735 25 06              1931 	add	a,ar6
   0737 FB                 1932 	mov	r3,a
   0738 74 00              1933 	mov	a,#0x00
   073A 35 07              1934 	addc	a,ar7
   073C FC                 1935 	mov	r4,a
   073D 8A 05              1936 	mov	ar5,r2
                           1937 ;     genPointerSet
                           1938 ;     genGenPointerSet
   073F 8B 82              1939 	mov	dpl,r3
   0741 8C 83              1940 	mov	dph,r4
   0743 8D F0              1941 	mov	b,r5
   0745 74 00              1942 	mov	a,#0x00
   0747 12s00r00           1943 	lcall	__gptrput
   074A A3                 1944 	inc	dptr
   074B 74 00              1945 	mov	a,#0x00
   074D 12s00r00           1946 	lcall	__gptrput
                           1947 ;     genPlus
   0750 E5*00              1948 	mov	a,_bp
   0752 24 02              1949 	add	a,#0x02
   0754 F8                 1950 	mov	r0,a
   0755 74 18              1951 	mov	a,#0x18
   0757 25 06              1952 	add	a,ar6
   0759 F6                 1953 	mov	@r0,a
   075A 74 00              1954 	mov	a,#0x00
   075C 35 07              1955 	addc	a,ar7
   075E 08                 1956 	inc	r0
   075F F6                 1957 	mov	@r0,a
   0760 08                 1958 	inc	r0
   0761 A6 02              1959 	mov	@r0,ar2
                           1960 ;     genPointerGet
                           1961 ;     genGenPointerGet
   0763 E5*00              1962 	mov	a,_bp
   0765 24 02              1963 	add	a,#0x02
   0767 F8                 1964 	mov	r0,a
   0768 86 82              1965 	mov	dpl,@r0
   076A 08                 1966 	inc	r0
   076B 86 83              1967 	mov	dph,@r0
   076D 08                 1968 	inc	r0
   076E 86 F0              1969 	mov	b,@r0
   0770 12s00r00           1970 	lcall	__gptrget
   0773 FE                 1971 	mov	r6,a
                           1972 ;     genAssign
   0774 90s00r0A           1973 	mov	dptr,#_ucTopReadyPriority
   0777 E0                 1974 	movx	a,@dptr
   0778 FA                 1975 	mov	r2,a
                           1976 ;     genCmpGt
                           1977 ;     genCmp
   0779 C3                 1978 	clr	c
   077A EA                 1979 	mov	a,r2
   077B 9E                 1980 	subb	a,r6
                           1981 ;     genIfxJump
   077C 40 03              1982 	jc	00134$
   077E 02s07r86           1983 	ljmp	00102$
   0781                    1984 00134$:
                           1985 ;     genAssign
   0781 90s00r0A           1986 	mov	dptr,#_ucTopReadyPriority
   0784 EE                 1987 	mov	a,r6
   0785 F0                 1988 	movx	@dptr,a
   0786                    1989 00102$:
                           1990 ;     genPointerGet
                           1991 ;     genGenPointerGet
   0786 E5*00              1992 	mov	a,_bp
   0788 24 02              1993 	add	a,#0x02
   078A F8                 1994 	mov	r0,a
   078B 86 82              1995 	mov	dpl,@r0
   078D 08                 1996 	inc	r0
   078E 86 83              1997 	mov	dph,@r0
   0790 08                 1998 	inc	r0
   0791 86 F0              1999 	mov	b,@r0
   0793 12s00r00           2000 	lcall	__gptrget
   0796 FA                 2001 	mov	r2,a
                           2002 ;     genMult
                           2003 ;     genMultOneByte
   0797 EA                 2004 	mov	a,r2
   0798 75 F0 16           2005 	mov	b,#0x16
   079B A4                 2006 	mul	ab
                           2007 ;     genPlus
   079C 24r00              2008 	add	a,#_pxReadyTasksLists
   079E FA                 2009 	mov	r2,a
   079F E5 F0              2010 	mov	a,b
   07A1 34s00              2011 	addc	a,#(_pxReadyTasksLists >> 8)
   07A3 FE                 2012 	mov	r6,a
                           2013 ;     genCast
   07A4 7F 01              2014 	mov	r7,#0x1
                           2015 ;     genIpush
   07A6 C0 03              2016 	push	ar3
   07A8 C0 04              2017 	push	ar4
   07AA C0 05              2018 	push	ar5
                           2019 ;     genCall
   07AC 8A 82              2020 	mov	dpl,r2
   07AE 8E 83              2021 	mov	dph,r6
   07B0 8F F0              2022 	mov	b,r7
   07B2 12s00r00           2023 	lcall	_vListInsertEnd
   07B5 15 81              2024 	dec	sp
   07B7 15 81              2025 	dec	sp
   07B9 15 81              2026 	dec	sp
   07BB 02s06r65           2027 	ljmp	00103$
   07BE                    2028 00105$:
                           2029 ;../../Source/tasks.c:882: if( ucMissedTicks > 0 )
                           2030 ;     genAssign
   07BE 90s00r0D           2031 	mov	dptr,#_ucMissedTicks
   07C1 E0                 2032 	movx	a,@dptr
   07C2 FA                 2033 	mov	r2,a
                           2034 ;     genCmpGt
                           2035 ;     genCmp
   07C3 C3                 2036 	clr	c
   07C4 74 00              2037 	mov	a,#0x00
   07C6 9A                 2038 	subb	a,r2
                           2039 ;     genIfxJump
   07C7 40 03              2040 	jc	00135$
   07C9 02s07rF3           2041 	ljmp	00114$
   07CC                    2042 00135$:
                           2043 ;../../Source/tasks.c:884: while( ucMissedTicks > 0 )
   07CC                    2044 00106$:
                           2045 ;     genAssign
   07CC 90s00r0D           2046 	mov	dptr,#_ucMissedTicks
   07CF E0                 2047 	movx	a,@dptr
   07D0 FA                 2048 	mov	r2,a
                           2049 ;     genCmpGt
                           2050 ;     genCmp
   07D1 C3                 2051 	clr	c
   07D2 74 00              2052 	mov	a,#0x00
   07D4 9A                 2053 	subb	a,r2
                           2054 ;     genIfxJump
   07D5 40 03              2055 	jc	00136$
   07D7 02s07rE9           2056 	ljmp	00108$
   07DA                    2057 00136$:
                           2058 ;../../Source/tasks.c:886: vTaskIncrementTick();
                           2059 ;     genCall
   07DA 12s08r5B           2060 	lcall	_vTaskIncrementTick
                           2061 ;../../Source/tasks.c:887: --ucMissedTicks;
                           2062 ;     genMinus
   07DD 90s00r0D           2063 	mov	dptr,#_ucMissedTicks
                           2064 ;     genMinusDec
   07E0 E0                 2065 	movx	a,@dptr
   07E1 14                 2066 	dec	a
                           2067 ;     genAssign
   07E2 90s00r0D           2068 	mov	dptr,#_ucMissedTicks
   07E5 F0                 2069 	movx	@dptr,a
   07E6 02s07rCC           2070 	ljmp	00106$
   07E9                    2071 00108$:
                           2072 ;../../Source/tasks.c:893: cAlreadyYielded = ( signed portCHAR ) pdTRUE;
                           2073 ;     genAssign
   07E9 E5*00              2074 	mov	a,_bp
   07EB 24 01              2075 	add	a,#0x01
   07ED F8                 2076 	mov	r0,a
   07EE 76 01              2077 	mov	@r0,#0x01
                           2078 ;../../Source/tasks.c:894: taskYIELD();
                           2079 ;     genCall
   07F0 12s00r00           2080 	lcall	_vPortYield
   07F3                    2081 00114$:
                           2082 ;../../Source/tasks.c:899: portEXIT_CRITICAL();
                           2083 ;     genInline
   07F3 D0 E0              2084 	 pop ACC 
                           2085 ;     genAnd
   07F5 53 E0 80           2086 	anl	_ACC,#0x80
                           2087 ;     genOr
   07F8 E5 E0              2088 	mov	a,_ACC
   07FA 42 A8              2089 	orl	_IE,a
                           2090 ;     genInline
   07FC D0 E0              2091 	 pop ACC 
                           2092 ;../../Source/tasks.c:901: return cAlreadyYielded;
                           2093 ;     genRet
   07FE E5*00              2094 	mov	a,_bp
   0800 24 01              2095 	add	a,#0x01
   0802 F8                 2096 	mov	r0,a
   0803 86 82              2097 	mov	dpl,@r0
   0805                    2098 00115$:
   0805 85*00 81           2099 	mov	sp,_bp
   0808 D0*00              2100 	pop	_bp
   080A 22                 2101 	ret
                           2102 ;------------------------------------------------------------
                           2103 ;Allocation info for local variables in function 'xTaskGetTickCount'
                           2104 ;------------------------------------------------------------
                           2105 ;xTicks                    Allocated to registers r2 r3 
                           2106 ;------------------------------------------------------------
                           2107 ;../../Source/tasks.c:915: volatile portTickType xTaskGetTickCount( void )
                           2108 ;	-----------------------------------------
                           2109 ;	 function xTaskGetTickCount
                           2110 ;	-----------------------------------------
   080B                    2111 _xTaskGetTickCount:
   080B C0*00              2112 	push	_bp
   080D 85 81*00           2113 	mov	_bp,sp
                           2114 ;../../Source/tasks.c:920: taskENTER_CRITICAL();
                           2115 ;     genInline
   0810 C0 E0 C0 A8        2116 	 push ACC push IE 
                           2117 ;     genAssign
   0814 C2 AF              2118 	clr	_EA
                           2119 ;../../Source/tasks.c:922: xTicks = xTickCount;
                           2120 ;     genAssign
   0816 90s00r07           2121 	mov	dptr,#_xTickCount
   0819 E0                 2122 	movx	a,@dptr
   081A FA                 2123 	mov	r2,a
   081B A3                 2124 	inc	dptr
   081C E0                 2125 	movx	a,@dptr
   081D FB                 2126 	mov	r3,a
                           2127 ;     genAssign
                           2128 ;../../Source/tasks.c:924: taskEXIT_CRITICAL();
                           2129 ;     genInline
   081E D0 E0              2130 	 pop ACC 
                           2131 ;     genAnd
   0820 53 E0 80           2132 	anl	_ACC,#0x80
                           2133 ;     genOr
   0823 E5 E0              2134 	mov	a,_ACC
   0825 42 A8              2135 	orl	_IE,a
                           2136 ;     genInline
   0827 D0 E0              2137 	 pop ACC 
                           2138 ;../../Source/tasks.c:926: return xTicks;
                           2139 ;     genRet
   0829 8A 82              2140 	mov	dpl,r2
   082B 8B 83              2141 	mov	dph,r3
   082D                    2142 00101$:
   082D 85*00 81           2143 	mov	sp,_bp
   0830 D0*00              2144 	pop	_bp
   0832 22                 2145 	ret
                           2146 ;------------------------------------------------------------
                           2147 ;Allocation info for local variables in function 'usTaskGetNumberOfTasks'
                           2148 ;------------------------------------------------------------
                           2149 ;usNumberOfTasks           Allocated to registers r2 r3 
                           2150 ;------------------------------------------------------------
                           2151 ;../../Source/tasks.c:930: unsigned portSHORT usTaskGetNumberOfTasks( void )
                           2152 ;	-----------------------------------------
                           2153 ;	 function usTaskGetNumberOfTasks
                           2154 ;	-----------------------------------------
   0833                    2155 _usTaskGetNumberOfTasks:
   0833 C0*00              2156 	push	_bp
   0835 85 81*00           2157 	mov	_bp,sp
                           2158 ;../../Source/tasks.c:934: taskENTER_CRITICAL();
                           2159 ;     genInline
   0838 C0 E0 C0 A8        2160 	 push ACC push IE 
                           2161 ;     genAssign
   083C C2 AF              2162 	clr	_EA
                           2163 ;../../Source/tasks.c:935: usNumberOfTasks = usCurrentNumberOfTasks;
                           2164 ;     genAssign
   083E 90s00r05           2165 	mov	dptr,#_usCurrentNumberOfTasks
   0841 E0                 2166 	movx	a,@dptr
   0842 FA                 2167 	mov	r2,a
   0843 A3                 2168 	inc	dptr
   0844 E0                 2169 	movx	a,@dptr
   0845 FB                 2170 	mov	r3,a
                           2171 ;     genAssign
                           2172 ;../../Source/tasks.c:936: taskEXIT_CRITICAL();
                           2173 ;     genInline
   0846 D0 E0              2174 	 pop ACC 
                           2175 ;     genAnd
   0848 53 E0 80           2176 	anl	_ACC,#0x80
                           2177 ;     genOr
   084B E5 E0              2178 	mov	a,_ACC
   084D 42 A8              2179 	orl	_IE,a
                           2180 ;     genInline
   084F D0 E0              2181 	 pop ACC 
                           2182 ;../../Source/tasks.c:938: return usNumberOfTasks;
                           2183 ;     genRet
   0851 8A 82              2184 	mov	dpl,r2
   0853 8B 83              2185 	mov	dph,r3
   0855                    2186 00101$:
   0855 85*00 81           2187 	mov	sp,_bp
   0858 D0*00              2188 	pop	_bp
   085A 22                 2189 	ret
                           2190 ;------------------------------------------------------------
                           2191 ;Allocation info for local variables in function 'vTaskIncrementTick'
                           2192 ;------------------------------------------------------------
                           2193 ;pxTemp                    Allocated to stack - offset 1
                           2194 ;pxTCB                     Allocated to registers r5 r6 r7 
                           2195 ;sloc0                     Allocated to stack - offset 4
                           2196 ;sloc1                     Allocated to stack - offset 6
                           2197 ;------------------------------------------------------------
                           2198 ;../../Source/tasks.c:1043: inline void vTaskIncrementTick( void )
                           2199 ;	-----------------------------------------
                           2200 ;	 function vTaskIncrementTick
                           2201 ;	-----------------------------------------
   085B                    2202 _vTaskIncrementTick:
   085B C0*00              2203 	push	_bp
   085D 85 81*00           2204 	mov	_bp,sp
   0860 E5 81              2205 	mov	a,sp
   0862 24 08              2206 	add	a,#0x08
   0864 F5 81              2207 	mov	sp,a
                           2208 ;../../Source/tasks.c:1048: if( ucSchedulerSuspended == ( unsigned portCHAR ) pdFALSE )
                           2209 ;     genAssign
   0866 90s00r0C           2210 	mov	dptr,#_ucSchedulerSuspended
   0869 E0                 2211 	movx	a,@dptr
   086A FA                 2212 	mov	r2,a
                           2213 ;     genCmpEq
   086B BA 00 02           2214 	cjne	r2,#0x00,00127$
   086E 80 03              2215 	sjmp	00128$
   0870                    2216 00127$:
   0870 02s0ArE6           2217 	ljmp	00113$
   0873                    2218 00128$:
                           2219 ;../../Source/tasks.c:1050: ++xTickCount;
                           2220 ;     genPlus
   0873 90s00r07           2221 	mov	dptr,#_xTickCount
   0876 E0                 2222 	movx	a,@dptr
   0877 24 01              2223 	add	a,#0x01
   0879 F0                 2224 	movx	@dptr,a
   087A A3                 2225 	inc	dptr
   087B E0                 2226 	movx	a,@dptr
   087C 34 00              2227 	addc	a,#0x00
   087E F0                 2228 	movx	@dptr,a
                           2229 ;../../Source/tasks.c:1051: if( xTickCount == ( portTickType ) 0 )
                           2230 ;     genAssign
   087F 90s00r07           2231 	mov	dptr,#_xTickCount
   0882 E0                 2232 	movx	a,@dptr
   0883 FA                 2233 	mov	r2,a
   0884 A3                 2234 	inc	dptr
   0885 E0                 2235 	movx	a,@dptr
   0886 FB                 2236 	mov	r3,a
                           2237 ;     genCmpEq
   0887 BA 00 05           2238 	cjne	r2,#0x00,00129$
   088A BB 00 02           2239 	cjne	r3,#0x00,00129$
   088D 80 03              2240 	sjmp	00130$
   088F                    2241 00129$:
   088F 02s08rD2           2242 	ljmp	00109$
   0892                    2243 00130$:
                           2244 ;../../Source/tasks.c:1057: pxTemp = pxDelayedTaskList;
                           2245 ;     genAssign
   0892 90s00r84           2246 	mov	dptr,#_pxDelayedTaskList
   0895 E0                 2247 	movx	a,@dptr
   0896 FA                 2248 	mov	r2,a
   0897 A3                 2249 	inc	dptr
   0898 E0                 2250 	movx	a,@dptr
   0899 FB                 2251 	mov	r3,a
   089A A3                 2252 	inc	dptr
   089B E0                 2253 	movx	a,@dptr
   089C FC                 2254 	mov	r4,a
                           2255 ;     genAssign
   089D E5*00              2256 	mov	a,_bp
   089F 24 01              2257 	add	a,#0x01
   08A1 F8                 2258 	mov	r0,a
   08A2 A6 02              2259 	mov	@r0,ar2
   08A4 08                 2260 	inc	r0
   08A5 A6 03              2261 	mov	@r0,ar3
   08A7 08                 2262 	inc	r0
   08A8 A6 04              2263 	mov	@r0,ar4
                           2264 ;../../Source/tasks.c:1058: pxDelayedTaskList = pxOverflowDelayedTaskList;
                           2265 ;     genAssign
   08AA 90s00r87           2266 	mov	dptr,#_pxOverflowDelayedTaskList
   08AD E0                 2267 	movx	a,@dptr
   08AE FA                 2268 	mov	r2,a
   08AF A3                 2269 	inc	dptr
   08B0 E0                 2270 	movx	a,@dptr
   08B1 FB                 2271 	mov	r3,a
   08B2 A3                 2272 	inc	dptr
   08B3 E0                 2273 	movx	a,@dptr
   08B4 FC                 2274 	mov	r4,a
                           2275 ;     genAssign
   08B5 90s00r84           2276 	mov	dptr,#_pxDelayedTaskList
   08B8 EA                 2277 	mov	a,r2
   08B9 F0                 2278 	movx	@dptr,a
   08BA A3                 2279 	inc	dptr
   08BB EB                 2280 	mov	a,r3
   08BC F0                 2281 	movx	@dptr,a
   08BD A3                 2282 	inc	dptr
   08BE EC                 2283 	mov	a,r4
   08BF F0                 2284 	movx	@dptr,a
                           2285 ;../../Source/tasks.c:1059: pxOverflowDelayedTaskList = pxTemp;
                           2286 ;     genAssign
   08C0 E5*00              2287 	mov	a,_bp
   08C2 24 01              2288 	add	a,#0x01
   08C4 F8                 2289 	mov	r0,a
   08C5 90s00r87           2290 	mov	dptr,#_pxOverflowDelayedTaskList
   08C8 E6                 2291 	mov	a,@r0
   08C9 F0                 2292 	movx	@dptr,a
   08CA 08                 2293 	inc	r0
   08CB A3                 2294 	inc	dptr
   08CC E6                 2295 	mov	a,@r0
   08CD F0                 2296 	movx	@dptr,a
   08CE 08                 2297 	inc	r0
   08CF A3                 2298 	inc	dptr
   08D0 E6                 2299 	mov	a,@r0
   08D1 F0                 2300 	movx	@dptr,a
                           2301 ;../../Source/tasks.c:1063: prvCheckDelayedTasks();
   08D2                    2302 00109$:
                           2303 ;     genAssign
   08D2 90s00r84           2304 	mov	dptr,#_pxDelayedTaskList
   08D5 E0                 2305 	movx	a,@dptr
   08D6 FA                 2306 	mov	r2,a
   08D7 A3                 2307 	inc	dptr
   08D8 E0                 2308 	movx	a,@dptr
   08D9 FB                 2309 	mov	r3,a
   08DA A3                 2310 	inc	dptr
   08DB E0                 2311 	movx	a,@dptr
   08DC FC                 2312 	mov	r4,a
                           2313 ;     genPointerGet
                           2314 ;     genGenPointerGet
   08DD 8A 82              2315 	mov	dpl,r2
   08DF 8B 83              2316 	mov	dph,r3
   08E1 8C F0              2317 	mov	b,r4
   08E3 12s00r00           2318 	lcall	__gptrget
   08E6 FA                 2319 	mov	r2,a
   08E7 A3                 2320 	inc	dptr
   08E8 12s00r00           2321 	lcall	__gptrget
   08EB FB                 2322 	mov	r3,a
                           2323 ;     genCmpEq
   08EC BA 00 07           2324 	cjne	r2,#0x00,00131$
   08EF BB 00 04           2325 	cjne	r3,#0x00,00131$
   08F2 74 01              2326 	mov	a,#0x01
   08F4 80 01              2327 	sjmp	00132$
   08F6                    2328 00131$:
   08F6 E4                 2329 	clr	a
   08F7                    2330 00132$:
   08F7 FA                 2331 	mov	r2,a
                           2332 ;     genNot
   08F8 EA                 2333 	mov	a,r2
   08F9 B4 01 00           2334 	cjne	a,#0x01,00133$
   08FC                    2335 00133$:
   08FC E4                 2336 	clr	a
   08FD 33                 2337 	rlc	a
   08FE FA                 2338 	mov	r2,a
                           2339 ;     genIfx
   08FF EA                 2340 	mov	a,r2
                           2341 ;     genIfxJump
   0900 70 03              2342 	jnz	00134$
   0902 02s09r6D           2343 	ljmp	00117$
   0905                    2344 00134$:
                           2345 ;     genAssign
   0905 90s00r84           2346 	mov	dptr,#_pxDelayedTaskList
   0908 E0                 2347 	movx	a,@dptr
   0909 FA                 2348 	mov	r2,a
   090A A3                 2349 	inc	dptr
   090B E0                 2350 	movx	a,@dptr
   090C FB                 2351 	mov	r3,a
   090D A3                 2352 	inc	dptr
   090E E0                 2353 	movx	a,@dptr
   090F FC                 2354 	mov	r4,a
                           2355 ;     genPlus
                           2356 ;     genPlusIncr
   0910 74 02              2357 	mov	a,#0x02
   0912 25 02              2358 	add	a,ar2
   0914 FA                 2359 	mov	r2,a
   0915 74 00              2360 	mov	a,#0x00
   0917 35 03              2361 	addc	a,ar3
   0919 FB                 2362 	mov	r3,a
                           2363 ;     genPointerGet
                           2364 ;     genGenPointerGet
   091A 8A 82              2365 	mov	dpl,r2
   091C 8B 83              2366 	mov	dph,r3
   091E 8C F0              2367 	mov	b,r4
   0920 12s00r00           2368 	lcall	__gptrget
   0923 FA                 2369 	mov	r2,a
   0924 A3                 2370 	inc	dptr
   0925 12s00r00           2371 	lcall	__gptrget
   0928 FB                 2372 	mov	r3,a
   0929 A3                 2373 	inc	dptr
   092A 12s00r00           2374 	lcall	__gptrget
   092D FC                 2375 	mov	r4,a
                           2376 ;     genPlus
                           2377 ;     genPlusIncr
   092E 74 02              2378 	mov	a,#0x02
   0930 25 02              2379 	add	a,ar2
   0932 FA                 2380 	mov	r2,a
   0933 74 00              2381 	mov	a,#0x00
   0935 35 03              2382 	addc	a,ar3
   0937 FB                 2383 	mov	r3,a
                           2384 ;     genPointerGet
                           2385 ;     genGenPointerGet
   0938 8A 82              2386 	mov	dpl,r2
   093A 8B 83              2387 	mov	dph,r3
   093C 8C F0              2388 	mov	b,r4
   093E 12s00r00           2389 	lcall	__gptrget
   0941 FA                 2390 	mov	r2,a
   0942 A3                 2391 	inc	dptr
   0943 12s00r00           2392 	lcall	__gptrget
   0946 FB                 2393 	mov	r3,a
   0947 A3                 2394 	inc	dptr
   0948 12s00r00           2395 	lcall	__gptrget
   094B FC                 2396 	mov	r4,a
                           2397 ;     genPlus
   094C 74 08              2398 	mov	a,#0x08
   094E 25 02              2399 	add	a,ar2
   0950 FA                 2400 	mov	r2,a
   0951 74 00              2401 	mov	a,#0x00
   0953 35 03              2402 	addc	a,ar3
   0955 FB                 2403 	mov	r3,a
                           2404 ;     genPointerGet
                           2405 ;     genGenPointerGet
   0956 8A 82              2406 	mov	dpl,r2
   0958 8B 83              2407 	mov	dph,r3
   095A 8C F0              2408 	mov	b,r4
   095C 12s00r00           2409 	lcall	__gptrget
   095F FA                 2410 	mov	r2,a
   0960 A3                 2411 	inc	dptr
   0961 12s00r00           2412 	lcall	__gptrget
   0964 FB                 2413 	mov	r3,a
   0965 A3                 2414 	inc	dptr
   0966 12s00r00           2415 	lcall	__gptrget
   0969 FC                 2416 	mov	r4,a
   096A 02s09r73           2417 	ljmp	00118$
   096D                    2418 00117$:
                           2419 ;     genAssign
   096D 7A 00              2420 	mov	r2,#0x00
   096F 7B 00              2421 	mov	r3,#0x00
   0971 7C 00              2422 	mov	r4,#0x00
   0973                    2423 00118$:
                           2424 ;     genAssign
                           2425 ;     genAssign
   0973 8A 05              2426 	mov	ar5,r2
   0975 8B 06              2427 	mov	ar6,r3
   0977 8C 07              2428 	mov	ar7,r4
                           2429 ;     genCmpEq
   0979 BA 00 09           2430 	cjne	r2,#0x00,00135$
   097C BB 00 06           2431 	cjne	r3,#0x00,00135$
   097F BC 00 03           2432 	cjne	r4,#0x00,00135$
   0982 02s0ArED           2433 	ljmp	00115$
   0985                    2434 00135$:
                           2435 ;     genPlus
   0985 74 19              2436 	mov	a,#0x19
   0987 25 05              2437 	add	a,ar5
   0989 FA                 2438 	mov	r2,a
   098A 74 00              2439 	mov	a,#0x00
   098C 35 06              2440 	addc	a,ar6
   098E FB                 2441 	mov	r3,a
   098F 8F 04              2442 	mov	ar4,r7
                           2443 ;     genIpush
   0991 C0 05              2444 	push	ar5
   0993 C0 06              2445 	push	ar6
   0995 C0 07              2446 	push	ar7
                           2447 ;     genPointerGet
                           2448 ;     genGenPointerGet
   0997 8A 82              2449 	mov	dpl,r2
   0999 8B 83              2450 	mov	dph,r3
   099B 8C F0              2451 	mov	b,r4
   099D E5*00              2452 	mov	a,_bp
   099F 24 04              2453 	add	a,#0x04
   09A1 F8                 2454 	mov	r0,a
   09A2 12s00r00           2455 	lcall	__gptrget
   09A5 F6                 2456 	mov	@r0,a
   09A6 A3                 2457 	inc	dptr
   09A7 12s00r00           2458 	lcall	__gptrget
   09AA 08                 2459 	inc	r0
   09AB F6                 2460 	mov	@r0,a
                           2461 ;     genAssign
   09AC 90s00r07           2462 	mov	dptr,#_xTickCount
   09AF E0                 2463 	movx	a,@dptr
   09B0 FF                 2464 	mov	r7,a
   09B1 A3                 2465 	inc	dptr
   09B2 E0                 2466 	movx	a,@dptr
   09B3 FD                 2467 	mov	r5,a
                           2468 ;     genCmpLt
   09B4 E5*00              2469 	mov	a,_bp
   09B6 24 04              2470 	add	a,#0x04
   09B8 F8                 2471 	mov	r0,a
                           2472 ;     genCmp
   09B9 C3                 2473 	clr	c
   09BA EF                 2474 	mov	a,r7
   09BB 96                 2475 	subb	a,@r0
   09BC ED                 2476 	mov	a,r5
   09BD 08                 2477 	inc	r0
   09BE 96                 2478 	subb	a,@r0
   09BF E4                 2479 	clr	a
   09C0 33                 2480 	rlc	a
                           2481 ;     genIpop
   09C1 D0 07              2482 	pop	ar7
   09C3 D0 06              2483 	pop	ar6
   09C5 D0 05              2484 	pop	ar5
                           2485 ;     genIfx
                           2486 ;     genIfxJump
   09C7 60 03              2487 	jz	00136$
   09C9 02s0ArED           2488 	ljmp	00115$
   09CC                    2489 00136$:
                           2490 ;     genCall
   09CC 8A 82              2491 	mov	dpl,r2
   09CE 8B 83              2492 	mov	dph,r3
   09D0 8C F0              2493 	mov	b,r4
   09D2 C0 02              2494 	push	ar2
   09D4 C0 03              2495 	push	ar3
   09D6 C0 04              2496 	push	ar4
   09D8 C0 05              2497 	push	ar5
   09DA C0 06              2498 	push	ar6
   09DC C0 07              2499 	push	ar7
   09DE 12s00r00           2500 	lcall	_vListRemove
   09E1 D0 07              2501 	pop	ar7
   09E3 D0 06              2502 	pop	ar6
   09E5 D0 05              2503 	pop	ar5
   09E7 D0 04              2504 	pop	ar4
   09E9 D0 03              2505 	pop	ar3
   09EB D0 02              2506 	pop	ar2
                           2507 ;     genPlus
   09ED E5*00              2508 	mov	a,_bp
   09EF 24 06              2509 	add	a,#0x06
   09F1 F8                 2510 	mov	r0,a
   09F2 74 27              2511 	mov	a,#0x27
   09F4 25 05              2512 	add	a,ar5
   09F6 F6                 2513 	mov	@r0,a
   09F7 74 00              2514 	mov	a,#0x00
   09F9 35 06              2515 	addc	a,ar6
   09FB 08                 2516 	inc	r0
   09FC F6                 2517 	mov	@r0,a
   09FD 08                 2518 	inc	r0
   09FE A6 07              2519 	mov	@r0,ar7
                           2520 ;     genIpush
   0A00 C0 05              2521 	push	ar5
   0A02 C0 06              2522 	push	ar6
   0A04 C0 07              2523 	push	ar7
                           2524 ;     genPlus
   0A06 E5*00              2525 	mov	a,_bp
   0A08 24 06              2526 	add	a,#0x06
   0A0A F8                 2527 	mov	r0,a
   0A0B 74 0B              2528 	mov	a,#0x0B
   0A0D 26                 2529 	add	a,@r0
   0A0E FD                 2530 	mov	r5,a
   0A0F 74 00              2531 	mov	a,#0x00
   0A11 08                 2532 	inc	r0
   0A12 36                 2533 	addc	a,@r0
   0A13 FE                 2534 	mov	r6,a
   0A14 08                 2535 	inc	r0
   0A15 86 07              2536 	mov	ar7,@r0
                           2537 ;     genPointerGet
                           2538 ;     genGenPointerGet
   0A17 8D 82              2539 	mov	dpl,r5
   0A19 8E 83              2540 	mov	dph,r6
   0A1B 8F F0              2541 	mov	b,r7
   0A1D 12s00r00           2542 	lcall	__gptrget
   0A20 FD                 2543 	mov	r5,a
   0A21 A3                 2544 	inc	dptr
   0A22 12s00r00           2545 	lcall	__gptrget
   0A25 FE                 2546 	mov	r6,a
   0A26 A3                 2547 	inc	dptr
   0A27 12s00r00           2548 	lcall	__gptrget
   0A2A FF                 2549 	mov	r7,a
                           2550 ;     genIfx
   0A2B ED                 2551 	mov	a,r5
   0A2C 4E                 2552 	orl	a,r6
   0A2D 4F                 2553 	orl	a,r7
                           2554 ;     genIpop
   0A2E D0 07              2555 	pop	ar7
   0A30 D0 06              2556 	pop	ar6
   0A32 D0 05              2557 	pop	ar5
                           2558 ;     genIfxJump
   0A34 70 03              2559 	jnz	00137$
   0A36 02s0Ar61           2560 	ljmp	00106$
   0A39                    2561 00137$:
                           2562 ;     genCall
   0A39 E5*00              2563 	mov	a,_bp
   0A3B 24 06              2564 	add	a,#0x06
   0A3D F8                 2565 	mov	r0,a
   0A3E 86 82              2566 	mov	dpl,@r0
   0A40 08                 2567 	inc	r0
   0A41 86 83              2568 	mov	dph,@r0
   0A43 08                 2569 	inc	r0
   0A44 86 F0              2570 	mov	b,@r0
   0A46 C0 02              2571 	push	ar2
   0A48 C0 03              2572 	push	ar3
   0A4A C0 04              2573 	push	ar4
   0A4C C0 05              2574 	push	ar5
   0A4E C0 06              2575 	push	ar6
   0A50 C0 07              2576 	push	ar7
   0A52 12s00r00           2577 	lcall	_vListRemove
   0A55 D0 07              2578 	pop	ar7
   0A57 D0 06              2579 	pop	ar6
   0A59 D0 05              2580 	pop	ar5
   0A5B D0 04              2581 	pop	ar4
   0A5D D0 03              2582 	pop	ar3
   0A5F D0 02              2583 	pop	ar2
   0A61                    2584 00106$:
                           2585 ;     genPointerSet
                           2586 ;     genGenPointerSet
   0A61 8A 82              2587 	mov	dpl,r2
   0A63 8B 83              2588 	mov	dph,r3
   0A65 8C F0              2589 	mov	b,r4
   0A67 74 00              2590 	mov	a,#0x00
   0A69 12s00r00           2591 	lcall	__gptrput
   0A6C A3                 2592 	inc	dptr
   0A6D 74 00              2593 	mov	a,#0x00
   0A6F 12s00r00           2594 	lcall	__gptrput
                           2595 ;     genPlus
   0A72 74 18              2596 	mov	a,#0x18
   0A74 25 05              2597 	add	a,ar5
   0A76 FD                 2598 	mov	r5,a
   0A77 74 00              2599 	mov	a,#0x00
   0A79 35 06              2600 	addc	a,ar6
   0A7B FE                 2601 	mov	r6,a
                           2602 ;     genPointerGet
                           2603 ;     genGenPointerGet
   0A7C 8D 82              2604 	mov	dpl,r5
   0A7E 8E 83              2605 	mov	dph,r6
   0A80 8F F0              2606 	mov	b,r7
   0A82 E5*00              2607 	mov	a,_bp
   0A84 24 06              2608 	add	a,#0x06
   0A86 F8                 2609 	mov	r0,a
   0A87 12s00r00           2610 	lcall	__gptrget
   0A8A F6                 2611 	mov	@r0,a
                           2612 ;     genIpush
   0A8B C0 02              2613 	push	ar2
   0A8D C0 03              2614 	push	ar3
   0A8F C0 04              2615 	push	ar4
                           2616 ;     genAssign
   0A91 90s00r0A           2617 	mov	dptr,#_ucTopReadyPriority
   0A94 E0                 2618 	movx	a,@dptr
   0A95 FA                 2619 	mov	r2,a
                           2620 ;     genCmpGt
   0A96 E5*00              2621 	mov	a,_bp
   0A98 24 06              2622 	add	a,#0x06
   0A9A F8                 2623 	mov	r0,a
                           2624 ;     genCmp
   0A9B C3                 2625 	clr	c
   0A9C EA                 2626 	mov	a,r2
   0A9D 96                 2627 	subb	a,@r0
   0A9E E4                 2628 	clr	a
   0A9F 33                 2629 	rlc	a
                           2630 ;     genIpop
   0AA0 D0 04              2631 	pop	ar4
   0AA2 D0 03              2632 	pop	ar3
   0AA4 D0 02              2633 	pop	ar2
                           2634 ;     genIfx
                           2635 ;     genIfxJump
   0AA6 70 03              2636 	jnz	00138$
   0AA8 02s0ArB5           2637 	ljmp	00108$
   0AAB                    2638 00138$:
                           2639 ;     genAssign
   0AAB E5*00              2640 	mov	a,_bp
   0AAD 24 06              2641 	add	a,#0x06
   0AAF F8                 2642 	mov	r0,a
   0AB0 90s00r0A           2643 	mov	dptr,#_ucTopReadyPriority
   0AB3 E6                 2644 	mov	a,@r0
   0AB4 F0                 2645 	movx	@dptr,a
   0AB5                    2646 00108$:
                           2647 ;     genPointerGet
                           2648 ;     genGenPointerGet
   0AB5 8D 82              2649 	mov	dpl,r5
   0AB7 8E 83              2650 	mov	dph,r6
   0AB9 8F F0              2651 	mov	b,r7
   0ABB 12s00r00           2652 	lcall	__gptrget
   0ABE FD                 2653 	mov	r5,a
                           2654 ;     genMult
                           2655 ;     genMultOneByte
   0ABF ED                 2656 	mov	a,r5
   0AC0 75 F0 16           2657 	mov	b,#0x16
   0AC3 A4                 2658 	mul	ab
                           2659 ;     genPlus
   0AC4 24r00              2660 	add	a,#_pxReadyTasksLists
   0AC6 FD                 2661 	mov	r5,a
   0AC7 E5 F0              2662 	mov	a,b
   0AC9 34s00              2663 	addc	a,#(_pxReadyTasksLists >> 8)
   0ACB FE                 2664 	mov	r6,a
                           2665 ;     genCast
   0ACC 7F 01              2666 	mov	r7,#0x1
                           2667 ;     genIpush
   0ACE C0 02              2668 	push	ar2
   0AD0 C0 03              2669 	push	ar3
   0AD2 C0 04              2670 	push	ar4
                           2671 ;     genCall
   0AD4 8D 82              2672 	mov	dpl,r5
   0AD6 8E 83              2673 	mov	dph,r6
   0AD8 8F F0              2674 	mov	b,r7
   0ADA 12s00r00           2675 	lcall	_vListInsertEnd
   0ADD 15 81              2676 	dec	sp
   0ADF 15 81              2677 	dec	sp
   0AE1 15 81              2678 	dec	sp
   0AE3 02s08rD2           2679 	ljmp	00109$
   0AE6                    2680 00113$:
                           2681 ;../../Source/tasks.c:1067: ++ucMissedTicks;
                           2682 ;     genPlus
   0AE6 90s00r0D           2683 	mov	dptr,#_ucMissedTicks
   0AE9 E0                 2684 	movx	a,@dptr
   0AEA 24 01              2685 	add	a,#0x01
   0AEC F0                 2686 	movx	@dptr,a
   0AED                    2687 00115$:
   0AED 85*00 81           2688 	mov	sp,_bp
   0AF0 D0*00              2689 	pop	_bp
   0AF2 22                 2690 	ret
                           2691 ;------------------------------------------------------------
                           2692 ;Allocation info for local variables in function 'vTaskSwitchContext'
                           2693 ;------------------------------------------------------------
                           2694 ;------------------------------------------------------------
                           2695 ;../../Source/tasks.c:1133: inline void vTaskSwitchContext( void )
                           2696 ;	-----------------------------------------
                           2697 ;	 function vTaskSwitchContext
                           2698 ;	-----------------------------------------
   0AF3                    2699 _vTaskSwitchContext:
   0AF3 C0*00              2700 	push	_bp
   0AF5 85 81*00           2701 	mov	_bp,sp
                           2702 ;../../Source/tasks.c:1135: if( ucSchedulerSuspended != pdFALSE )
                           2703 ;     genAssign
   0AF8 90s00r0C           2704 	mov	dptr,#_ucSchedulerSuspended
   0AFB E0                 2705 	movx	a,@dptr
   0AFC FA                 2706 	mov	r2,a
                           2707 ;     genCmpEq
   0AFD BA 00 03           2708 	cjne	r2,#0x00,00114$
   0B00 02s0Br06           2709 	ljmp	00103$
   0B03                    2710 00114$:
                           2711 ;../../Source/tasks.c:1139: return;
                           2712 ;     genRet
   0B03 02s0CrBA           2713 	ljmp	00108$
                           2714 ;../../Source/tasks.c:1143: while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ ucTopReadyPriority ] ) ) )
   0B06                    2715 00103$:
                           2716 ;     genAssign
   0B06 90s00r0A           2717 	mov	dptr,#_ucTopReadyPriority
   0B09 E0                 2718 	movx	a,@dptr
   0B0A FA                 2719 	mov	r2,a
                           2720 ;     genMult
                           2721 ;     genMultOneByte
   0B0B EA                 2722 	mov	a,r2
   0B0C 75 F0 16           2723 	mov	b,#0x16
   0B0F A4                 2724 	mul	ab
                           2725 ;     genPlus
   0B10 24r00              2726 	add	a,#_pxReadyTasksLists
   0B12 F5 82              2727 	mov	dpl,a
   0B14 E5 F0              2728 	mov	a,b
   0B16 34s00              2729 	addc	a,#(_pxReadyTasksLists >> 8)
   0B18 F5 83              2730 	mov	dph,a
                           2731 ;     genPointerGet
                           2732 ;     genFarPointerGet
   0B1A E0                 2733 	movx	a,@dptr
   0B1B FA                 2734 	mov	r2,a
   0B1C A3                 2735 	inc	dptr
   0B1D E0                 2736 	movx	a,@dptr
   0B1E FB                 2737 	mov	r3,a
                           2738 ;     genCmpEq
   0B1F BA 00 05           2739 	cjne	r2,#0x00,00115$
   0B22 BB 00 02           2740 	cjne	r3,#0x00,00115$
   0B25 80 03              2741 	sjmp	00116$
   0B27                    2742 00115$:
   0B27 02s0Br36           2743 	ljmp	00105$
   0B2A                    2744 00116$:
                           2745 ;../../Source/tasks.c:1145: --ucTopReadyPriority;
                           2746 ;     genMinus
   0B2A 90s00r0A           2747 	mov	dptr,#_ucTopReadyPriority
                           2748 ;     genMinusDec
   0B2D E0                 2749 	movx	a,@dptr
   0B2E 14                 2750 	dec	a
                           2751 ;     genAssign
   0B2F 90s00r0A           2752 	mov	dptr,#_ucTopReadyPriority
   0B32 F0                 2753 	movx	@dptr,a
   0B33 02s0Br06           2754 	ljmp	00103$
   0B36                    2755 00105$:
                           2756 ;../../Source/tasks.c:1150: listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ ucTopReadyPriority ] ) );
                           2757 ;     genAssign
   0B36 90s00r0A           2758 	mov	dptr,#_ucTopReadyPriority
   0B39 E0                 2759 	movx	a,@dptr
   0B3A FA                 2760 	mov	r2,a
                           2761 ;     genMult
                           2762 ;     genMultOneByte
   0B3B EA                 2763 	mov	a,r2
   0B3C 75 F0 16           2764 	mov	b,#0x16
   0B3F A4                 2765 	mul	ab
                           2766 ;     genPlus
   0B40 24r00              2767 	add	a,#_pxReadyTasksLists
   0B42 FA                 2768 	mov	r2,a
   0B43 E5 F0              2769 	mov	a,b
   0B45 34s00              2770 	addc	a,#(_pxReadyTasksLists >> 8)
   0B47 FB                 2771 	mov	r3,a
                           2772 ;     genPlus
   0B48 74 05              2773 	mov	a,#0x05
   0B4A 25 02              2774 	add	a,ar2
   0B4C FA                 2775 	mov	r2,a
   0B4D 74 00              2776 	mov	a,#0x00
   0B4F 35 03              2777 	addc	a,ar3
   0B51 FB                 2778 	mov	r3,a
                           2779 ;     genAssign
   0B52 90s00r0A           2780 	mov	dptr,#_ucTopReadyPriority
   0B55 E0                 2781 	movx	a,@dptr
   0B56 FC                 2782 	mov	r4,a
                           2783 ;     genMult
                           2784 ;     genMultOneByte
   0B57 EC                 2785 	mov	a,r4
   0B58 75 F0 16           2786 	mov	b,#0x16
   0B5B A4                 2787 	mul	ab
                           2788 ;     genPlus
   0B5C 24r00              2789 	add	a,#_pxReadyTasksLists
   0B5E FC                 2790 	mov	r4,a
   0B5F E5 F0              2791 	mov	a,b
   0B61 34s00              2792 	addc	a,#(_pxReadyTasksLists >> 8)
   0B63 FD                 2793 	mov	r5,a
                           2794 ;     genPlus
   0B64 74 05              2795 	mov	a,#0x05
   0B66 25 04              2796 	add	a,ar4
   0B68 F5 82              2797 	mov	dpl,a
   0B6A 74 00              2798 	mov	a,#0x00
   0B6C 35 05              2799 	addc	a,ar5
   0B6E F5 83              2800 	mov	dph,a
                           2801 ;     genPointerGet
                           2802 ;     genFarPointerGet
   0B70 E0                 2803 	movx	a,@dptr
   0B71 FC                 2804 	mov	r4,a
   0B72 A3                 2805 	inc	dptr
   0B73 E0                 2806 	movx	a,@dptr
   0B74 FD                 2807 	mov	r5,a
   0B75 A3                 2808 	inc	dptr
   0B76 E0                 2809 	movx	a,@dptr
   0B77 FE                 2810 	mov	r6,a
                           2811 ;     genPlus
                           2812 ;     genPlusIncr
   0B78 74 02              2813 	mov	a,#0x02
   0B7A 25 04              2814 	add	a,ar4
   0B7C FC                 2815 	mov	r4,a
   0B7D 74 00              2816 	mov	a,#0x00
   0B7F 35 05              2817 	addc	a,ar5
   0B81 FD                 2818 	mov	r5,a
                           2819 ;     genPointerGet
                           2820 ;     genGenPointerGet
   0B82 8C 82              2821 	mov	dpl,r4
   0B84 8D 83              2822 	mov	dph,r5
   0B86 8E F0              2823 	mov	b,r6
   0B88 12s00r00           2824 	lcall	__gptrget
   0B8B FC                 2825 	mov	r4,a
   0B8C A3                 2826 	inc	dptr
   0B8D 12s00r00           2827 	lcall	__gptrget
   0B90 FD                 2828 	mov	r5,a
   0B91 A3                 2829 	inc	dptr
   0B92 12s00r00           2830 	lcall	__gptrget
   0B95 FE                 2831 	mov	r6,a
                           2832 ;     genPointerSet
                           2833 ;     genFarPointerSet
   0B96 8A 82              2834 	mov	dpl,r2
   0B98 8B 83              2835 	mov	dph,r3
   0B9A EC                 2836 	mov	a,r4
   0B9B F0                 2837 	movx	@dptr,a
   0B9C A3                 2838 	inc	dptr
   0B9D ED                 2839 	mov	a,r5
   0B9E F0                 2840 	movx	@dptr,a
   0B9F A3                 2841 	inc	dptr
   0BA0 EE                 2842 	mov	a,r6
   0BA1 F0                 2843 	movx	@dptr,a
                           2844 ;     genAssign
   0BA2 90s00r0A           2845 	mov	dptr,#_ucTopReadyPriority
   0BA5 E0                 2846 	movx	a,@dptr
   0BA6 FA                 2847 	mov	r2,a
                           2848 ;     genMult
                           2849 ;     genMultOneByte
   0BA7 EA                 2850 	mov	a,r2
   0BA8 75 F0 16           2851 	mov	b,#0x16
   0BAB A4                 2852 	mul	ab
                           2853 ;     genPlus
   0BAC 24r00              2854 	add	a,#_pxReadyTasksLists
   0BAE FA                 2855 	mov	r2,a
   0BAF E5 F0              2856 	mov	a,b
   0BB1 34s00              2857 	addc	a,#(_pxReadyTasksLists >> 8)
   0BB3 FB                 2858 	mov	r3,a
                           2859 ;     genPlus
   0BB4 74 05              2860 	mov	a,#0x05
   0BB6 25 02              2861 	add	a,ar2
   0BB8 F5 82              2862 	mov	dpl,a
   0BBA 74 00              2863 	mov	a,#0x00
   0BBC 35 03              2864 	addc	a,ar3
   0BBE F5 83              2865 	mov	dph,a
                           2866 ;     genPointerGet
                           2867 ;     genFarPointerGet
   0BC0 E0                 2868 	movx	a,@dptr
   0BC1 FA                 2869 	mov	r2,a
   0BC2 A3                 2870 	inc	dptr
   0BC3 E0                 2871 	movx	a,@dptr
   0BC4 FB                 2872 	mov	r3,a
   0BC5 A3                 2873 	inc	dptr
   0BC6 E0                 2874 	movx	a,@dptr
   0BC7 FC                 2875 	mov	r4,a
                           2876 ;     genAssign
   0BC8 90s00r0A           2877 	mov	dptr,#_ucTopReadyPriority
   0BCB E0                 2878 	movx	a,@dptr
   0BCC FD                 2879 	mov	r5,a
                           2880 ;     genMult
                           2881 ;     genMultOneByte
   0BCD ED                 2882 	mov	a,r5
   0BCE 75 F0 16           2883 	mov	b,#0x16
   0BD1 A4                 2884 	mul	ab
                           2885 ;     genPlus
   0BD2 24r00              2886 	add	a,#_pxReadyTasksLists
   0BD4 FD                 2887 	mov	r5,a
   0BD5 E5 F0              2888 	mov	a,b
   0BD7 34s00              2889 	addc	a,#(_pxReadyTasksLists >> 8)
   0BD9 FE                 2890 	mov	r6,a
                           2891 ;     genPlus
                           2892 ;     genPlusIncr
   0BDA 74 02              2893 	mov	a,#0x02
   0BDC 25 05              2894 	add	a,ar5
   0BDE F5 82              2895 	mov	dpl,a
   0BE0 74 00              2896 	mov	a,#0x00
   0BE2 35 06              2897 	addc	a,ar6
   0BE4 F5 83              2898 	mov	dph,a
                           2899 ;     genPointerGet
                           2900 ;     genFarPointerGet
   0BE6 E0                 2901 	movx	a,@dptr
   0BE7 FD                 2902 	mov	r5,a
   0BE8 A3                 2903 	inc	dptr
   0BE9 E0                 2904 	movx	a,@dptr
   0BEA FE                 2905 	mov	r6,a
   0BEB A3                 2906 	inc	dptr
   0BEC E0                 2907 	movx	a,@dptr
   0BED FF                 2908 	mov	r7,a
                           2909 ;     genCmpEq
   0BEE EA                 2910 	mov	a,r2
   0BEF B5 05 0A           2911 	cjne	a,ar5,00117$
   0BF2 EB                 2912 	mov	a,r3
   0BF3 B5 06 06           2913 	cjne	a,ar6,00117$
   0BF6 EC                 2914 	mov	a,r4
   0BF7 B5 07 02           2915 	cjne	a,ar7,00117$
   0BFA 80 03              2916 	sjmp	00118$
   0BFC                    2917 00117$:
   0BFC 02s0Cr6B           2918 	ljmp	00107$
   0BFF                    2919 00118$:
                           2920 ;     genAssign
   0BFF 90s00r0A           2921 	mov	dptr,#_ucTopReadyPriority
   0C02 E0                 2922 	movx	a,@dptr
   0C03 FA                 2923 	mov	r2,a
                           2924 ;     genMult
                           2925 ;     genMultOneByte
   0C04 EA                 2926 	mov	a,r2
   0C05 75 F0 16           2927 	mov	b,#0x16
   0C08 A4                 2928 	mul	ab
                           2929 ;     genPlus
   0C09 24r00              2930 	add	a,#_pxReadyTasksLists
   0C0B FA                 2931 	mov	r2,a
   0C0C E5 F0              2932 	mov	a,b
   0C0E 34s00              2933 	addc	a,#(_pxReadyTasksLists >> 8)
   0C10 FB                 2934 	mov	r3,a
                           2935 ;     genPlus
   0C11 74 05              2936 	mov	a,#0x05
   0C13 25 02              2937 	add	a,ar2
   0C15 FA                 2938 	mov	r2,a
   0C16 74 00              2939 	mov	a,#0x00
   0C18 35 03              2940 	addc	a,ar3
   0C1A FB                 2941 	mov	r3,a
                           2942 ;     genAssign
   0C1B 90s00r0A           2943 	mov	dptr,#_ucTopReadyPriority
   0C1E E0                 2944 	movx	a,@dptr
   0C1F FC                 2945 	mov	r4,a
                           2946 ;     genMult
                           2947 ;     genMultOneByte
   0C20 EC                 2948 	mov	a,r4
   0C21 75 F0 16           2949 	mov	b,#0x16
   0C24 A4                 2950 	mul	ab
                           2951 ;     genPlus
   0C25 24r00              2952 	add	a,#_pxReadyTasksLists
   0C27 FC                 2953 	mov	r4,a
   0C28 E5 F0              2954 	mov	a,b
   0C2A 34s00              2955 	addc	a,#(_pxReadyTasksLists >> 8)
   0C2C FD                 2956 	mov	r5,a
                           2957 ;     genPlus
   0C2D 74 05              2958 	mov	a,#0x05
   0C2F 25 04              2959 	add	a,ar4
   0C31 F5 82              2960 	mov	dpl,a
   0C33 74 00              2961 	mov	a,#0x00
   0C35 35 05              2962 	addc	a,ar5
   0C37 F5 83              2963 	mov	dph,a
                           2964 ;     genPointerGet
                           2965 ;     genFarPointerGet
   0C39 E0                 2966 	movx	a,@dptr
   0C3A FC                 2967 	mov	r4,a
   0C3B A3                 2968 	inc	dptr
   0C3C E0                 2969 	movx	a,@dptr
   0C3D FD                 2970 	mov	r5,a
   0C3E A3                 2971 	inc	dptr
   0C3F E0                 2972 	movx	a,@dptr
   0C40 FE                 2973 	mov	r6,a
                           2974 ;     genPlus
                           2975 ;     genPlusIncr
   0C41 74 02              2976 	mov	a,#0x02
   0C43 25 04              2977 	add	a,ar4
   0C45 FC                 2978 	mov	r4,a
   0C46 74 00              2979 	mov	a,#0x00
   0C48 35 05              2980 	addc	a,ar5
   0C4A FD                 2981 	mov	r5,a
                           2982 ;     genPointerGet
                           2983 ;     genGenPointerGet
   0C4B 8C 82              2984 	mov	dpl,r4
   0C4D 8D 83              2985 	mov	dph,r5
   0C4F 8E F0              2986 	mov	b,r6
   0C51 12s00r00           2987 	lcall	__gptrget
   0C54 FC                 2988 	mov	r4,a
   0C55 A3                 2989 	inc	dptr
   0C56 12s00r00           2990 	lcall	__gptrget
   0C59 FD                 2991 	mov	r5,a
   0C5A A3                 2992 	inc	dptr
   0C5B 12s00r00           2993 	lcall	__gptrget
   0C5E FE                 2994 	mov	r6,a
                           2995 ;     genPointerSet
                           2996 ;     genFarPointerSet
   0C5F 8A 82              2997 	mov	dpl,r2
   0C61 8B 83              2998 	mov	dph,r3
   0C63 EC                 2999 	mov	a,r4
   0C64 F0                 3000 	movx	@dptr,a
   0C65 A3                 3001 	inc	dptr
   0C66 ED                 3002 	mov	a,r5
   0C67 F0                 3003 	movx	@dptr,a
   0C68 A3                 3004 	inc	dptr
   0C69 EE                 3005 	mov	a,r6
   0C6A F0                 3006 	movx	@dptr,a
   0C6B                    3007 00107$:
                           3008 ;     genAssign
   0C6B 90s00r0A           3009 	mov	dptr,#_ucTopReadyPriority
   0C6E E0                 3010 	movx	a,@dptr
   0C6F FA                 3011 	mov	r2,a
                           3012 ;     genMult
                           3013 ;     genMultOneByte
   0C70 EA                 3014 	mov	a,r2
   0C71 75 F0 16           3015 	mov	b,#0x16
   0C74 A4                 3016 	mul	ab
                           3017 ;     genPlus
   0C75 24r00              3018 	add	a,#_pxReadyTasksLists
   0C77 FA                 3019 	mov	r2,a
   0C78 E5 F0              3020 	mov	a,b
   0C7A 34s00              3021 	addc	a,#(_pxReadyTasksLists >> 8)
   0C7C FB                 3022 	mov	r3,a
                           3023 ;     genPlus
   0C7D 74 05              3024 	mov	a,#0x05
   0C7F 25 02              3025 	add	a,ar2
   0C81 F5 82              3026 	mov	dpl,a
   0C83 74 00              3027 	mov	a,#0x00
   0C85 35 03              3028 	addc	a,ar3
   0C87 F5 83              3029 	mov	dph,a
                           3030 ;     genPointerGet
                           3031 ;     genFarPointerGet
   0C89 E0                 3032 	movx	a,@dptr
   0C8A FA                 3033 	mov	r2,a
   0C8B A3                 3034 	inc	dptr
   0C8C E0                 3035 	movx	a,@dptr
   0C8D FB                 3036 	mov	r3,a
   0C8E A3                 3037 	inc	dptr
   0C8F E0                 3038 	movx	a,@dptr
   0C90 FC                 3039 	mov	r4,a
                           3040 ;     genPlus
   0C91 74 08              3041 	mov	a,#0x08
   0C93 25 02              3042 	add	a,ar2
   0C95 FA                 3043 	mov	r2,a
   0C96 74 00              3044 	mov	a,#0x00
   0C98 35 03              3045 	addc	a,ar3
   0C9A FB                 3046 	mov	r3,a
                           3047 ;     genPointerGet
                           3048 ;     genGenPointerGet
   0C9B 8A 82              3049 	mov	dpl,r2
   0C9D 8B 83              3050 	mov	dph,r3
   0C9F 8C F0              3051 	mov	b,r4
   0CA1 12s00r00           3052 	lcall	__gptrget
   0CA4 FA                 3053 	mov	r2,a
   0CA5 A3                 3054 	inc	dptr
   0CA6 12s00r00           3055 	lcall	__gptrget
   0CA9 FB                 3056 	mov	r3,a
   0CAA A3                 3057 	inc	dptr
   0CAB 12s00r00           3058 	lcall	__gptrget
   0CAE FC                 3059 	mov	r4,a
                           3060 ;     genAssign
   0CAF 90s00r00           3061 	mov	dptr,#_pxCurrentTCB
   0CB2 EA                 3062 	mov	a,r2
   0CB3 F0                 3063 	movx	@dptr,a
   0CB4 A3                 3064 	inc	dptr
   0CB5 EB                 3065 	mov	a,r3
   0CB6 F0                 3066 	movx	@dptr,a
   0CB7 A3                 3067 	inc	dptr
   0CB8 EC                 3068 	mov	a,r4
   0CB9 F0                 3069 	movx	@dptr,a
   0CBA                    3070 00108$:
   0CBA 85*00 81           3071 	mov	sp,_bp
   0CBD D0*00              3072 	pop	_bp
   0CBF 22                 3073 	ret
                           3074 ;------------------------------------------------------------
                           3075 ;Allocation info for local variables in function 'vTaskPlaceOnEventList'
                           3076 ;------------------------------------------------------------
                           3077 ;xTicksToWait              Allocated to stack - offset -4
                           3078 ;pxEventList               Allocated to registers r2 r3 r4 
                           3079 ;xTimeToWake               Allocated to registers r2 r3 
                           3080 ;------------------------------------------------------------
                           3081 ;../../Source/tasks.c:1155: void vTaskPlaceOnEventList( xList *pxEventList, portTickType xTicksToWait )
                           3082 ;	-----------------------------------------
                           3083 ;	 function vTaskPlaceOnEventList
                           3084 ;	-----------------------------------------
   0CC0                    3085 _vTaskPlaceOnEventList:
   0CC0 C0*00              3086 	push	_bp
   0CC2 85 81*00           3087 	mov	_bp,sp
                           3088 ;     genReceive
   0CC5 AA 82              3089 	mov	r2,dpl
   0CC7 AB 83              3090 	mov	r3,dph
   0CC9 AC F0              3091 	mov	r4,b
                           3092 ;../../Source/tasks.c:1165: vListInsert( ( xList * ) pxEventList, ( xListItem * ) &( pxCurrentTCB->xEventListItem ) );
                           3093 ;     genAssign
   0CCB 90s00r00           3094 	mov	dptr,#_pxCurrentTCB
   0CCE E0                 3095 	movx	a,@dptr
   0CCF FD                 3096 	mov	r5,a
   0CD0 A3                 3097 	inc	dptr
   0CD1 E0                 3098 	movx	a,@dptr
   0CD2 FE                 3099 	mov	r6,a
   0CD3 A3                 3100 	inc	dptr
   0CD4 E0                 3101 	movx	a,@dptr
   0CD5 FF                 3102 	mov	r7,a
                           3103 ;     genPlus
   0CD6 74 27              3104 	mov	a,#0x27
   0CD8 25 05              3105 	add	a,ar5
   0CDA FD                 3106 	mov	r5,a
   0CDB 74 00              3107 	mov	a,#0x00
   0CDD 35 06              3108 	addc	a,ar6
   0CDF FE                 3109 	mov	r6,a
                           3110 ;     genIpush
   0CE0 C0 05              3111 	push	ar5
   0CE2 C0 06              3112 	push	ar6
   0CE4 C0 07              3113 	push	ar7
                           3114 ;     genCall
   0CE6 8A 82              3115 	mov	dpl,r2
   0CE8 8B 83              3116 	mov	dph,r3
   0CEA 8C F0              3117 	mov	b,r4
   0CEC 12s00r00           3118 	lcall	_vListInsert
   0CEF 15 81              3119 	dec	sp
   0CF1 15 81              3120 	dec	sp
   0CF3 15 81              3121 	dec	sp
                           3122 ;../../Source/tasks.c:1169: xTimeToWake = xTickCount + xTicksToWait;
                           3123 ;     genAssign
   0CF5 90s00r07           3124 	mov	dptr,#_xTickCount
   0CF8 E0                 3125 	movx	a,@dptr
   0CF9 FA                 3126 	mov	r2,a
   0CFA A3                 3127 	inc	dptr
   0CFB E0                 3128 	movx	a,@dptr
   0CFC FB                 3129 	mov	r3,a
                           3130 ;     genPlus
   0CFD E5*00              3131 	mov	a,_bp
   0CFF 24 FC              3132 	add	a,#0xfc
   0D01 F8                 3133 	mov	r0,a
   0D02 E6                 3134 	mov	a,@r0
   0D03 25 02              3135 	add	a,ar2
   0D05 FA                 3136 	mov	r2,a
   0D06 08                 3137 	inc	r0
   0D07 E6                 3138 	mov	a,@r0
   0D08 35 03              3139 	addc	a,ar3
   0D0A FB                 3140 	mov	r3,a
                           3141 ;     genAssign
                           3142 ;../../Source/tasks.c:1174: vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
                           3143 ;     genAssign
   0D0B 90s00r00           3144 	mov	dptr,#_pxCurrentTCB
   0D0E E0                 3145 	movx	a,@dptr
   0D0F FC                 3146 	mov	r4,a
   0D10 A3                 3147 	inc	dptr
   0D11 E0                 3148 	movx	a,@dptr
   0D12 FD                 3149 	mov	r5,a
   0D13 A3                 3150 	inc	dptr
   0D14 E0                 3151 	movx	a,@dptr
   0D15 FE                 3152 	mov	r6,a
                           3153 ;     genPlus
   0D16 74 19              3154 	mov	a,#0x19
   0D18 25 04              3155 	add	a,ar4
   0D1A FC                 3156 	mov	r4,a
   0D1B 74 00              3157 	mov	a,#0x00
   0D1D 35 05              3158 	addc	a,ar5
   0D1F FD                 3159 	mov	r5,a
                           3160 ;     genCall
   0D20 8C 82              3161 	mov	dpl,r4
   0D22 8D 83              3162 	mov	dph,r5
   0D24 8E F0              3163 	mov	b,r6
   0D26 C0 02              3164 	push	ar2
   0D28 C0 03              3165 	push	ar3
   0D2A 12s00r00           3166 	lcall	_vListRemove
   0D2D D0 03              3167 	pop	ar3
   0D2F D0 02              3168 	pop	ar2
                           3169 ;../../Source/tasks.c:1176: listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
                           3170 ;     genAssign
   0D31 90s00r00           3171 	mov	dptr,#_pxCurrentTCB
   0D34 E0                 3172 	movx	a,@dptr
   0D35 FC                 3173 	mov	r4,a
   0D36 A3                 3174 	inc	dptr
   0D37 E0                 3175 	movx	a,@dptr
   0D38 FD                 3176 	mov	r5,a
   0D39 A3                 3177 	inc	dptr
   0D3A E0                 3178 	movx	a,@dptr
   0D3B FE                 3179 	mov	r6,a
                           3180 ;     genPlus
   0D3C 74 19              3181 	mov	a,#0x19
   0D3E 25 04              3182 	add	a,ar4
   0D40 FC                 3183 	mov	r4,a
   0D41 74 00              3184 	mov	a,#0x00
   0D43 35 05              3185 	addc	a,ar5
   0D45 FD                 3186 	mov	r5,a
                           3187 ;     genPointerSet
                           3188 ;     genGenPointerSet
   0D46 8C 82              3189 	mov	dpl,r4
   0D48 8D 83              3190 	mov	dph,r5
   0D4A 8E F0              3191 	mov	b,r6
   0D4C EA                 3192 	mov	a,r2
   0D4D 12s00r00           3193 	lcall	__gptrput
   0D50 A3                 3194 	inc	dptr
   0D51 EB                 3195 	mov	a,r3
   0D52 12s00r00           3196 	lcall	__gptrput
                           3197 ;../../Source/tasks.c:1178: if( xTimeToWake < xTickCount )
                           3198 ;     genAssign
   0D55 90s00r07           3199 	mov	dptr,#_xTickCount
   0D58 E0                 3200 	movx	a,@dptr
   0D59 FC                 3201 	mov	r4,a
   0D5A A3                 3202 	inc	dptr
   0D5B E0                 3203 	movx	a,@dptr
   0D5C FD                 3204 	mov	r5,a
                           3205 ;     genCmpLt
                           3206 ;     genCmp
   0D5D C3                 3207 	clr	c
   0D5E EA                 3208 	mov	a,r2
   0D5F 9C                 3209 	subb	a,r4
   0D60 EB                 3210 	mov	a,r3
   0D61 9D                 3211 	subb	a,r5
                           3212 ;     genIfxJump
   0D62 40 03              3213 	jc	00107$
   0D64 02s0Dr9F           3214 	ljmp	00102$
   0D67                    3215 00107$:
                           3216 ;../../Source/tasks.c:1181: vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
                           3217 ;     genAssign
   0D67 90s00r00           3218 	mov	dptr,#_pxCurrentTCB
   0D6A E0                 3219 	movx	a,@dptr
   0D6B FA                 3220 	mov	r2,a
   0D6C A3                 3221 	inc	dptr
   0D6D E0                 3222 	movx	a,@dptr
   0D6E FB                 3223 	mov	r3,a
   0D6F A3                 3224 	inc	dptr
   0D70 E0                 3225 	movx	a,@dptr
   0D71 FC                 3226 	mov	r4,a
                           3227 ;     genPlus
   0D72 74 19              3228 	mov	a,#0x19
   0D74 25 02              3229 	add	a,ar2
   0D76 FA                 3230 	mov	r2,a
   0D77 74 00              3231 	mov	a,#0x00
   0D79 35 03              3232 	addc	a,ar3
   0D7B FB                 3233 	mov	r3,a
                           3234 ;     genAssign
   0D7C 90s00r87           3235 	mov	dptr,#_pxOverflowDelayedTaskList
   0D7F E0                 3236 	movx	a,@dptr
   0D80 FD                 3237 	mov	r5,a
   0D81 A3                 3238 	inc	dptr
   0D82 E0                 3239 	movx	a,@dptr
   0D83 FE                 3240 	mov	r6,a
   0D84 A3                 3241 	inc	dptr
   0D85 E0                 3242 	movx	a,@dptr
   0D86 FF                 3243 	mov	r7,a
                           3244 ;     genIpush
   0D87 C0 02              3245 	push	ar2
   0D89 C0 03              3246 	push	ar3
   0D8B C0 04              3247 	push	ar4
                           3248 ;     genCall
   0D8D 8D 82              3249 	mov	dpl,r5
   0D8F 8E 83              3250 	mov	dph,r6
   0D91 8F F0              3251 	mov	b,r7
   0D93 12s00r00           3252 	lcall	_vListInsert
   0D96 15 81              3253 	dec	sp
   0D98 15 81              3254 	dec	sp
   0D9A 15 81              3255 	dec	sp
   0D9C 02s0DrD4           3256 	ljmp	00104$
   0D9F                    3257 00102$:
                           3258 ;../../Source/tasks.c:1186: vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
                           3259 ;     genAssign
   0D9F 90s00r00           3260 	mov	dptr,#_pxCurrentTCB
   0DA2 E0                 3261 	movx	a,@dptr
   0DA3 FA                 3262 	mov	r2,a
   0DA4 A3                 3263 	inc	dptr
   0DA5 E0                 3264 	movx	a,@dptr
   0DA6 FB                 3265 	mov	r3,a
   0DA7 A3                 3266 	inc	dptr
   0DA8 E0                 3267 	movx	a,@dptr
   0DA9 FC                 3268 	mov	r4,a
                           3269 ;     genPlus
   0DAA 74 19              3270 	mov	a,#0x19
   0DAC 25 02              3271 	add	a,ar2
   0DAE FA                 3272 	mov	r2,a
   0DAF 74 00              3273 	mov	a,#0x00
   0DB1 35 03              3274 	addc	a,ar3
   0DB3 FB                 3275 	mov	r3,a
                           3276 ;     genAssign
   0DB4 90s00r84           3277 	mov	dptr,#_pxDelayedTaskList
   0DB7 E0                 3278 	movx	a,@dptr
   0DB8 FD                 3279 	mov	r5,a
   0DB9 A3                 3280 	inc	dptr
   0DBA E0                 3281 	movx	a,@dptr
   0DBB FE                 3282 	mov	r6,a
   0DBC A3                 3283 	inc	dptr
   0DBD E0                 3284 	movx	a,@dptr
   0DBE FF                 3285 	mov	r7,a
                           3286 ;     genIpush
   0DBF C0 02              3287 	push	ar2
   0DC1 C0 03              3288 	push	ar3
   0DC3 C0 04              3289 	push	ar4
                           3290 ;     genCall
   0DC5 8D 82              3291 	mov	dpl,r5
   0DC7 8E 83              3292 	mov	dph,r6
   0DC9 8F F0              3293 	mov	b,r7
   0DCB 12s00r00           3294 	lcall	_vListInsert
   0DCE 15 81              3295 	dec	sp
   0DD0 15 81              3296 	dec	sp
   0DD2 15 81              3297 	dec	sp
   0DD4                    3298 00104$:
   0DD4 85*00 81           3299 	mov	sp,_bp
   0DD7 D0*00              3300 	pop	_bp
   0DD9 22                 3301 	ret
                           3302 ;------------------------------------------------------------
                           3303 ;Allocation info for local variables in function 'cTaskRemoveFromEventList'
                           3304 ;------------------------------------------------------------
                           3305 ;pxEventList               Allocated to registers r2 r3 r4 
                           3306 ;pxUnblockedTCB            Allocated to stack - offset 1
                           3307 ;------------------------------------------------------------
                           3308 ;../../Source/tasks.c:1191: signed portCHAR cTaskRemoveFromEventList( const xList *pxEventList )
                           3309 ;	-----------------------------------------
                           3310 ;	 function cTaskRemoveFromEventList
                           3311 ;	-----------------------------------------
   0DDA                    3312 _cTaskRemoveFromEventList:
   0DDA C0*00              3313 	push	_bp
   0DDC 85 81*00           3314 	mov	_bp,sp
   0DDF 05 81              3315 	inc	sp
   0DE1 05 81              3316 	inc	sp
   0DE3 05 81              3317 	inc	sp
                           3318 ;     genReceive
   0DE5 AA 82              3319 	mov	r2,dpl
   0DE7 AB 83              3320 	mov	r3,dph
   0DE9 AC F0              3321 	mov	r4,b
                           3322 ;../../Source/tasks.c:1205: pxUnblockedTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
                           3323 ;     genPointerGet
                           3324 ;     genGenPointerGet
   0DEB 8A 82              3325 	mov	dpl,r2
   0DED 8B 83              3326 	mov	dph,r3
   0DEF 8C F0              3327 	mov	b,r4
   0DF1 12s00r00           3328 	lcall	__gptrget
   0DF4 FD                 3329 	mov	r5,a
   0DF5 A3                 3330 	inc	dptr
   0DF6 12s00r00           3331 	lcall	__gptrget
   0DF9 FE                 3332 	mov	r6,a
                           3333 ;     genCmpEq
   0DFA BD 00 07           3334 	cjne	r5,#0x00,00117$
   0DFD BE 00 04           3335 	cjne	r6,#0x00,00117$
   0E00 74 01              3336 	mov	a,#0x01
   0E02 80 01              3337 	sjmp	00118$
   0E04                    3338 00117$:
   0E04 E4                 3339 	clr	a
   0E05                    3340 00118$:
   0E05 FD                 3341 	mov	r5,a
                           3342 ;     genNot
   0E06 ED                 3343 	mov	a,r5
   0E07 B4 01 00           3344 	cjne	a,#0x01,00119$
   0E0A                    3345 00119$:
   0E0A E4                 3346 	clr	a
   0E0B 33                 3347 	rlc	a
   0E0C FD                 3348 	mov	r5,a
                           3349 ;     genIfx
   0E0D ED                 3350 	mov	a,r5
                           3351 ;     genIfxJump
   0E0E 70 03              3352 	jnz	00120$
   0E10 02s0Er70           3353 	ljmp	00111$
   0E13                    3354 00120$:
                           3355 ;     genPlus
                           3356 ;     genPlusIncr
   0E13 74 02              3357 	mov	a,#0x02
   0E15 25 02              3358 	add	a,ar2
   0E17 FA                 3359 	mov	r2,a
   0E18 74 00              3360 	mov	a,#0x00
   0E1A 35 03              3361 	addc	a,ar3
   0E1C FB                 3362 	mov	r3,a
                           3363 ;     genPointerGet
                           3364 ;     genGenPointerGet
   0E1D 8A 82              3365 	mov	dpl,r2
   0E1F 8B 83              3366 	mov	dph,r3
   0E21 8C F0              3367 	mov	b,r4
   0E23 12s00r00           3368 	lcall	__gptrget
   0E26 FA                 3369 	mov	r2,a
   0E27 A3                 3370 	inc	dptr
   0E28 12s00r00           3371 	lcall	__gptrget
   0E2B FB                 3372 	mov	r3,a
   0E2C A3                 3373 	inc	dptr
   0E2D 12s00r00           3374 	lcall	__gptrget
   0E30 FC                 3375 	mov	r4,a
                           3376 ;     genPlus
                           3377 ;     genPlusIncr
   0E31 74 02              3378 	mov	a,#0x02
   0E33 25 02              3379 	add	a,ar2
   0E35 FA                 3380 	mov	r2,a
   0E36 74 00              3381 	mov	a,#0x00
   0E38 35 03              3382 	addc	a,ar3
   0E3A FB                 3383 	mov	r3,a
                           3384 ;     genPointerGet
                           3385 ;     genGenPointerGet
   0E3B 8A 82              3386 	mov	dpl,r2
   0E3D 8B 83              3387 	mov	dph,r3
   0E3F 8C F0              3388 	mov	b,r4
   0E41 12s00r00           3389 	lcall	__gptrget
   0E44 FA                 3390 	mov	r2,a
   0E45 A3                 3391 	inc	dptr
   0E46 12s00r00           3392 	lcall	__gptrget
   0E49 FB                 3393 	mov	r3,a
   0E4A A3                 3394 	inc	dptr
   0E4B 12s00r00           3395 	lcall	__gptrget
   0E4E FC                 3396 	mov	r4,a
                           3397 ;     genPlus
   0E4F 74 08              3398 	mov	a,#0x08
   0E51 25 02              3399 	add	a,ar2
   0E53 FA                 3400 	mov	r2,a
   0E54 74 00              3401 	mov	a,#0x00
   0E56 35 03              3402 	addc	a,ar3
   0E58 FB                 3403 	mov	r3,a
                           3404 ;     genPointerGet
                           3405 ;     genGenPointerGet
   0E59 8A 82              3406 	mov	dpl,r2
   0E5B 8B 83              3407 	mov	dph,r3
   0E5D 8C F0              3408 	mov	b,r4
   0E5F 12s00r00           3409 	lcall	__gptrget
   0E62 FA                 3410 	mov	r2,a
   0E63 A3                 3411 	inc	dptr
   0E64 12s00r00           3412 	lcall	__gptrget
   0E67 FB                 3413 	mov	r3,a
   0E68 A3                 3414 	inc	dptr
   0E69 12s00r00           3415 	lcall	__gptrget
   0E6C FC                 3416 	mov	r4,a
   0E6D 02s0Er76           3417 	ljmp	00112$
   0E70                    3418 00111$:
                           3419 ;     genAssign
   0E70 7A 00              3420 	mov	r2,#0x00
   0E72 7B 00              3421 	mov	r3,#0x00
   0E74 7C 00              3422 	mov	r4,#0x00
   0E76                    3423 00112$:
                           3424 ;     genAssign
                           3425 ;     genAssign
   0E76 E5*00              3426 	mov	a,_bp
   0E78 24 01              3427 	add	a,#0x01
   0E7A F8                 3428 	mov	r0,a
   0E7B A6 02              3429 	mov	@r0,ar2
   0E7D 08                 3430 	inc	r0
   0E7E A6 03              3431 	mov	@r0,ar3
   0E80 08                 3432 	inc	r0
   0E81 A6 04              3433 	mov	@r0,ar4
                           3434 ;../../Source/tasks.c:1206: vListRemove( &( pxUnblockedTCB->xEventListItem ) );
                           3435 ;     genPlus
   0E83 E5*00              3436 	mov	a,_bp
   0E85 24 01              3437 	add	a,#0x01
   0E87 F8                 3438 	mov	r0,a
   0E88 74 27              3439 	mov	a,#0x27
   0E8A 26                 3440 	add	a,@r0
   0E8B FD                 3441 	mov	r5,a
   0E8C 74 00              3442 	mov	a,#0x00
   0E8E 08                 3443 	inc	r0
   0E8F 36                 3444 	addc	a,@r0
   0E90 FE                 3445 	mov	r6,a
   0E91 08                 3446 	inc	r0
   0E92 86 07              3447 	mov	ar7,@r0
                           3448 ;     genCall
   0E94 8D 82              3449 	mov	dpl,r5
   0E96 8E 83              3450 	mov	dph,r6
   0E98 8F F0              3451 	mov	b,r7
   0E9A 12s00r00           3452 	lcall	_vListRemove
                           3453 ;../../Source/tasks.c:1208: if( ucSchedulerSuspended == ( unsigned portCHAR ) pdFALSE )
                           3454 ;     genAssign
   0E9D 90s00r0C           3455 	mov	dptr,#_ucSchedulerSuspended
   0EA0 E0                 3456 	movx	a,@dptr
   0EA1 FD                 3457 	mov	r5,a
                           3458 ;     genCmpEq
   0EA2 BD 00 02           3459 	cjne	r5,#0x00,00121$
   0EA5 80 03              3460 	sjmp	00122$
   0EA7                    3461 00121$:
   0EA7 02s0Fr3A           3462 	ljmp	00104$
   0EAA                    3463 00122$:
                           3464 ;../../Source/tasks.c:1210: vListRemove( &( pxUnblockedTCB->xGenericListItem ) );
                           3465 ;     genPlus
   0EAA E5*00              3466 	mov	a,_bp
   0EAC 24 01              3467 	add	a,#0x01
   0EAE F8                 3468 	mov	r0,a
   0EAF 74 19              3469 	mov	a,#0x19
   0EB1 26                 3470 	add	a,@r0
   0EB2 FD                 3471 	mov	r5,a
   0EB3 74 00              3472 	mov	a,#0x00
   0EB5 08                 3473 	inc	r0
   0EB6 36                 3474 	addc	a,@r0
   0EB7 FE                 3475 	mov	r6,a
   0EB8 08                 3476 	inc	r0
   0EB9 86 07              3477 	mov	ar7,@r0
                           3478 ;     genCall
   0EBB 8D 82              3479 	mov	dpl,r5
   0EBD 8E 83              3480 	mov	dph,r6
   0EBF 8F F0              3481 	mov	b,r7
   0EC1 12s00r00           3482 	lcall	_vListRemove
                           3483 ;../../Source/tasks.c:1211: prvAddTaskToReadyQueue( pxUnblockedTCB );
                           3484 ;     genPlus
   0EC4 E5*00              3485 	mov	a,_bp
   0EC6 24 01              3486 	add	a,#0x01
   0EC8 F8                 3487 	mov	r0,a
   0EC9 74 19              3488 	mov	a,#0x19
   0ECB 26                 3489 	add	a,@r0
   0ECC FD                 3490 	mov	r5,a
   0ECD 74 00              3491 	mov	a,#0x00
   0ECF 08                 3492 	inc	r0
   0ED0 36                 3493 	addc	a,@r0
   0ED1 FE                 3494 	mov	r6,a
   0ED2 08                 3495 	inc	r0
   0ED3 86 07              3496 	mov	ar7,@r0
                           3497 ;     genPointerSet
                           3498 ;     genGenPointerSet
   0ED5 8D 82              3499 	mov	dpl,r5
   0ED7 8E 83              3500 	mov	dph,r6
   0ED9 8F F0              3501 	mov	b,r7
   0EDB 74 00              3502 	mov	a,#0x00
   0EDD 12s00r00           3503 	lcall	__gptrput
   0EE0 A3                 3504 	inc	dptr
   0EE1 74 00              3505 	mov	a,#0x00
   0EE3 12s00r00           3506 	lcall	__gptrput
                           3507 ;     genPlus
   0EE6 E5*00              3508 	mov	a,_bp
   0EE8 24 01              3509 	add	a,#0x01
   0EEA F8                 3510 	mov	r0,a
   0EEB 74 18              3511 	mov	a,#0x18
   0EED 26                 3512 	add	a,@r0
   0EEE FA                 3513 	mov	r2,a
   0EEF 74 00              3514 	mov	a,#0x00
   0EF1 08                 3515 	inc	r0
   0EF2 36                 3516 	addc	a,@r0
   0EF3 FB                 3517 	mov	r3,a
   0EF4 08                 3518 	inc	r0
   0EF5 86 04              3519 	mov	ar4,@r0
                           3520 ;     genPointerGet
                           3521 ;     genGenPointerGet
   0EF7 8A 82              3522 	mov	dpl,r2
   0EF9 8B 83              3523 	mov	dph,r3
   0EFB 8C F0              3524 	mov	b,r4
   0EFD 12s00r00           3525 	lcall	__gptrget
   0F00 FA                 3526 	mov	r2,a
                           3527 ;     genAssign
   0F01 90s00r0A           3528 	mov	dptr,#_ucTopReadyPriority
   0F04 E0                 3529 	movx	a,@dptr
   0F05 FB                 3530 	mov	r3,a
                           3531 ;     genCmpGt
                           3532 ;     genCmp
   0F06 C3                 3533 	clr	c
   0F07 EB                 3534 	mov	a,r3
   0F08 9A                 3535 	subb	a,r2
                           3536 ;     genIfxJump
   0F09 40 03              3537 	jc	00123$
   0F0B 02s0Fr13           3538 	ljmp	00102$
   0F0E                    3539 00123$:
                           3540 ;     genAssign
   0F0E 90s00r0A           3541 	mov	dptr,#_ucTopReadyPriority
   0F11 EA                 3542 	mov	a,r2
   0F12 F0                 3543 	movx	@dptr,a
   0F13                    3544 00102$:
                           3545 ;     genMult
                           3546 ;     genMultOneByte
   0F13 EA                 3547 	mov	a,r2
   0F14 75 F0 16           3548 	mov	b,#0x16
   0F17 A4                 3549 	mul	ab
                           3550 ;     genPlus
   0F18 24r00              3551 	add	a,#_pxReadyTasksLists
   0F1A FA                 3552 	mov	r2,a
   0F1B E5 F0              3553 	mov	a,b
   0F1D 34s00              3554 	addc	a,#(_pxReadyTasksLists >> 8)
   0F1F FB                 3555 	mov	r3,a
                           3556 ;     genCast
   0F20 7C 01              3557 	mov	r4,#0x1
                           3558 ;     genIpush
   0F22 C0 05              3559 	push	ar5
   0F24 C0 06              3560 	push	ar6
   0F26 C0 07              3561 	push	ar7
                           3562 ;     genCall
   0F28 8A 82              3563 	mov	dpl,r2
   0F2A 8B 83              3564 	mov	dph,r3
   0F2C 8C F0              3565 	mov	b,r4
   0F2E 12s00r00           3566 	lcall	_vListInsertEnd
   0F31 15 81              3567 	dec	sp
   0F33 15 81              3568 	dec	sp
   0F35 15 81              3569 	dec	sp
   0F37 02s0Fr63           3570 	ljmp	00105$
   0F3A                    3571 00104$:
                           3572 ;../../Source/tasks.c:1217: vListInsertEnd( ( xList * ) &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
                           3573 ;     genPlus
   0F3A E5*00              3574 	mov	a,_bp
   0F3C 24 01              3575 	add	a,#0x01
   0F3E F8                 3576 	mov	r0,a
   0F3F 74 27              3577 	mov	a,#0x27
   0F41 26                 3578 	add	a,@r0
   0F42 FA                 3579 	mov	r2,a
   0F43 74 00              3580 	mov	a,#0x00
   0F45 08                 3581 	inc	r0
   0F46 36                 3582 	addc	a,@r0
   0F47 FB                 3583 	mov	r3,a
   0F48 08                 3584 	inc	r0
   0F49 86 04              3585 	mov	ar4,@r0
                           3586 ;     genIpush
   0F4B C0 02              3587 	push	ar2
   0F4D C0 03              3588 	push	ar3
   0F4F C0 04              3589 	push	ar4
                           3590 ;     genCall
   0F51 75 82r8A           3591 	mov	dpl,#_xPendingReadyList
   0F54 75 83s00           3592 	mov	dph,#(_xPendingReadyList >> 8)
   0F57 75 F0 01           3593 	mov	b,#0x01
   0F5A 12s00r00           3594 	lcall	_vListInsertEnd
   0F5D 15 81              3595 	dec	sp
   0F5F 15 81              3596 	dec	sp
   0F61 15 81              3597 	dec	sp
   0F63                    3598 00105$:
                           3599 ;../../Source/tasks.c:1220: if( pxUnblockedTCB->ucPriority > pxCurrentTCB->ucPriority )
                           3600 ;     genPlus
   0F63 E5*00              3601 	mov	a,_bp
   0F65 24 01              3602 	add	a,#0x01
   0F67 F8                 3603 	mov	r0,a
   0F68 74 18              3604 	mov	a,#0x18
   0F6A 26                 3605 	add	a,@r0
   0F6B FA                 3606 	mov	r2,a
   0F6C 74 00              3607 	mov	a,#0x00
   0F6E 08                 3608 	inc	r0
   0F6F 36                 3609 	addc	a,@r0
   0F70 FB                 3610 	mov	r3,a
   0F71 08                 3611 	inc	r0
   0F72 86 04              3612 	mov	ar4,@r0
                           3613 ;     genPointerGet
                           3614 ;     genGenPointerGet
   0F74 8A 82              3615 	mov	dpl,r2
   0F76 8B 83              3616 	mov	dph,r3
   0F78 8C F0              3617 	mov	b,r4
   0F7A 12s00r00           3618 	lcall	__gptrget
   0F7D FA                 3619 	mov	r2,a
                           3620 ;     genAssign
   0F7E 90s00r00           3621 	mov	dptr,#_pxCurrentTCB
   0F81 E0                 3622 	movx	a,@dptr
   0F82 FB                 3623 	mov	r3,a
   0F83 A3                 3624 	inc	dptr
   0F84 E0                 3625 	movx	a,@dptr
   0F85 FC                 3626 	mov	r4,a
   0F86 A3                 3627 	inc	dptr
   0F87 E0                 3628 	movx	a,@dptr
   0F88 FD                 3629 	mov	r5,a
                           3630 ;     genPlus
   0F89 74 18              3631 	mov	a,#0x18
   0F8B 25 03              3632 	add	a,ar3
   0F8D FB                 3633 	mov	r3,a
   0F8E 74 00              3634 	mov	a,#0x00
   0F90 35 04              3635 	addc	a,ar4
   0F92 FC                 3636 	mov	r4,a
                           3637 ;     genPointerGet
                           3638 ;     genGenPointerGet
   0F93 8B 82              3639 	mov	dpl,r3
   0F95 8C 83              3640 	mov	dph,r4
   0F97 8D F0              3641 	mov	b,r5
   0F99 12s00r00           3642 	lcall	__gptrget
   0F9C FB                 3643 	mov	r3,a
                           3644 ;     genCmpGt
                           3645 ;     genCmp
   0F9D C3                 3646 	clr	c
   0F9E EB                 3647 	mov	a,r3
   0F9F 9A                 3648 	subb	a,r2
                           3649 ;     genIfxJump
   0FA0 40 03              3650 	jc	00124$
   0FA2 02s0FrAB           3651 	ljmp	00107$
   0FA5                    3652 00124$:
                           3653 ;../../Source/tasks.c:1226: return ( signed portCHAR ) pdTRUE;
                           3654 ;     genRet
   0FA5 75 82 01           3655 	mov	dpl,#0x01
   0FA8 02s0FrAE           3656 	ljmp	00109$
   0FAB                    3657 00107$:
                           3658 ;../../Source/tasks.c:1230: return ( signed portCHAR ) pdFALSE;
                           3659 ;     genRet
   0FAB 75 82 00           3660 	mov	dpl,#0x00
   0FAE                    3661 00109$:
   0FAE 85*00 81           3662 	mov	sp,_bp
   0FB1 D0*00              3663 	pop	_bp
   0FB3 22                 3664 	ret
                           3665 ;------------------------------------------------------------
                           3666 ;Allocation info for local variables in function 'prvIdleTask'
                           3667 ;------------------------------------------------------------
                           3668 ;pvParameters              Allocated to registers 
                           3669 ;------------------------------------------------------------
                           3670 ;../../Source/tasks.c:1242: static void prvIdleTask( void *pvParameters )
                           3671 ;	-----------------------------------------
                           3672 ;	 function prvIdleTask
                           3673 ;	-----------------------------------------
   0FB4                    3674 _prvIdleTask:
   0FB4 C0*00              3675 	push	_bp
   0FB6 85 81*00           3676 	mov	_bp,sp
                           3677 ;../../Source/tasks.c:1245: ( void ) pvParameters;
   0FB9                    3678 00104$:
                           3679 ;../../Source/tasks.c:1250: prvCheckTasksWaitingTermination();
                           3680 ;     genCall
   0FB9 12s12r88           3681 	lcall	_prvCheckTasksWaitingTermination
                           3682 ;../../Source/tasks.c:1252: if( sUsingPreemption == pdFALSE )
                           3683 ;     genAssign
   0FBC 90s00r03           3684 	mov	dptr,#_sUsingPreemption
   0FBF E0                 3685 	movx	a,@dptr
   0FC0 FA                 3686 	mov	r2,a
   0FC1 A3                 3687 	inc	dptr
   0FC2 E0                 3688 	movx	a,@dptr
   0FC3 FB                 3689 	mov	r3,a
                           3690 ;     genCmpEq
   0FC4 BA 00 05           3691 	cjne	r2,#0x00,00110$
   0FC7 BB 00 02           3692 	cjne	r3,#0x00,00110$
   0FCA 80 03              3693 	sjmp	00111$
   0FCC                    3694 00110$:
   0FCC 02s0FrB9           3695 	ljmp	00104$
   0FCF                    3696 00111$:
                           3697 ;../../Source/tasks.c:1258: taskYIELD();	
                           3698 ;     genCall
   0FCF 12s00r00           3699 	lcall	_vPortYield
   0FD2 02s0FrB9           3700 	ljmp	00104$
   0FD5                    3701 00106$:
   0FD5 85*00 81           3702 	mov	sp,_bp
   0FD8 D0*00              3703 	pop	_bp
   0FDA 22                 3704 	ret
                           3705 ;------------------------------------------------------------
                           3706 ;Allocation info for local variables in function 'prvInitialiseTCBVariables'
                           3707 ;------------------------------------------------------------
                           3708 ;usStackDepth              Allocated to stack - offset -4
                           3709 ;pcName                    Allocated to stack - offset -7
                           3710 ;ucPriority                Allocated to stack - offset -8
                           3711 ;pxTCB                     Allocated to stack - offset 1
                           3712 ;------------------------------------------------------------
                           3713 ;../../Source/tasks.c:1275: static void prvInitialiseTCBVariables( tskTCB *pxTCB, unsigned portSHORT usStackDepth, const signed portCHAR * const pcName, unsigned portCHAR ucPriority )
                           3714 ;	-----------------------------------------
                           3715 ;	 function prvInitialiseTCBVariables
                           3716 ;	-----------------------------------------
   0FDB                    3717 _prvInitialiseTCBVariables:
   0FDB C0*00              3718 	push	_bp
   0FDD 85 81*00           3719 	mov	_bp,sp
                           3720 ;     genReceive
   0FE0 C0 82              3721 	push	dpl
   0FE2 C0 83              3722 	push	dph
   0FE4 C0 F0              3723 	push	b
                           3724 ;../../Source/tasks.c:1277: pxTCB->usStackDepth = usStackDepth;
                           3725 ;     genPlus
   0FE6 E5*00              3726 	mov	a,_bp
   0FE8 24 01              3727 	add	a,#0x01
   0FEA F8                 3728 	mov	r0,a
   0FEB 74 06              3729 	mov	a,#0x06
   0FED 26                 3730 	add	a,@r0
   0FEE FD                 3731 	mov	r5,a
   0FEF 74 00              3732 	mov	a,#0x00
   0FF1 08                 3733 	inc	r0
   0FF2 36                 3734 	addc	a,@r0
   0FF3 FE                 3735 	mov	r6,a
   0FF4 08                 3736 	inc	r0
   0FF5 86 07              3737 	mov	ar7,@r0
                           3738 ;     genPointerSet
                           3739 ;     genGenPointerSet
   0FF7 8D 82              3740 	mov	dpl,r5
   0FF9 8E 83              3741 	mov	dph,r6
   0FFB 8F F0              3742 	mov	b,r7
   0FFD E5*00              3743 	mov	a,_bp
   0FFF 24 FC              3744 	add	a,#0xfc
   1001 F8                 3745 	mov	r0,a
   1002 E6                 3746 	mov	a,@r0
   1003 12s00r00           3747 	lcall	__gptrput
   1006 A3                 3748 	inc	dptr
   1007 08                 3749 	inc	r0
   1008 E6                 3750 	mov	a,@r0
   1009 12s00r00           3751 	lcall	__gptrput
                           3752 ;../../Source/tasks.c:1280: if( strlen( pcName ) < ( unsigned portSHORT ) tskMAX_TASK_NAME_LEN )
                           3753 ;     genCall
   100C E5*00              3754 	mov	a,_bp
   100E 24 F9              3755 	add	a,#0xf9
   1010 F8                 3756 	mov	r0,a
   1011 86 82              3757 	mov	dpl,@r0
   1013 08                 3758 	inc	r0
   1014 86 83              3759 	mov	dph,@r0
   1016 08                 3760 	inc	r0
   1017 86 F0              3761 	mov	b,@r0
   1019 12s00r00           3762 	lcall	_strlen
   101C AD 82              3763 	mov	r5,dpl
   101E AE 83              3764 	mov	r6,dph
                           3765 ;     genCmpLt
                           3766 ;     genCmp
   1020 C3                 3767 	clr	c
   1021 ED                 3768 	mov	a,r5
   1022 94 10              3769 	subb	a,#0x10
   1024 EE                 3770 	mov	a,r6
   1025 94 00              3771 	subb	a,#0x00
                           3772 ;     genIfxJump
   1027 40 03              3773 	jc	00110$
   1029 02s10r70           3774 	ljmp	00102$
   102C                    3775 00110$:
                           3776 ;../../Source/tasks.c:1282: portENTER_CRITICAL();
                           3777 ;     genInline
   102C C0 E0 C0 A8        3778 	 push ACC push IE 
                           3779 ;     genAssign
   1030 C2 AF              3780 	clr	_EA
                           3781 ;../../Source/tasks.c:1283: strcpy( pxTCB->pcTaskName, pcName );
                           3782 ;     genPlus
   1032 E5*00              3783 	mov	a,_bp
   1034 24 01              3784 	add	a,#0x01
   1036 F8                 3785 	mov	r0,a
   1037 74 08              3786 	mov	a,#0x08
   1039 26                 3787 	add	a,@r0
   103A FD                 3788 	mov	r5,a
   103B 74 00              3789 	mov	a,#0x00
   103D 08                 3790 	inc	r0
   103E 36                 3791 	addc	a,@r0
   103F FE                 3792 	mov	r6,a
   1040 08                 3793 	inc	r0
   1041 86 07              3794 	mov	ar7,@r0
                           3795 ;     genIpush
   1043 E5*00              3796 	mov	a,_bp
   1045 24 F9              3797 	add	a,#0xf9
   1047 F8                 3798 	mov	r0,a
   1048 E6                 3799 	mov	a,@r0
   1049 C0 E0              3800 	push	acc
   104B 08                 3801 	inc	r0
   104C E6                 3802 	mov	a,@r0
   104D C0 E0              3803 	push	acc
   104F 08                 3804 	inc	r0
   1050 E6                 3805 	mov	a,@r0
   1051 C0 E0              3806 	push	acc
                           3807 ;     genCall
   1053 8D 82              3808 	mov	dpl,r5
   1055 8E 83              3809 	mov	dph,r6
   1057 8F F0              3810 	mov	b,r7
   1059 12s00r00           3811 	lcall	_strcpy
   105C 15 81              3812 	dec	sp
   105E 15 81              3813 	dec	sp
   1060 15 81              3814 	dec	sp
                           3815 ;../../Source/tasks.c:1284: portEXIT_CRITICAL();
                           3816 ;     genInline
   1062 D0 E0              3817 	 pop ACC 
                           3818 ;     genAnd
   1064 53 E0 80           3819 	anl	_ACC,#0x80
                           3820 ;     genOr
   1067 E5 E0              3821 	mov	a,_ACC
   1069 42 A8              3822 	orl	_IE,a
                           3823 ;     genInline
   106B D0 E0              3824 	 pop ACC 
   106D 02s10rDA           3825 	ljmp	00103$
   1070                    3826 00102$:
                           3827 ;../../Source/tasks.c:1288: portENTER_CRITICAL();
                           3828 ;     genInline
   1070 C0 E0 C0 A8        3829 	 push ACC push IE 
                           3830 ;     genAssign
   1074 C2 AF              3831 	clr	_EA
                           3832 ;../../Source/tasks.c:1289: strncpy( pxTCB->pcTaskName, pcName, ( unsigned portSHORT ) tskMAX_TASK_NAME_LEN );
                           3833 ;     genPlus
   1076 E5*00              3834 	mov	a,_bp
   1078 24 01              3835 	add	a,#0x01
   107A F8                 3836 	mov	r0,a
   107B 74 08              3837 	mov	a,#0x08
   107D 26                 3838 	add	a,@r0
   107E FD                 3839 	mov	r5,a
   107F 74 00              3840 	mov	a,#0x00
   1081 08                 3841 	inc	r0
   1082 36                 3842 	addc	a,@r0
   1083 FE                 3843 	mov	r6,a
   1084 08                 3844 	inc	r0
   1085 86 07              3845 	mov	ar7,@r0
                           3846 ;     genIpush
   1087 C0 05              3847 	push	ar5
   1089 C0 06              3848 	push	ar6
   108B C0 07              3849 	push	ar7
   108D 74 10              3850 	mov	a,#0x10
   108F C0 E0              3851 	push	acc
   1091 74 00              3852 	mov	a,#0x00
   1093 C0 E0              3853 	push	acc
                           3854 ;     genIpush
   1095 E5*00              3855 	mov	a,_bp
   1097 24 F9              3856 	add	a,#0xf9
   1099 F8                 3857 	mov	r0,a
   109A E6                 3858 	mov	a,@r0
   109B C0 E0              3859 	push	acc
   109D 08                 3860 	inc	r0
   109E E6                 3861 	mov	a,@r0
   109F C0 E0              3862 	push	acc
   10A1 08                 3863 	inc	r0
   10A2 E6                 3864 	mov	a,@r0
   10A3 C0 E0              3865 	push	acc
                           3866 ;     genCall
   10A5 8D 82              3867 	mov	dpl,r5
   10A7 8E 83              3868 	mov	dph,r6
   10A9 8F F0              3869 	mov	b,r7
   10AB 12s00r00           3870 	lcall	_strncpy
   10AE E5 81              3871 	mov	a,sp
   10B0 24 FB              3872 	add	a,#0xfb
   10B2 F5 81              3873 	mov	sp,a
   10B4 D0 07              3874 	pop	ar7
   10B6 D0 06              3875 	pop	ar6
   10B8 D0 05              3876 	pop	ar5
                           3877 ;../../Source/tasks.c:1290: portEXIT_CRITICAL();
                           3878 ;     genInline
   10BA D0 E0              3879 	 pop ACC 
                           3880 ;     genAnd
   10BC 53 E0 80           3881 	anl	_ACC,#0x80
                           3882 ;     genOr
   10BF E5 E0              3883 	mov	a,_ACC
   10C1 42 A8              3884 	orl	_IE,a
                           3885 ;     genInline
   10C3 D0 E0              3886 	 pop ACC 
                           3887 ;../../Source/tasks.c:1291: pxTCB->pcTaskName[ ( unsigned portSHORT ) tskMAX_TASK_NAME_LEN - ( unsigned portSHORT ) 1 ] = '\0';
                           3888 ;     genPlus
   10C5 74 0F              3889 	mov	a,#0x0F
   10C7 25 05              3890 	add	a,ar5
   10C9 FD                 3891 	mov	r5,a
   10CA 74 00              3892 	mov	a,#0x00
   10CC 35 06              3893 	addc	a,ar6
   10CE FE                 3894 	mov	r6,a
                           3895 ;     genPointerSet
                           3896 ;     genGenPointerSet
   10CF 8D 82              3897 	mov	dpl,r5
   10D1 8E 83              3898 	mov	dph,r6
   10D3 8F F0              3899 	mov	b,r7
   10D5 74 00              3900 	mov	a,#0x00
   10D7 12s00r00           3901 	lcall	__gptrput
   10DA                    3902 00103$:
                           3903 ;../../Source/tasks.c:1295: if( ucPriority >= ( unsigned portCHAR ) portMAX_PRIORITIES )
                           3904 ;     genCmpLt
   10DA E5*00              3905 	mov	a,_bp
   10DC 24 F8              3906 	add	a,#0xf8
   10DE F8                 3907 	mov	r0,a
                           3908 ;     genCmp
   10DF B6 04 00           3909 	cjne	@r0,#0x04,00111$
   10E2                    3910 00111$:
                           3911 ;     genIfxJump
   10E2 50 03              3912 	jnc	00112$
   10E4 02s10rEE           3913 	ljmp	00105$
   10E7                    3914 00112$:
                           3915 ;../../Source/tasks.c:1297: ucPriority = ( unsigned portCHAR ) portMAX_PRIORITIES - ( unsigned portCHAR ) 1;
                           3916 ;     genAssign
   10E7 E5*00              3917 	mov	a,_bp
   10E9 24 F8              3918 	add	a,#0xf8
   10EB F8                 3919 	mov	r0,a
   10EC 76 03              3920 	mov	@r0,#0x03
   10EE                    3921 00105$:
                           3922 ;../../Source/tasks.c:1299: pxTCB->ucPriority = ucPriority;
                           3923 ;     genPlus
   10EE E5*00              3924 	mov	a,_bp
   10F0 24 01              3925 	add	a,#0x01
   10F2 F8                 3926 	mov	r0,a
   10F3 74 18              3927 	mov	a,#0x18
   10F5 26                 3928 	add	a,@r0
   10F6 FD                 3929 	mov	r5,a
   10F7 74 00              3930 	mov	a,#0x00
   10F9 08                 3931 	inc	r0
   10FA 36                 3932 	addc	a,@r0
   10FB FE                 3933 	mov	r6,a
   10FC 08                 3934 	inc	r0
   10FD 86 07              3935 	mov	ar7,@r0
                           3936 ;     genPointerSet
                           3937 ;     genGenPointerSet
   10FF 8D 82              3938 	mov	dpl,r5
   1101 8E 83              3939 	mov	dph,r6
   1103 8F F0              3940 	mov	b,r7
   1105 E5*00              3941 	mov	a,_bp
   1107 24 F8              3942 	add	a,#0xf8
   1109 F8                 3943 	mov	r0,a
   110A E6                 3944 	mov	a,@r0
   110B 12s00r00           3945 	lcall	__gptrput
                           3946 ;../../Source/tasks.c:1301: vListInitialiseItem( &( pxTCB->xGenericListItem ) );
                           3947 ;     genPlus
   110E E5*00              3948 	mov	a,_bp
   1110 24 01              3949 	add	a,#0x01
   1112 F8                 3950 	mov	r0,a
   1113 74 19              3951 	mov	a,#0x19
   1115 26                 3952 	add	a,@r0
   1116 FD                 3953 	mov	r5,a
   1117 74 00              3954 	mov	a,#0x00
   1119 08                 3955 	inc	r0
   111A 36                 3956 	addc	a,@r0
   111B FE                 3957 	mov	r6,a
   111C 08                 3958 	inc	r0
   111D 86 07              3959 	mov	ar7,@r0
                           3960 ;     genCall
   111F 8D 82              3961 	mov	dpl,r5
   1121 8E 83              3962 	mov	dph,r6
   1123 8F F0              3963 	mov	b,r7
   1125 12s00r00           3964 	lcall	_vListInitialiseItem
                           3965 ;../../Source/tasks.c:1302: vListInitialiseItem( &( pxTCB->xEventListItem ) );
                           3966 ;     genPlus
   1128 E5*00              3967 	mov	a,_bp
   112A 24 01              3968 	add	a,#0x01
   112C F8                 3969 	mov	r0,a
   112D 74 27              3970 	mov	a,#0x27
   112F 26                 3971 	add	a,@r0
   1130 FD                 3972 	mov	r5,a
   1131 74 00              3973 	mov	a,#0x00
   1133 08                 3974 	inc	r0
   1134 36                 3975 	addc	a,@r0
   1135 FE                 3976 	mov	r6,a
   1136 08                 3977 	inc	r0
   1137 86 07              3978 	mov	ar7,@r0
                           3979 ;     genCall
   1139 8D 82              3980 	mov	dpl,r5
   113B 8E 83              3981 	mov	dph,r6
   113D 8F F0              3982 	mov	b,r7
   113F 12s00r00           3983 	lcall	_vListInitialiseItem
                           3984 ;../../Source/tasks.c:1306: listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
                           3985 ;     genPlus
   1142 E5*00              3986 	mov	a,_bp
   1144 24 01              3987 	add	a,#0x01
   1146 F8                 3988 	mov	r0,a
   1147 74 19              3989 	mov	a,#0x19
   1149 26                 3990 	add	a,@r0
   114A FD                 3991 	mov	r5,a
   114B 74 00              3992 	mov	a,#0x00
   114D 08                 3993 	inc	r0
   114E 36                 3994 	addc	a,@r0
   114F FE                 3995 	mov	r6,a
   1150 08                 3996 	inc	r0
   1151 86 07              3997 	mov	ar7,@r0
                           3998 ;     genPlus
   1153 74 08              3999 	mov	a,#0x08
   1155 25 05              4000 	add	a,ar5
   1157 FD                 4001 	mov	r5,a
   1158 74 00              4002 	mov	a,#0x00
   115A 35 06              4003 	addc	a,ar6
   115C FE                 4004 	mov	r6,a
                           4005 ;     genPointerSet
                           4006 ;     genGenPointerSet
   115D 8D 82              4007 	mov	dpl,r5
   115F 8E 83              4008 	mov	dph,r6
   1161 8F F0              4009 	mov	b,r7
   1163 E5*00              4010 	mov	a,_bp
   1165 24 01              4011 	add	a,#0x01
   1167 F8                 4012 	mov	r0,a
   1168 E6                 4013 	mov	a,@r0
   1169 12s00r00           4014 	lcall	__gptrput
   116C A3                 4015 	inc	dptr
   116D 08                 4016 	inc	r0
   116E E6                 4017 	mov	a,@r0
   116F 12s00r00           4018 	lcall	__gptrput
   1172 A3                 4019 	inc	dptr
   1173 08                 4020 	inc	r0
   1174 E6                 4021 	mov	a,@r0
   1175 12s00r00           4022 	lcall	__gptrput
                           4023 ;../../Source/tasks.c:1309: listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( portTickType ) ucPriority );
                           4024 ;     genPlus
   1178 E5*00              4025 	mov	a,_bp
   117A 24 01              4026 	add	a,#0x01
   117C F8                 4027 	mov	r0,a
   117D 74 27              4028 	mov	a,#0x27
   117F 26                 4029 	add	a,@r0
   1180 FD                 4030 	mov	r5,a
   1181 74 00              4031 	mov	a,#0x00
   1183 08                 4032 	inc	r0
   1184 36                 4033 	addc	a,@r0
   1185 FE                 4034 	mov	r6,a
   1186 08                 4035 	inc	r0
   1187 86 07              4036 	mov	ar7,@r0
                           4037 ;     genCast
   1189 E5*00              4038 	mov	a,_bp
   118B 24 F8              4039 	add	a,#0xf8
   118D F8                 4040 	mov	r0,a
   118E 86 02              4041 	mov	ar2,@r0
   1190 7B 00              4042 	mov	r3,#0x00
                           4043 ;     genPointerSet
                           4044 ;     genGenPointerSet
   1192 8D 82              4045 	mov	dpl,r5
   1194 8E 83              4046 	mov	dph,r6
   1196 8F F0              4047 	mov	b,r7
   1198 EA                 4048 	mov	a,r2
   1199 12s00r00           4049 	lcall	__gptrput
   119C A3                 4050 	inc	dptr
   119D EB                 4051 	mov	a,r3
   119E 12s00r00           4052 	lcall	__gptrput
                           4053 ;../../Source/tasks.c:1310: listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
                           4054 ;     genPlus
   11A1 74 08              4055 	mov	a,#0x08
   11A3 25 05              4056 	add	a,ar5
   11A5 FD                 4057 	mov	r5,a
   11A6 74 00              4058 	mov	a,#0x00
   11A8 35 06              4059 	addc	a,ar6
   11AA FE                 4060 	mov	r6,a
                           4061 ;     genPointerSet
                           4062 ;     genGenPointerSet
   11AB 8D 82              4063 	mov	dpl,r5
   11AD 8E 83              4064 	mov	dph,r6
   11AF 8F F0              4065 	mov	b,r7
   11B1 E5*00              4066 	mov	a,_bp
   11B3 24 01              4067 	add	a,#0x01
   11B5 F8                 4068 	mov	r0,a
   11B6 E6                 4069 	mov	a,@r0
   11B7 12s00r00           4070 	lcall	__gptrput
   11BA A3                 4071 	inc	dptr
   11BB 08                 4072 	inc	r0
   11BC E6                 4073 	mov	a,@r0
   11BD 12s00r00           4074 	lcall	__gptrput
   11C0 A3                 4075 	inc	dptr
   11C1 08                 4076 	inc	r0
   11C2 E6                 4077 	mov	a,@r0
   11C3 12s00r00           4078 	lcall	__gptrput
   11C6                    4079 00106$:
   11C6 85*00 81           4080 	mov	sp,_bp
   11C9 D0*00              4081 	pop	_bp
   11CB 22                 4082 	ret
                           4083 ;------------------------------------------------------------
                           4084 ;Allocation info for local variables in function 'prvInitialiseTaskLists'
                           4085 ;------------------------------------------------------------
                           4086 ;ucPriority                Allocated to registers r2 
                           4087 ;sReturn                   Allocated to registers r2 r3 
                           4088 ;------------------------------------------------------------
                           4089 ;../../Source/tasks.c:1314: static portSHORT prvInitialiseTaskLists( void )
                           4090 ;	-----------------------------------------
                           4091 ;	 function prvInitialiseTaskLists
                           4092 ;	-----------------------------------------
   11CC                    4093 _prvInitialiseTaskLists:
   11CC C0*00              4094 	push	_bp
   11CE 85 81*00           4095 	mov	_bp,sp
                           4096 ;../../Source/tasks.c:1319: for( ucPriority = ( unsigned portCHAR) 0; ucPriority < ( unsigned portCHAR ) portMAX_PRIORITIES; ucPriority++ )
                           4097 ;     genAssign
   11D1 7A 00              4098 	mov	r2,#0x00
   11D3                    4099 00101$:
                           4100 ;     genCmpLt
                           4101 ;     genCmp
   11D3 BA 04 00           4102 	cjne	r2,#0x04,00109$
   11D6                    4103 00109$:
                           4104 ;     genIfxJump
   11D6 40 03              4105 	jc	00110$
   11D8 02s11rFB           4106 	ljmp	00104$
   11DB                    4107 00110$:
                           4108 ;../../Source/tasks.c:1321: vListInitialise( ( xList * ) &( pxReadyTasksLists[ ucPriority ] ) );
                           4109 ;     genMult
                           4110 ;     genMultOneByte
   11DB EA                 4111 	mov	a,r2
   11DC 75 F0 16           4112 	mov	b,#0x16
   11DF A4                 4113 	mul	ab
                           4114 ;     genPlus
   11E0 24r00              4115 	add	a,#_pxReadyTasksLists
   11E2 FB                 4116 	mov	r3,a
   11E3 E5 F0              4117 	mov	a,b
   11E5 34s00              4118 	addc	a,#(_pxReadyTasksLists >> 8)
   11E7 FC                 4119 	mov	r4,a
                           4120 ;     genCast
   11E8 7D 01              4121 	mov	r5,#0x1
                           4122 ;     genCall
   11EA 8B 82              4123 	mov	dpl,r3
   11EC 8C 83              4124 	mov	dph,r4
   11EE 8D F0              4125 	mov	b,r5
   11F0 C0 02              4126 	push	ar2
   11F2 12s00r00           4127 	lcall	_vListInitialise
   11F5 D0 02              4128 	pop	ar2
                           4129 ;../../Source/tasks.c:1319: for( ucPriority = ( unsigned portCHAR) 0; ucPriority < ( unsigned portCHAR ) portMAX_PRIORITIES; ucPriority++ )
                           4130 ;     genPlus
                           4131 ;     genPlusIncr
   11F7 0A                 4132 	inc	r2
   11F8 02s11rD3           4133 	ljmp	00101$
   11FB                    4134 00104$:
                           4135 ;../../Source/tasks.c:1324: vListInitialise( ( xList * ) &xDelayedTaskList1 );
                           4136 ;     genCall
   11FB 75 82r58           4137 	mov	dpl,#_xDelayedTaskList1
   11FE 75 83s00           4138 	mov	dph,#(_xDelayedTaskList1 >> 8)
   1201 75 F0 01           4139 	mov	b,#0x01
   1204 12s00r00           4140 	lcall	_vListInitialise
                           4141 ;../../Source/tasks.c:1325: vListInitialise( ( xList * ) &xDelayedTaskList2 );
                           4142 ;     genCall
   1207 75 82r6E           4143 	mov	dpl,#_xDelayedTaskList2
   120A 75 83s00           4144 	mov	dph,#(_xDelayedTaskList2 >> 8)
   120D 75 F0 01           4145 	mov	b,#0x01
   1210 12s00r00           4146 	lcall	_vListInitialise
                           4147 ;../../Source/tasks.c:1326: vListInitialise( ( xList * ) &xPendingReadyList );
                           4148 ;     genCall
   1213 75 82r8A           4149 	mov	dpl,#_xPendingReadyList
   1216 75 83s00           4150 	mov	dph,#(_xPendingReadyList >> 8)
   1219 75 F0 01           4151 	mov	b,#0x01
   121C 12s00r00           4152 	lcall	_vListInitialise
                           4153 ;../../Source/tasks.c:1342: pxDelayedTaskList = &xDelayedTaskList1;
                           4154 ;     genCast
   121F 90s00r84           4155 	mov	dptr,#_pxDelayedTaskList
   1222 74r58              4156 	mov	a,#_xDelayedTaskList1
   1224 F0                 4157 	movx	@dptr,a
   1225 A3                 4158 	inc	dptr
   1226 74s00              4159 	mov	a,#(_xDelayedTaskList1 >> 8)
   1228 F0                 4160 	movx	@dptr,a
   1229 A3                 4161 	inc	dptr
   122A 74 01              4162 	mov	a,#0x1
   122C F0                 4163 	movx	@dptr,a
                           4164 ;../../Source/tasks.c:1343: pxOverflowDelayedTaskList = &xDelayedTaskList2;
                           4165 ;     genCast
   122D 90s00r87           4166 	mov	dptr,#_pxOverflowDelayedTaskList
   1230 74r6E              4167 	mov	a,#_xDelayedTaskList2
   1232 F0                 4168 	movx	@dptr,a
   1233 A3                 4169 	inc	dptr
   1234 74s00              4170 	mov	a,#(_xDelayedTaskList2 >> 8)
   1236 F0                 4171 	movx	@dptr,a
   1237 A3                 4172 	inc	dptr
   1238 74 01              4173 	mov	a,#0x1
   123A F0                 4174 	movx	@dptr,a
                           4175 ;../../Source/tasks.c:1346: sReturn = sTaskCreate( prvIdleTask, ( const portCHAR * const ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, tskIDLE_PRIORITY, ( xTaskHandle * ) NULL );
                           4176 ;     genIpush
   123B 74 00              4177 	mov	a,#0x00
   123D C0 E0              4178 	push	acc
   123F 74 00              4179 	mov	a,#0x00
   1241 C0 E0              4180 	push	acc
   1243 74 00              4181 	mov	a,#0x00
   1245 C0 E0              4182 	push	acc
                           4183 ;     genIpush
   1247 74 00              4184 	mov	a,#0x00
   1249 C0 E0              4185 	push	acc
                           4186 ;     genIpush
   124B 74 00              4187 	mov	a,#0x00
   124D C0 E0              4188 	push	acc
   124F 74 00              4189 	mov	a,#0x00
   1251 C0 E0              4190 	push	acc
   1253 74 00              4191 	mov	a,#0x00
   1255 C0 E0              4192 	push	acc
                           4193 ;     genIpush
   1257 74 A6              4194 	mov	a,#0xA6
   1259 C0 E0              4195 	push	acc
   125B 74 00              4196 	mov	a,#0x00
   125D C0 E0              4197 	push	acc
                           4198 ;     genIpush
   125F 74r87              4199 	mov	a,#__str_0
   1261 C0 E0              4200 	push	acc
   1263 74s13              4201 	mov	a,#(__str_0 >> 8)
   1265 C0 E0              4202 	push	acc
   1267 74 02              4203 	mov	a,#0x02
   1269 C0 E0              4204 	push	acc
                           4205 ;     genCall
   126B 75 82rB4           4206 	mov	dpl,#_prvIdleTask
   126E 75 83s0F           4207 	mov	dph,#(_prvIdleTask >> 8)
   1271 12s00r00           4208 	lcall	_sTaskCreate
   1274 AA 82              4209 	mov	r2,dpl
   1276 AB 83              4210 	mov	r3,dph
   1278 E5 81              4211 	mov	a,sp
   127A 24 F4              4212 	add	a,#0xf4
   127C F5 81              4213 	mov	sp,a
                           4214 ;     genAssign
                           4215 ;../../Source/tasks.c:1348: return sReturn;
                           4216 ;     genRet
   127E 8A 82              4217 	mov	dpl,r2
   1280 8B 83              4218 	mov	dph,r3
   1282                    4219 00105$:
   1282 85*00 81           4220 	mov	sp,_bp
   1285 D0*00              4221 	pop	_bp
   1287 22                 4222 	ret
                           4223 ;------------------------------------------------------------
                           4224 ;Allocation info for local variables in function 'prvCheckTasksWaitingTermination'
                           4225 ;------------------------------------------------------------
                           4226 ;------------------------------------------------------------
                           4227 ;../../Source/tasks.c:1352: static void prvCheckTasksWaitingTermination( void )
                           4228 ;	-----------------------------------------
                           4229 ;	 function prvCheckTasksWaitingTermination
                           4230 ;	-----------------------------------------
   1288                    4231 _prvCheckTasksWaitingTermination:
   1288 C0*00              4232 	push	_bp
   128A 85 81*00           4233 	mov	_bp,sp
                           4234 ;../../Source/tasks.c:1378: }
   128D                    4235 00101$:
   128D 85*00 81           4236 	mov	sp,_bp
   1290 D0*00              4237 	pop	_bp
   1292 22                 4238 	ret
                           4239 ;------------------------------------------------------------
                           4240 ;Allocation info for local variables in function 'prvAllocateTCBAndStack'
                           4241 ;------------------------------------------------------------
                           4242 ;usStackDepth              Allocated to stack - offset 1
                           4243 ;pxNewTCB                  Allocated to stack - offset 3
                           4244 ;------------------------------------------------------------
                           4245 ;../../Source/tasks.c:1381: static tskTCB *prvAllocateTCBAndStack( unsigned portSHORT usStackDepth )
                           4246 ;	-----------------------------------------
                           4247 ;	 function prvAllocateTCBAndStack
                           4248 ;	-----------------------------------------
   1293                    4249 _prvAllocateTCBAndStack:
   1293 C0*00              4250 	push	_bp
   1295 85 81*00           4251 	mov	_bp,sp
                           4252 ;     genReceive
   1298 C0 82              4253 	push	dpl
   129A C0 83              4254 	push	dph
   129C 05 81              4255 	inc	sp
   129E 05 81              4256 	inc	sp
   12A0 05 81              4257 	inc	sp
                           4258 ;../../Source/tasks.c:1387: pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
                           4259 ;     genCall
   12A2 75 82 36           4260 	mov	dpl,#0x36
   12A5 75 83 00           4261 	mov	dph,#0x00
   12A8 12s00r00           4262 	lcall	_pvPortMalloc
   12AB AC 82              4263 	mov	r4,dpl
   12AD AD 83              4264 	mov	r5,dph
   12AF AE F0              4265 	mov	r6,b
                           4266 ;     genAssign
   12B1 E5*00              4267 	mov	a,_bp
   12B3 24 03              4268 	add	a,#0x03
   12B5 F8                 4269 	mov	r0,a
   12B6 A6 04              4270 	mov	@r0,ar4
   12B8 08                 4271 	inc	r0
   12B9 A6 05              4272 	mov	@r0,ar5
   12BB 08                 4273 	inc	r0
   12BC A6 06              4274 	mov	@r0,ar6
                           4275 ;../../Source/tasks.c:1389: if( pxNewTCB != NULL )
                           4276 ;     genCmpEq
   12BE E5*00              4277 	mov	a,_bp
   12C0 24 03              4278 	add	a,#0x03
   12C2 F8                 4279 	mov	r0,a
   12C3 B6 00 0B           4280 	cjne	@r0,#0x00,00110$
   12C6 08                 4281 	inc	r0
   12C7 B6 00 07           4282 	cjne	@r0,#0x00,00110$
   12CA 08                 4283 	inc	r0
   12CB B6 00 03           4284 	cjne	@r0,#0x00,00110$
   12CE 02s13r74           4285 	ljmp	00105$
   12D1                    4286 00110$:
                           4287 ;../../Source/tasks.c:1394: pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMalloc( usStackDepth * sizeof( portSTACK_TYPE ) );
                           4288 ;     genPlus
   12D1 E5*00              4289 	mov	a,_bp
   12D3 24 03              4290 	add	a,#0x03
   12D5 F8                 4291 	mov	r0,a
                           4292 ;     genPlusIncr
   12D6 74 03              4293 	mov	a,#0x03
   12D8 26                 4294 	add	a,@r0
   12D9 FF                 4295 	mov	r7,a
   12DA 74 00              4296 	mov	a,#0x00
   12DC 08                 4297 	inc	r0
   12DD 36                 4298 	addc	a,@r0
   12DE FA                 4299 	mov	r2,a
   12DF 08                 4300 	inc	r0
   12E0 86 03              4301 	mov	ar3,@r0
                           4302 ;     genCall
   12E2 E5*00              4303 	mov	a,_bp
   12E4 24 01              4304 	add	a,#0x01
   12E6 F8                 4305 	mov	r0,a
   12E7 86 82              4306 	mov	dpl,@r0
   12E9 08                 4307 	inc	r0
   12EA 86 83              4308 	mov	dph,@r0
   12EC C0 02              4309 	push	ar2
   12EE C0 03              4310 	push	ar3
   12F0 C0 07              4311 	push	ar7
   12F2 12s00r00           4312 	lcall	_pvPortMalloc
   12F5 AC 82              4313 	mov	r4,dpl
   12F7 AD 83              4314 	mov	r5,dph
   12F9 AE F0              4315 	mov	r6,b
   12FB D0 07              4316 	pop	ar7
   12FD D0 03              4317 	pop	ar3
   12FF D0 02              4318 	pop	ar2
                           4319 ;     genPointerSet
                           4320 ;     genGenPointerSet
   1301 8F 82              4321 	mov	dpl,r7
   1303 8A 83              4322 	mov	dph,r2
   1305 8B F0              4323 	mov	b,r3
   1307 EC                 4324 	mov	a,r4
   1308 12s00r00           4325 	lcall	__gptrput
   130B A3                 4326 	inc	dptr
   130C ED                 4327 	mov	a,r5
   130D 12s00r00           4328 	lcall	__gptrput
   1310 A3                 4329 	inc	dptr
   1311 EE                 4330 	mov	a,r6
   1312 12s00r00           4331 	lcall	__gptrput
                           4332 ;../../Source/tasks.c:1396: if( pxNewTCB->pxStack == NULL )
                           4333 ;     genCmpEq
   1315 BC 00 08           4334 	cjne	r4,#0x00,00111$
   1318 BD 00 05           4335 	cjne	r5,#0x00,00111$
   131B BE 00 02           4336 	cjne	r6,#0x00,00111$
   131E 80 03              4337 	sjmp	00112$
   1320                    4338 00111$:
   1320 02s13r41           4339 	ljmp	00102$
   1323                    4340 00112$:
                           4341 ;../../Source/tasks.c:1399: vPortFree( pxNewTCB );			
                           4342 ;     genCall
   1323 E5*00              4343 	mov	a,_bp
   1325 24 03              4344 	add	a,#0x03
   1327 F8                 4345 	mov	r0,a
   1328 86 82              4346 	mov	dpl,@r0
   132A 08                 4347 	inc	r0
   132B 86 83              4348 	mov	dph,@r0
   132D 08                 4349 	inc	r0
   132E 86 F0              4350 	mov	b,@r0
   1330 12s00r00           4351 	lcall	_vPortFree
                           4352 ;../../Source/tasks.c:1400: pxNewTCB = NULL;			
                           4353 ;     genAssign
   1333 E5*00              4354 	mov	a,_bp
   1335 24 03              4355 	add	a,#0x03
   1337 F8                 4356 	mov	r0,a
   1338 E4                 4357 	clr	a
   1339 F6                 4358 	mov	@r0,a
   133A 08                 4359 	inc	r0
   133B F6                 4360 	mov	@r0,a
   133C 08                 4361 	inc	r0
   133D F6                 4362 	mov	@r0,a
   133E 02s13r74           4363 	ljmp	00105$
   1341                    4364 00102$:
                           4365 ;../../Source/tasks.c:1405: memset( pxNewTCB->pxStack, tskSTACK_FILL_BYTE, usStackDepth * sizeof( portSTACK_TYPE ) );
                           4366 ;     genPointerGet
                           4367 ;     genGenPointerGet
   1341 8F 82              4368 	mov	dpl,r7
   1343 8A 83              4369 	mov	dph,r2
   1345 8B F0              4370 	mov	b,r3
   1347 12s00r00           4371 	lcall	__gptrget
   134A FF                 4372 	mov	r7,a
   134B A3                 4373 	inc	dptr
   134C 12s00r00           4374 	lcall	__gptrget
   134F FA                 4375 	mov	r2,a
   1350 A3                 4376 	inc	dptr
   1351 12s00r00           4377 	lcall	__gptrget
   1354 FB                 4378 	mov	r3,a
                           4379 ;     genIpush
   1355 E5*00              4380 	mov	a,_bp
   1357 24 01              4381 	add	a,#0x01
   1359 F8                 4382 	mov	r0,a
   135A E6                 4383 	mov	a,@r0
   135B C0 E0              4384 	push	acc
   135D 08                 4385 	inc	r0
   135E E6                 4386 	mov	a,@r0
   135F C0 E0              4387 	push	acc
                           4388 ;     genIpush
   1361 74 A5              4389 	mov	a,#0xA5
   1363 C0 E0              4390 	push	acc
                           4391 ;     genCall
   1365 8F 82              4392 	mov	dpl,r7
   1367 8A 83              4393 	mov	dph,r2
   1369 8B F0              4394 	mov	b,r3
   136B 12s00r00           4395 	lcall	_memset
   136E 15 81              4396 	dec	sp
   1370 15 81              4397 	dec	sp
   1372 15 81              4398 	dec	sp
   1374                    4399 00105$:
                           4400 ;../../Source/tasks.c:1409: return pxNewTCB;
                           4401 ;     genRet
   1374 E5*00              4402 	mov	a,_bp
   1376 24 03              4403 	add	a,#0x03
   1378 F8                 4404 	mov	r0,a
   1379 86 82              4405 	mov	dpl,@r0
   137B 08                 4406 	inc	r0
   137C 86 83              4407 	mov	dph,@r0
   137E 08                 4408 	inc	r0
   137F 86 F0              4409 	mov	b,@r0
   1381                    4410 00106$:
   1381 85*00 81           4411 	mov	sp,_bp
   1384 D0*00              4412 	pop	_bp
   1386 22                 4413 	ret
                           4414 	.area CSEG    (CODE)
   1387                    4415 __str_0:
   1387 49 44 4C 45        4416 	.ascii "IDLE"
   138B 00                 4417 	.db 0x00
                           4418 	.area XINIT   (CODE)
   0000                    4419 __xinit__pxCurrentTCB:
                           4420 ; generic printIvalPtr
   0000 00 00 00           4421 	.byte #0x00,#0x00,#0x00
   0003                    4422 __xinit__sUsingPreemption:
   0003 00 00              4423 	.byte #0x00,#0x00
   0005                    4424 __xinit__usCurrentNumberOfTasks:
   0005 00 00              4425 	.byte #0x00,#0x00
   0007                    4426 __xinit__xTickCount:
   0007 00 00              4427 	.byte #0x00,#0x00
   0009                    4428 __xinit__ucTopUsedPriority:
   0009 00                 4429 	.db #0x00
   000A                    4430 __xinit__ucTopReadyPriority:
   000A 00                 4431 	.db #0x00
   000B                    4432 __xinit__cSchedulerRunning:
   000B 00                 4433 	.db #0x00
   000C                    4434 __xinit__ucSchedulerSuspended:
   000C 00                 4435 	.db #0x00
   000D                    4436 __xinit__ucMissedTicks:
   000D 00                 4437 	.db #0x00
