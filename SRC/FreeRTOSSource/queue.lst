                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.4.8 #964 (Feb 23 2005)
                              4 ; This file generated Fri May 20 14:05:28 2005
                              5 ;--------------------------------------------------------
                              6 	.module ______Source_queue
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _TF2
                             13 	.globl _EXF2
                             14 	.globl _RCLK
                             15 	.globl _TCLK
                             16 	.globl _EXEN2
                             17 	.globl _TR2
                             18 	.globl _C_T2
                             19 	.globl _CP_RL2
                             20 	.globl _T2CON_7
                             21 	.globl _T2CON_6
                             22 	.globl _T2CON_5
                             23 	.globl _T2CON_4
                             24 	.globl _T2CON_3
                             25 	.globl _T2CON_2
                             26 	.globl _T2CON_1
                             27 	.globl _T2CON_0
                             28 	.globl _ET2
                             29 	.globl _CY
                             30 	.globl _AC
                             31 	.globl _F0
                             32 	.globl _RS1
                             33 	.globl _RS0
                             34 	.globl _OV
                             35 	.globl _F1
                             36 	.globl _P
                             37 	.globl _PS
                             38 	.globl _PT1
                             39 	.globl _PX1
                             40 	.globl _PT0
                             41 	.globl _PX0
                             42 	.globl _RD
                             43 	.globl _WR
                             44 	.globl _T1
                             45 	.globl _T0
                             46 	.globl _INT1
                             47 	.globl _INT0
                             48 	.globl _TXD
                             49 	.globl _RXD
                             50 	.globl _P3_7
                             51 	.globl _P3_6
                             52 	.globl _P3_5
                             53 	.globl _P3_4
                             54 	.globl _P3_3
                             55 	.globl _P3_2
                             56 	.globl _P3_1
                             57 	.globl _P3_0
                             58 	.globl _EA
                             59 	.globl _ES
                             60 	.globl _ET1
                             61 	.globl _EX1
                             62 	.globl _ET0
                             63 	.globl _EX0
                             64 	.globl _P2_7
                             65 	.globl _P2_6
                             66 	.globl _P2_5
                             67 	.globl _P2_4
                             68 	.globl _P2_3
                             69 	.globl _P2_2
                             70 	.globl _P2_1
                             71 	.globl _P2_0
                             72 	.globl _SM0
                             73 	.globl _SM1
                             74 	.globl _SM2
                             75 	.globl _REN
                             76 	.globl _TB8
                             77 	.globl _RB8
                             78 	.globl _TI
                             79 	.globl _RI
                             80 	.globl _P1_7
                             81 	.globl _P1_6
                             82 	.globl _P1_5
                             83 	.globl _P1_4
                             84 	.globl _P1_3
                             85 	.globl _P1_2
                             86 	.globl _P1_1
                             87 	.globl _P1_0
                             88 	.globl _TF1
                             89 	.globl _TR1
                             90 	.globl _TF0
                             91 	.globl _TR0
                             92 	.globl _IE1
                             93 	.globl _IT1
                             94 	.globl _IE0
                             95 	.globl _IT0
                             96 	.globl _P0_7
                             97 	.globl _P0_6
                             98 	.globl _P0_5
                             99 	.globl _P0_4
                            100 	.globl _P0_3
                            101 	.globl _P0_2
                            102 	.globl _P0_1
                            103 	.globl _P0_0
                            104 	.globl _TH2
                            105 	.globl _TL2
                            106 	.globl _RCAP2H
                            107 	.globl _RCAP2L
                            108 	.globl _T2CON
                            109 	.globl _B
                            110 	.globl _ACC
                            111 	.globl _PSW
                            112 	.globl _IP
                            113 	.globl _P3
                            114 	.globl _IE
                            115 	.globl _P2
                            116 	.globl _SBUF
                            117 	.globl _SCON
                            118 	.globl _P1
                            119 	.globl _TH1
                            120 	.globl _TH0
                            121 	.globl _TL1
                            122 	.globl _TL0
                            123 	.globl _TMOD
                            124 	.globl _TCON
                            125 	.globl _PCON
                            126 	.globl _DPH
                            127 	.globl _DPL
                            128 	.globl _SP
                            129 	.globl _P0
                            130 	.globl _xQueueCreate
                            131 	.globl _cQueueSend
                            132 	.globl _cQueueSendFromISR
                            133 	.globl _cQueueReceive
                            134 	.globl _cQueueReceiveFromISR
                            135 	.globl _ucQueueMessagesWaiting
                            136 	.globl _vQueueDelete
                            137 ;--------------------------------------------------------
                            138 ; special function registers
                            139 ;--------------------------------------------------------
                            140 	.area RSEG    (DATA)
                    0080    141 _P0	=	0x0080
                    0081    142 _SP	=	0x0081
                    0082    143 _DPL	=	0x0082
                    0083    144 _DPH	=	0x0083
                    0087    145 _PCON	=	0x0087
                    0088    146 _TCON	=	0x0088
                    0089    147 _TMOD	=	0x0089
                    008A    148 _TL0	=	0x008a
                    008B    149 _TL1	=	0x008b
                    008C    150 _TH0	=	0x008c
                    008D    151 _TH1	=	0x008d
                    0090    152 _P1	=	0x0090
                    0098    153 _SCON	=	0x0098
                    0099    154 _SBUF	=	0x0099
                    00A0    155 _P2	=	0x00a0
                    00A8    156 _IE	=	0x00a8
                    00B0    157 _P3	=	0x00b0
                    00B8    158 _IP	=	0x00b8
                    00D0    159 _PSW	=	0x00d0
                    00E0    160 _ACC	=	0x00e0
                    00F0    161 _B	=	0x00f0
                    00C8    162 _T2CON	=	0x00c8
                    00CA    163 _RCAP2L	=	0x00ca
                    00CB    164 _RCAP2H	=	0x00cb
                    00CC    165 _TL2	=	0x00cc
                    00CD    166 _TH2	=	0x00cd
                            167 ;--------------------------------------------------------
                            168 ; special function bits 
                            169 ;--------------------------------------------------------
                            170 	.area RSEG    (DATA)
                    0080    171 _P0_0	=	0x0080
                    0081    172 _P0_1	=	0x0081
                    0082    173 _P0_2	=	0x0082
                    0083    174 _P0_3	=	0x0083
                    0084    175 _P0_4	=	0x0084
                    0085    176 _P0_5	=	0x0085
                    0086    177 _P0_6	=	0x0086
                    0087    178 _P0_7	=	0x0087
                    0088    179 _IT0	=	0x0088
                    0089    180 _IE0	=	0x0089
                    008A    181 _IT1	=	0x008a
                    008B    182 _IE1	=	0x008b
                    008C    183 _TR0	=	0x008c
                    008D    184 _TF0	=	0x008d
                    008E    185 _TR1	=	0x008e
                    008F    186 _TF1	=	0x008f
                    0090    187 _P1_0	=	0x0090
                    0091    188 _P1_1	=	0x0091
                    0092    189 _P1_2	=	0x0092
                    0093    190 _P1_3	=	0x0093
                    0094    191 _P1_4	=	0x0094
                    0095    192 _P1_5	=	0x0095
                    0096    193 _P1_6	=	0x0096
                    0097    194 _P1_7	=	0x0097
                    0098    195 _RI	=	0x0098
                    0099    196 _TI	=	0x0099
                    009A    197 _RB8	=	0x009a
                    009B    198 _TB8	=	0x009b
                    009C    199 _REN	=	0x009c
                    009D    200 _SM2	=	0x009d
                    009E    201 _SM1	=	0x009e
                    009F    202 _SM0	=	0x009f
                    00A0    203 _P2_0	=	0x00a0
                    00A1    204 _P2_1	=	0x00a1
                    00A2    205 _P2_2	=	0x00a2
                    00A3    206 _P2_3	=	0x00a3
                    00A4    207 _P2_4	=	0x00a4
                    00A5    208 _P2_5	=	0x00a5
                    00A6    209 _P2_6	=	0x00a6
                    00A7    210 _P2_7	=	0x00a7
                    00A8    211 _EX0	=	0x00a8
                    00A9    212 _ET0	=	0x00a9
                    00AA    213 _EX1	=	0x00aa
                    00AB    214 _ET1	=	0x00ab
                    00AC    215 _ES	=	0x00ac
                    00AF    216 _EA	=	0x00af
                    00B0    217 _P3_0	=	0x00b0
                    00B1    218 _P3_1	=	0x00b1
                    00B2    219 _P3_2	=	0x00b2
                    00B3    220 _P3_3	=	0x00b3
                    00B4    221 _P3_4	=	0x00b4
                    00B5    222 _P3_5	=	0x00b5
                    00B6    223 _P3_6	=	0x00b6
                    00B7    224 _P3_7	=	0x00b7
                    00B0    225 _RXD	=	0x00b0
                    00B1    226 _TXD	=	0x00b1
                    00B2    227 _INT0	=	0x00b2
                    00B3    228 _INT1	=	0x00b3
                    00B4    229 _T0	=	0x00b4
                    00B5    230 _T1	=	0x00b5
                    00B6    231 _WR	=	0x00b6
                    00B7    232 _RD	=	0x00b7
                    00B8    233 _PX0	=	0x00b8
                    00B9    234 _PT0	=	0x00b9
                    00BA    235 _PX1	=	0x00ba
                    00BB    236 _PT1	=	0x00bb
                    00BC    237 _PS	=	0x00bc
                    00D0    238 _P	=	0x00d0
                    00D1    239 _F1	=	0x00d1
                    00D2    240 _OV	=	0x00d2
                    00D3    241 _RS0	=	0x00d3
                    00D4    242 _RS1	=	0x00d4
                    00D5    243 _F0	=	0x00d5
                    00D6    244 _AC	=	0x00d6
                    00D7    245 _CY	=	0x00d7
                    00AD    246 _ET2	=	0x00ad
                    00C8    247 _T2CON_0	=	0x00c8
                    00C9    248 _T2CON_1	=	0x00c9
                    00CA    249 _T2CON_2	=	0x00ca
                    00CB    250 _T2CON_3	=	0x00cb
                    00CC    251 _T2CON_4	=	0x00cc
                    00CD    252 _T2CON_5	=	0x00cd
                    00CE    253 _T2CON_6	=	0x00ce
                    00CF    254 _T2CON_7	=	0x00cf
                    00C8    255 _CP_RL2	=	0x00c8
                    00C9    256 _C_T2	=	0x00c9
                    00CA    257 _TR2	=	0x00ca
                    00CB    258 _EXEN2	=	0x00cb
                    00CC    259 _TCLK	=	0x00cc
                    00CD    260 _RCLK	=	0x00cd
                    00CE    261 _EXF2	=	0x00ce
                    00CF    262 _TF2	=	0x00cf
                            263 ;--------------------------------------------------------
                            264 ; overlayable register banks 
                            265 ;--------------------------------------------------------
                            266 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     267 	.ds 8
                            268 ;--------------------------------------------------------
                            269 ; internal ram data
                            270 ;--------------------------------------------------------
                            271 	.area DSEG    (DATA)
                            272 ;--------------------------------------------------------
                            273 ; overlayable items in internal ram 
                            274 ;--------------------------------------------------------
                            275 	.area OSEG    (OVR,DATA)
                            276 ;--------------------------------------------------------
                            277 ; indirectly addressable internal ram data
                            278 ;--------------------------------------------------------
                            279 	.area ISEG    (DATA)
                            280 ;--------------------------------------------------------
                            281 ; bit data
                            282 ;--------------------------------------------------------
                            283 	.area BSEG    (BIT)
                            284 ;--------------------------------------------------------
                            285 ; paged external ram data
                            286 ;--------------------------------------------------------
                            287 	.area PSEG    (PAG,XDATA)
                            288 ;--------------------------------------------------------
                            289 ; external ram data
                            290 ;--------------------------------------------------------
                            291 	.area XSEG    (XDATA)
                            292 ;--------------------------------------------------------
                            293 ; external initialized ram data
                            294 ;--------------------------------------------------------
                            295 	.area XISEG   (XDATA)
                            296 	.area CSEG    (CODE)
                            297 	.area GSINIT0 (CODE)
                            298 	.area GSINIT1 (CODE)
                            299 	.area GSINIT2 (CODE)
                            300 	.area GSINIT3 (CODE)
                            301 	.area GSINIT4 (CODE)
                            302 	.area GSINIT5 (CODE)
                            303 ;--------------------------------------------------------
                            304 ; global & static initialisations
                            305 ;--------------------------------------------------------
                            306 	.area CSEG    (CODE)
                            307 	.area GSINIT  (CODE)
                            308 	.area GSFINAL (CODE)
                            309 	.area GSINIT  (CODE)
                            310 ;--------------------------------------------------------
                            311 ; Home
                            312 ;--------------------------------------------------------
                            313 	.area HOME    (CODE)
                            314 	.area CSEG    (CODE)
                            315 ;--------------------------------------------------------
                            316 ; code
                            317 ;--------------------------------------------------------
                            318 	.area CSEG    (CODE)
                            319 ;------------------------------------------------------------
                            320 ;Allocation info for local variables in function 'xQueueCreate'
                            321 ;------------------------------------------------------------
                            322 ;ucItemSize                Allocated to stack - offset -3
                            323 ;ucQueueLength             Allocated to stack - offset 1
                            324 ;pxNewQueue                Allocated to stack - offset 2
                            325 ;usQueueSizeInBytes        Allocated to registers r2 r3 
                            326 ;sloc0                     Allocated to stack - offset 5
                            327 ;sloc1                     Allocated to stack - offset 8
                            328 ;------------------------------------------------------------
                            329 ;../../Source/queue.c:168: xQueueHandle xQueueCreate( unsigned portCHAR ucQueueLength, unsigned portCHAR ucItemSize )
                            330 ;	-----------------------------------------
                            331 ;	 function xQueueCreate
                            332 ;	-----------------------------------------
   0000                     333 _xQueueCreate:
                    0002    334 	ar2 = 0x02
                    0003    335 	ar3 = 0x03
                    0004    336 	ar4 = 0x04
                    0005    337 	ar5 = 0x05
                    0006    338 	ar6 = 0x06
                    0007    339 	ar7 = 0x07
                    0000    340 	ar0 = 0x00
                    0001    341 	ar1 = 0x01
   0000 C0*00               342 	push	_bp
   0002 85 81*00            343 	mov	_bp,sp
                            344 ;     genReceive
   0005 C0 82               345 	push	dpl
   0007 E5 81               346 	mov	a,sp
   0009 24 09               347 	add	a,#0x09
   000B F5 81               348 	mov	sp,a
                            349 ;../../Source/queue.c:174: if( ucQueueLength > ( unsigned portCHAR ) 0 )
                            350 ;     genCmpGt
   000D E5*00               351 	mov	a,_bp
   000F 24 01               352 	add	a,#0x01
   0011 F8                  353 	mov	r0,a
                            354 ;     genCmp
   0012 C3                  355 	clr	c
   0013 74 00               356 	mov	a,#0x00
   0015 96                  357 	subb	a,@r0
                            358 ;     genIfxJump
   0016 40 03               359 	jc	00113$
   0018 02s02r8A            360 	ljmp	00107$
   001B                     361 00113$:
                            362 ;../../Source/queue.c:176: pxNewQueue = ( xQUEUE * ) pvPortMalloc( sizeof( xQUEUE ) );
                            363 ;     genCall
   001B 75 82 3D            364 	mov	dpl,#0x3D
   001E 75 83 00            365 	mov	dph,#0x00
   0021 12s00r00            366 	lcall	_pvPortMalloc
   0024 AB 82               367 	mov	r3,dpl
   0026 AC 83               368 	mov	r4,dph
   0028 AD F0               369 	mov	r5,b
                            370 ;     genAssign
   002A E5*00               371 	mov	a,_bp
   002C 24 02               372 	add	a,#0x02
   002E F8                  373 	mov	r0,a
   002F A6 03               374 	mov	@r0,ar3
   0031 08                  375 	inc	r0
   0032 A6 04               376 	mov	@r0,ar4
   0034 08                  377 	inc	r0
   0035 A6 05               378 	mov	@r0,ar5
                            379 ;../../Source/queue.c:177: if( pxNewQueue != NULL )
                            380 ;     genCmpEq
   0037 E5*00               381 	mov	a,_bp
   0039 24 02               382 	add	a,#0x02
   003B F8                  383 	mov	r0,a
   003C B6 00 0B            384 	cjne	@r0,#0x00,00114$
   003F 08                  385 	inc	r0
   0040 B6 00 07            386 	cjne	@r0,#0x00,00114$
   0043 08                  387 	inc	r0
   0044 B6 00 03            388 	cjne	@r0,#0x00,00114$
   0047 02s02r8A            389 	ljmp	00107$
   004A                     390 00114$:
                            391 ;../../Source/queue.c:181: usQueueSizeInBytes = ( unsigned portSHORT ) ( ucQueueLength * ucItemSize ) + ( unsigned portSHORT ) 1;
                            392 ;     genMult
   004A E5*00               393 	mov	a,_bp
   004C 24 01               394 	add	a,#0x01
   004E F8                  395 	mov	r0,a
   004F E5*00               396 	mov	a,_bp
   0051 24 FD               397 	add	a,#0xfd
   0053 F9                  398 	mov	r1,a
                            399 ;     genMultOneByte
   0054 86 F0               400 	mov	b,@r0
   0056 E7                  401 	mov	a,@r1
   0057 A4                  402 	mul	ab
   0058 FE                  403 	mov	r6,a
   0059 AF F0               404 	mov	r7,b
                            405 ;     genPlus
                            406 ;     genPlusIncr
   005B 74 01               407 	mov	a,#0x01
   005D 25 06               408 	add	a,ar6
   005F FA                  409 	mov	r2,a
   0060 74 00               410 	mov	a,#0x00
   0062 35 07               411 	addc	a,ar7
   0064 FB                  412 	mov	r3,a
                            413 ;../../Source/queue.c:183: pxNewQueue->pcHead = ( signed portCHAR * ) pvPortMalloc( usQueueSizeInBytes );
                            414 ;     genCall
   0065 8A 82               415 	mov	dpl,r2
   0067 8B 83               416 	mov	dph,r3
   0069 C0 06               417 	push	ar6
   006B C0 07               418 	push	ar7
   006D 12s00r00            419 	lcall	_pvPortMalloc
   0070 AA 82               420 	mov	r2,dpl
   0072 AB 83               421 	mov	r3,dph
   0074 AC F0               422 	mov	r4,b
   0076 D0 07               423 	pop	ar7
   0078 D0 06               424 	pop	ar6
                            425 ;     genPointerSet
                            426 ;     genGenPointerSet
   007A E5*00               427 	mov	a,_bp
   007C 24 02               428 	add	a,#0x02
   007E F8                  429 	mov	r0,a
   007F 86 82               430 	mov	dpl,@r0
   0081 08                  431 	inc	r0
   0082 86 83               432 	mov	dph,@r0
   0084 08                  433 	inc	r0
   0085 86 F0               434 	mov	b,@r0
   0087 EA                  435 	mov	a,r2
   0088 12s00r00            436 	lcall	__gptrput
   008B A3                  437 	inc	dptr
   008C EB                  438 	mov	a,r3
   008D 12s00r00            439 	lcall	__gptrput
   0090 A3                  440 	inc	dptr
   0091 EC                  441 	mov	a,r4
   0092 12s00r00            442 	lcall	__gptrput
                            443 ;../../Source/queue.c:184: if( pxNewQueue->pcHead != NULL )
                            444 ;     genCmpEq
   0095 BA 00 09            445 	cjne	r2,#0x00,00115$
   0098 BB 00 06            446 	cjne	r3,#0x00,00115$
   009B BC 00 03            447 	cjne	r4,#0x00,00115$
   009E 02s02r7A            448 	ljmp	00102$
   00A1                     449 00115$:
                            450 ;../../Source/queue.c:188: pxNewQueue->pcTail = pxNewQueue->pcHead + ( ucQueueLength * ucItemSize );
                            451 ;     genPlus
   00A1 E5*00               452 	mov	a,_bp
   00A3 24 02               453 	add	a,#0x02
   00A5 F8                  454 	mov	r0,a
   00A6 E5*00               455 	mov	a,_bp
   00A8 24 05               456 	add	a,#0x05
   00AA F9                  457 	mov	r1,a
                            458 ;     genPlusIncr
   00AB 74 03               459 	mov	a,#0x03
   00AD 26                  460 	add	a,@r0
   00AE F7                  461 	mov	@r1,a
   00AF 74 00               462 	mov	a,#0x00
   00B1 08                  463 	inc	r0
   00B2 36                  464 	addc	a,@r0
   00B3 09                  465 	inc	r1
   00B4 F7                  466 	mov	@r1,a
   00B5 08                  467 	inc	r0
   00B6 09                  468 	inc	r1
   00B7 E6                  469 	mov	a,@r0
   00B8 F7                  470 	mov	@r1,a
                            471 ;     genPointerGet
                            472 ;     genGenPointerGet
   00B9 E5*00               473 	mov	a,_bp
   00BB 24 02               474 	add	a,#0x02
   00BD F8                  475 	mov	r0,a
   00BE 86 82               476 	mov	dpl,@r0
   00C0 08                  477 	inc	r0
   00C1 86 83               478 	mov	dph,@r0
   00C3 08                  479 	inc	r0
   00C4 86 F0               480 	mov	b,@r0
   00C6 12s00r00            481 	lcall	__gptrget
   00C9 FD                  482 	mov	r5,a
   00CA A3                  483 	inc	dptr
   00CB 12s00r00            484 	lcall	__gptrget
   00CE FA                  485 	mov	r2,a
   00CF A3                  486 	inc	dptr
   00D0 12s00r00            487 	lcall	__gptrget
   00D3 FB                  488 	mov	r3,a
                            489 ;     genPlus
   00D4 E5 06               490 	mov	a,ar6
   00D6 25 05               491 	add	a,ar5
   00D8 FE                  492 	mov	r6,a
   00D9 E5 07               493 	mov	a,ar7
   00DB 35 02               494 	addc	a,ar2
   00DD FF                  495 	mov	r7,a
   00DE 8B 04               496 	mov	ar4,r3
                            497 ;     genPointerSet
                            498 ;     genGenPointerSet
   00E0 E5*00               499 	mov	a,_bp
   00E2 24 05               500 	add	a,#0x05
   00E4 F8                  501 	mov	r0,a
   00E5 86 82               502 	mov	dpl,@r0
   00E7 08                  503 	inc	r0
   00E8 86 83               504 	mov	dph,@r0
   00EA 08                  505 	inc	r0
   00EB 86 F0               506 	mov	b,@r0
   00ED EE                  507 	mov	a,r6
   00EE 12s00r00            508 	lcall	__gptrput
   00F1 A3                  509 	inc	dptr
   00F2 EF                  510 	mov	a,r7
   00F3 12s00r00            511 	lcall	__gptrput
   00F6 A3                  512 	inc	dptr
   00F7 EC                  513 	mov	a,r4
   00F8 12s00r00            514 	lcall	__gptrput
                            515 ;../../Source/queue.c:189: pxNewQueue->ucMessagesWaiting = ( unsigned portCHAR ) 0;
                            516 ;     genPlus
   00FB E5*00               517 	mov	a,_bp
   00FD 24 02               518 	add	a,#0x02
   00FF F8                  519 	mov	r0,a
   0100 74 38               520 	mov	a,#0x38
   0102 26                  521 	add	a,@r0
   0103 FC                  522 	mov	r4,a
   0104 74 00               523 	mov	a,#0x00
   0106 08                  524 	inc	r0
   0107 36                  525 	addc	a,@r0
   0108 FE                  526 	mov	r6,a
   0109 08                  527 	inc	r0
   010A 86 07               528 	mov	ar7,@r0
                            529 ;     genPointerSet
                            530 ;     genGenPointerSet
   010C 8C 82               531 	mov	dpl,r4
   010E 8E 83               532 	mov	dph,r6
   0110 8F F0               533 	mov	b,r7
   0112 74 00               534 	mov	a,#0x00
   0114 12s00r00            535 	lcall	__gptrput
                            536 ;../../Source/queue.c:190: pxNewQueue->pcWriteTo = pxNewQueue->pcHead;
                            537 ;     genPlus
   0117 E5*00               538 	mov	a,_bp
   0119 24 02               539 	add	a,#0x02
   011B F8                  540 	mov	r0,a
   011C 74 06               541 	mov	a,#0x06
   011E 26                  542 	add	a,@r0
   011F FC                  543 	mov	r4,a
   0120 74 00               544 	mov	a,#0x00
   0122 08                  545 	inc	r0
   0123 36                  546 	addc	a,@r0
   0124 FE                  547 	mov	r6,a
   0125 08                  548 	inc	r0
   0126 86 07               549 	mov	ar7,@r0
                            550 ;     genPointerSet
                            551 ;     genGenPointerSet
   0128 8C 82               552 	mov	dpl,r4
   012A 8E 83               553 	mov	dph,r6
   012C 8F F0               554 	mov	b,r7
   012E ED                  555 	mov	a,r5
   012F 12s00r00            556 	lcall	__gptrput
   0132 A3                  557 	inc	dptr
   0133 EA                  558 	mov	a,r2
   0134 12s00r00            559 	lcall	__gptrput
   0137 A3                  560 	inc	dptr
   0138 EB                  561 	mov	a,r3
   0139 12s00r00            562 	lcall	__gptrput
                            563 ;../../Source/queue.c:191: pxNewQueue->pcReadFrom = pxNewQueue->pcHead + ( ( ucQueueLength - ( unsigned portCHAR ) 1 ) * ucItemSize );
                            564 ;     genPlus
   013C E5*00               565 	mov	a,_bp
   013E 24 02               566 	add	a,#0x02
   0140 F8                  567 	mov	r0,a
   0141 E5*00               568 	mov	a,_bp
   0143 24 05               569 	add	a,#0x05
   0145 F9                  570 	mov	r1,a
   0146 74 09               571 	mov	a,#0x09
   0148 26                  572 	add	a,@r0
   0149 F7                  573 	mov	@r1,a
   014A 74 00               574 	mov	a,#0x00
   014C 08                  575 	inc	r0
   014D 36                  576 	addc	a,@r0
   014E 09                  577 	inc	r1
   014F F7                  578 	mov	@r1,a
   0150 08                  579 	inc	r0
   0151 09                  580 	inc	r1
   0152 E6                  581 	mov	a,@r0
   0153 F7                  582 	mov	@r1,a
                            583 ;     genCast
   0154 E5*00               584 	mov	a,_bp
   0156 24 01               585 	add	a,#0x01
   0158 F8                  586 	mov	r0,a
   0159 86 04               587 	mov	ar4,@r0
   015B 7E 00               588 	mov	r6,#0x00
                            589 ;     genMinus
   015D E5*00               590 	mov	a,_bp
   015F 24 08               591 	add	a,#0x08
   0161 F8                  592 	mov	r0,a
                            593 ;     genMinusDec
   0162 EC                  594 	mov	a,r4
   0163 24 FF               595 	add	a,#0xff
   0165 F6                  596 	mov	@r0,a
   0166 EE                  597 	mov	a,r6
   0167 34 FF               598 	addc	a,#0xff
   0169 08                  599 	inc	r0
   016A F6                  600 	mov	@r0,a
                            601 ;     genCast
   016B E5*00               602 	mov	a,_bp
   016D 24 FD               603 	add	a,#0xfd
   016F F8                  604 	mov	r0,a
   0170 86 07               605 	mov	ar7,@r0
   0172 7C 00               606 	mov	r4,#0x00
                            607 ;     genIpush
   0174 C0 02               608 	push	ar2
   0176 C0 03               609 	push	ar3
   0178 C0 05               610 	push	ar5
   017A C0 07               611 	push	ar7
   017C C0 04               612 	push	ar4
                            613 ;     genCall
   017E E5*00               614 	mov	a,_bp
   0180 24 08               615 	add	a,#0x08
   0182 F8                  616 	mov	r0,a
   0183 86 82               617 	mov	dpl,@r0
   0185 08                  618 	inc	r0
   0186 86 83               619 	mov	dph,@r0
   0188 12s00r00            620 	lcall	__mulint
   018B AC 82               621 	mov	r4,dpl
   018D AE 83               622 	mov	r6,dph
   018F 15 81               623 	dec	sp
   0191 15 81               624 	dec	sp
   0193 D0 05               625 	pop	ar5
   0195 D0 03               626 	pop	ar3
   0197 D0 02               627 	pop	ar2
                            628 ;     genPlus
   0199 E5 04               629 	mov	a,ar4
   019B 25 05               630 	add	a,ar5
   019D FD                  631 	mov	r5,a
   019E E5 06               632 	mov	a,ar6
   01A0 35 02               633 	addc	a,ar2
   01A2 FA                  634 	mov	r2,a
                            635 ;     genPointerSet
                            636 ;     genGenPointerSet
   01A3 E5*00               637 	mov	a,_bp
   01A5 24 05               638 	add	a,#0x05
   01A7 F8                  639 	mov	r0,a
   01A8 86 82               640 	mov	dpl,@r0
   01AA 08                  641 	inc	r0
   01AB 86 83               642 	mov	dph,@r0
   01AD 08                  643 	inc	r0
   01AE 86 F0               644 	mov	b,@r0
   01B0 ED                  645 	mov	a,r5
   01B1 12s00r00            646 	lcall	__gptrput
   01B4 A3                  647 	inc	dptr
   01B5 EA                  648 	mov	a,r2
   01B6 12s00r00            649 	lcall	__gptrput
   01B9 A3                  650 	inc	dptr
   01BA EB                  651 	mov	a,r3
   01BB 12s00r00            652 	lcall	__gptrput
                            653 ;../../Source/queue.c:192: pxNewQueue->ucLength = ucQueueLength;
                            654 ;     genPlus
   01BE E5*00               655 	mov	a,_bp
   01C0 24 02               656 	add	a,#0x02
   01C2 F8                  657 	mov	r0,a
   01C3 74 39               658 	mov	a,#0x39
   01C5 26                  659 	add	a,@r0
   01C6 FA                  660 	mov	r2,a
   01C7 74 00               661 	mov	a,#0x00
   01C9 08                  662 	inc	r0
   01CA 36                  663 	addc	a,@r0
   01CB FB                  664 	mov	r3,a
   01CC 08                  665 	inc	r0
   01CD 86 04               666 	mov	ar4,@r0
                            667 ;     genPointerSet
                            668 ;     genGenPointerSet
   01CF 8A 82               669 	mov	dpl,r2
   01D1 8B 83               670 	mov	dph,r3
   01D3 8C F0               671 	mov	b,r4
   01D5 E5*00               672 	mov	a,_bp
   01D7 24 01               673 	add	a,#0x01
   01D9 F8                  674 	mov	r0,a
   01DA E6                  675 	mov	a,@r0
   01DB 12s00r00            676 	lcall	__gptrput
                            677 ;../../Source/queue.c:193: pxNewQueue->ucItemSize = ucItemSize;
                            678 ;     genPlus
   01DE E5*00               679 	mov	a,_bp
   01E0 24 02               680 	add	a,#0x02
   01E2 F8                  681 	mov	r0,a
   01E3 74 3A               682 	mov	a,#0x3A
   01E5 26                  683 	add	a,@r0
   01E6 FA                  684 	mov	r2,a
   01E7 74 00               685 	mov	a,#0x00
   01E9 08                  686 	inc	r0
   01EA 36                  687 	addc	a,@r0
   01EB FB                  688 	mov	r3,a
   01EC 08                  689 	inc	r0
   01ED 86 04               690 	mov	ar4,@r0
                            691 ;     genPointerSet
                            692 ;     genGenPointerSet
   01EF 8A 82               693 	mov	dpl,r2
   01F1 8B 83               694 	mov	dph,r3
   01F3 8C F0               695 	mov	b,r4
   01F5 E5*00               696 	mov	a,_bp
   01F7 24 FD               697 	add	a,#0xfd
   01F9 F8                  698 	mov	r0,a
   01FA E6                  699 	mov	a,@r0
   01FB 12s00r00            700 	lcall	__gptrput
                            701 ;../../Source/queue.c:194: pxNewQueue->cRxLock = queueUNLOCKED;
                            702 ;     genPlus
   01FE E5*00               703 	mov	a,_bp
   0200 24 02               704 	add	a,#0x02
   0202 F8                  705 	mov	r0,a
   0203 74 3B               706 	mov	a,#0x3B
   0205 26                  707 	add	a,@r0
   0206 FA                  708 	mov	r2,a
   0207 74 00               709 	mov	a,#0x00
   0209 08                  710 	inc	r0
   020A 36                  711 	addc	a,@r0
   020B FB                  712 	mov	r3,a
   020C 08                  713 	inc	r0
   020D 86 04               714 	mov	ar4,@r0
                            715 ;     genPointerSet
                            716 ;     genGenPointerSet
   020F 8A 82               717 	mov	dpl,r2
   0211 8B 83               718 	mov	dph,r3
   0213 8C F0               719 	mov	b,r4
   0215 74 FF               720 	mov	a,#0xFF
   0217 12s00r00            721 	lcall	__gptrput
                            722 ;../../Source/queue.c:195: pxNewQueue->cTxLock = queueUNLOCKED;
                            723 ;     genPlus
   021A E5*00               724 	mov	a,_bp
   021C 24 02               725 	add	a,#0x02
   021E F8                  726 	mov	r0,a
   021F 74 3C               727 	mov	a,#0x3C
   0221 26                  728 	add	a,@r0
   0222 FA                  729 	mov	r2,a
   0223 74 00               730 	mov	a,#0x00
   0225 08                  731 	inc	r0
   0226 36                  732 	addc	a,@r0
   0227 FB                  733 	mov	r3,a
   0228 08                  734 	inc	r0
   0229 86 04               735 	mov	ar4,@r0
                            736 ;     genPointerSet
                            737 ;     genGenPointerSet
   022B 8A 82               738 	mov	dpl,r2
   022D 8B 83               739 	mov	dph,r3
   022F 8C F0               740 	mov	b,r4
   0231 74 FF               741 	mov	a,#0xFF
   0233 12s00r00            742 	lcall	__gptrput
                            743 ;../../Source/queue.c:198: vListInitialise( &( pxNewQueue->xTasksWaitingToSend ) );
                            744 ;     genPlus
   0236 E5*00               745 	mov	a,_bp
   0238 24 02               746 	add	a,#0x02
   023A F8                  747 	mov	r0,a
   023B 74 0C               748 	mov	a,#0x0C
   023D 26                  749 	add	a,@r0
   023E FA                  750 	mov	r2,a
   023F 74 00               751 	mov	a,#0x00
   0241 08                  752 	inc	r0
   0242 36                  753 	addc	a,@r0
   0243 FB                  754 	mov	r3,a
   0244 08                  755 	inc	r0
   0245 86 04               756 	mov	ar4,@r0
                            757 ;     genCall
   0247 8A 82               758 	mov	dpl,r2
   0249 8B 83               759 	mov	dph,r3
   024B 8C F0               760 	mov	b,r4
   024D 12s00r00            761 	lcall	_vListInitialise
                            762 ;../../Source/queue.c:199: vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) ); 
                            763 ;     genPlus
   0250 E5*00               764 	mov	a,_bp
   0252 24 02               765 	add	a,#0x02
   0254 F8                  766 	mov	r0,a
   0255 74 22               767 	mov	a,#0x22
   0257 26                  768 	add	a,@r0
   0258 FA                  769 	mov	r2,a
   0259 74 00               770 	mov	a,#0x00
   025B 08                  771 	inc	r0
   025C 36                  772 	addc	a,@r0
   025D FB                  773 	mov	r3,a
   025E 08                  774 	inc	r0
   025F 86 04               775 	mov	ar4,@r0
                            776 ;     genCall
   0261 8A 82               777 	mov	dpl,r2
   0263 8B 83               778 	mov	dph,r3
   0265 8C F0               779 	mov	b,r4
   0267 12s00r00            780 	lcall	_vListInitialise
                            781 ;../../Source/queue.c:201: return  pxNewQueue;
                            782 ;     genRet
   026A E5*00               783 	mov	a,_bp
   026C 24 02               784 	add	a,#0x02
   026E F8                  785 	mov	r0,a
   026F 86 82               786 	mov	dpl,@r0
   0271 08                  787 	inc	r0
   0272 86 83               788 	mov	dph,@r0
   0274 08                  789 	inc	r0
   0275 86 F0               790 	mov	b,@r0
   0277 02s02r93            791 	ljmp	00108$
   027A                     792 00102$:
                            793 ;../../Source/queue.c:205: vPortFree( pxNewQueue );
                            794 ;     genCall
   027A E5*00               795 	mov	a,_bp
   027C 24 02               796 	add	a,#0x02
   027E F8                  797 	mov	r0,a
   027F 86 82               798 	mov	dpl,@r0
   0281 08                  799 	inc	r0
   0282 86 83               800 	mov	dph,@r0
   0284 08                  801 	inc	r0
   0285 86 F0               802 	mov	b,@r0
   0287 12s00r00            803 	lcall	_vPortFree
   028A                     804 00107$:
                            805 ;../../Source/queue.c:212: return NULL;
                            806 ;     genRet
   028A 75 82 00            807 	mov	dpl,#0x00
   028D 75 83 00            808 	mov	dph,#0x00
   0290 75 F0 00            809 	mov	b,#0x00
   0293                     810 00108$:
   0293 85*00 81            811 	mov	sp,_bp
   0296 D0*00               812 	pop	_bp
   0298 22                  813 	ret
                            814 ;------------------------------------------------------------
                            815 ;Allocation info for local variables in function 'cQueueSend'
                            816 ;------------------------------------------------------------
                            817 ;pvItemToQueue             Allocated to stack - offset -5
                            818 ;xTicksToWait              Allocated to stack - offset -7
                            819 ;pxQueue                   Allocated to stack - offset 1
                            820 ;cReturn                   Allocated to registers r2 
                            821 ;sloc0                     Allocated to stack - offset 4
                            822 ;sloc1                     Allocated to stack - offset 5
                            823 ;sloc2                     Allocated to stack - offset 8
                            824 ;sloc3                     Allocated to stack - offset 11
                            825 ;------------------------------------------------------------
                            826 ;../../Source/queue.c:216: signed portCHAR cQueueSend( xQueueHandle pxQueue, const void *pvItemToQueue, portTickType xTicksToWait )
                            827 ;	-----------------------------------------
                            828 ;	 function cQueueSend
                            829 ;	-----------------------------------------
   0299                     830 _cQueueSend:
   0299 C0*00               831 	push	_bp
   029B 85 81*00            832 	mov	_bp,sp
                            833 ;     genReceive
   029E C0 82               834 	push	dpl
   02A0 C0 83               835 	push	dph
   02A2 C0 F0               836 	push	b
   02A4 E5 81               837 	mov	a,sp
   02A6 24 0C               838 	add	a,#0x0c
   02A8 F5 81               839 	mov	sp,a
                            840 ;../../Source/queue.c:221: vTaskSuspendAll();
                            841 ;     genCall
   02AA 12s00r00            842 	lcall	_vTaskSuspendAll
                            843 ;../../Source/queue.c:243: prvLockQueue( pxQueue );
                            844 ;     genInline
   02AD C0 E0 C0 A8         845 	 push ACC push IE 
                            846 ;     genAssign
   02B1 C2 AF               847 	clr	_EA
                            848 ;     genPlus
   02B3 E5*00               849 	mov	a,_bp
   02B5 24 01               850 	add	a,#0x01
   02B7 F8                  851 	mov	r0,a
   02B8 74 3B               852 	mov	a,#0x3B
   02BA 26                  853 	add	a,@r0
   02BB FD                  854 	mov	r5,a
   02BC 74 00               855 	mov	a,#0x00
   02BE 08                  856 	inc	r0
   02BF 36                  857 	addc	a,@r0
   02C0 FE                  858 	mov	r6,a
   02C1 08                  859 	inc	r0
   02C2 86 07               860 	mov	ar7,@r0
                            861 ;     genPointerGet
                            862 ;     genGenPointerGet
   02C4 8D 82               863 	mov	dpl,r5
   02C6 8E 83               864 	mov	dph,r6
   02C8 8F F0               865 	mov	b,r7
   02CA 12s00r00            866 	lcall	__gptrget
   02CD FA                  867 	mov	r2,a
                            868 ;     genPlus
                            869 ;     genPlusIncr
   02CE 0A                  870 	inc	r2
                            871 ;     genPointerSet
                            872 ;     genGenPointerSet
   02CF 8D 82               873 	mov	dpl,r5
   02D1 8E 83               874 	mov	dph,r6
   02D3 8F F0               875 	mov	b,r7
   02D5 EA                  876 	mov	a,r2
   02D6 12s00r00            877 	lcall	__gptrput
                            878 ;     genPlus
   02D9 E5*00               879 	mov	a,_bp
   02DB 24 01               880 	add	a,#0x01
   02DD F8                  881 	mov	r0,a
   02DE 74 3C               882 	mov	a,#0x3C
   02E0 26                  883 	add	a,@r0
   02E1 FA                  884 	mov	r2,a
   02E2 74 00               885 	mov	a,#0x00
   02E4 08                  886 	inc	r0
   02E5 36                  887 	addc	a,@r0
   02E6 FB                  888 	mov	r3,a
   02E7 08                  889 	inc	r0
   02E8 86 04               890 	mov	ar4,@r0
                            891 ;     genPointerGet
                            892 ;     genGenPointerGet
   02EA 8A 82               893 	mov	dpl,r2
   02EC 8B 83               894 	mov	dph,r3
   02EE 8C F0               895 	mov	b,r4
   02F0 12s00r00            896 	lcall	__gptrget
   02F3 FD                  897 	mov	r5,a
                            898 ;     genPlus
                            899 ;     genPlusIncr
   02F4 0D                  900 	inc	r5
                            901 ;     genPointerSet
                            902 ;     genGenPointerSet
   02F5 8A 82               903 	mov	dpl,r2
   02F7 8B 83               904 	mov	dph,r3
   02F9 8C F0               905 	mov	b,r4
   02FB ED                  906 	mov	a,r5
   02FC 12s00r00            907 	lcall	__gptrput
                            908 ;     genInline
   02FF D0 E0               909 	 pop ACC 
                            910 ;     genAnd
   0301 53 E0 80            911 	anl	_ACC,#0x80
                            912 ;     genOr
   0304 E5 E0               913 	mov	a,_ACC
   0306 42 A8               914 	orl	_IE,a
                            915 ;     genInline
   0308 D0 E0               916 	 pop ACC 
                            917 ;../../Source/queue.c:261: if( prvIsQueueFull( pxQueue ) )
                            918 ;     genCall
   030A E5*00               919 	mov	a,_bp
   030C 24 01               920 	add	a,#0x01
   030E F8                  921 	mov	r0,a
   030F 86 82               922 	mov	dpl,@r0
   0311 08                  923 	inc	r0
   0312 86 83               924 	mov	dph,@r0
   0314 08                  925 	inc	r0
   0315 86 F0               926 	mov	b,@r0
   0317 12s10r14            927 	lcall	_prvIsQueueFull
   031A E5 82               928 	mov	a,dpl
                            929 ;     genIfx
                            930 ;     genIfxJump
   031C 70 03               931 	jnz	00126$
   031E 02s03rE6            932 	ljmp	00106$
   0321                     933 00126$:
                            934 ;../../Source/queue.c:265: if( xTicksToWait > ( portTickType ) 0 )
                            935 ;     genIfx
   0321 E5*00               936 	mov	a,_bp
   0323 24 F9               937 	add	a,#0xf9
   0325 F8                  938 	mov	r0,a
   0326 E6                  939 	mov	a,@r0
   0327 08                  940 	inc	r0
   0328 46                  941 	orl	a,@r0
                            942 ;     genIfxJump
   0329 70 03               943 	jnz	00127$
   032B 02s03rE6            944 	ljmp	00106$
   032E                     945 00127$:
                            946 ;../../Source/queue.c:280: vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
                            947 ;     genPlus
   032E E5*00               948 	mov	a,_bp
   0330 24 01               949 	add	a,#0x01
   0332 F8                  950 	mov	r0,a
   0333 74 0C               951 	mov	a,#0x0C
   0335 26                  952 	add	a,@r0
   0336 FA                  953 	mov	r2,a
   0337 74 00               954 	mov	a,#0x00
   0339 08                  955 	inc	r0
   033A 36                  956 	addc	a,@r0
   033B FB                  957 	mov	r3,a
   033C 08                  958 	inc	r0
   033D 86 04               959 	mov	ar4,@r0
                            960 ;     genIpush
   033F E5*00               961 	mov	a,_bp
   0341 24 F9               962 	add	a,#0xf9
   0343 F8                  963 	mov	r0,a
   0344 E6                  964 	mov	a,@r0
   0345 C0 E0               965 	push	acc
   0347 08                  966 	inc	r0
   0348 E6                  967 	mov	a,@r0
   0349 C0 E0               968 	push	acc
                            969 ;     genCall
   034B 8A 82               970 	mov	dpl,r2
   034D 8B 83               971 	mov	dph,r3
   034F 8C F0               972 	mov	b,r4
   0351 12s00r00            973 	lcall	_vTaskPlaceOnEventList
   0354 15 81               974 	dec	sp
   0356 15 81               975 	dec	sp
                            976 ;../../Source/queue.c:292: taskENTER_CRITICAL();
                            977 ;     genInline
   0358 C0 E0 C0 A8         978 	 push ACC push IE 
                            979 ;     genAssign
   035C C2 AF               980 	clr	_EA
                            981 ;../../Source/queue.c:301: prvUnlockQueue( pxQueue );
                            982 ;     genCall
   035E E5*00               983 	mov	a,_bp
   0360 24 01               984 	add	a,#0x01
   0362 F8                  985 	mov	r0,a
   0363 86 82               986 	mov	dpl,@r0
   0365 08                  987 	inc	r0
   0366 86 83               988 	mov	dph,@r0
   0368 08                  989 	inc	r0
   0369 86 F0               990 	mov	b,@r0
   036B 12s0Er8A            991 	lcall	_prvUnlockQueue
                            992 ;../../Source/queue.c:305: if( !cTaskResumeAll() )
                            993 ;     genCall
   036E 12s00r00            994 	lcall	_cTaskResumeAll
   0371 E5 82               995 	mov	a,dpl
                            996 ;     genIfx
                            997 ;     genIfxJump
   0373 60 03               998 	jz	00128$
   0375 02s03r7B            999 	ljmp	00102$
   0378                    1000 00128$:
                           1001 ;../../Source/queue.c:307: taskYIELD();
                           1002 ;     genCall
   0378 12s00r00           1003 	lcall	_vPortYield
   037B                    1004 00102$:
                           1005 ;../../Source/queue.c:312: vTaskSuspendAll();
                           1006 ;     genCall
   037B 12s00r00           1007 	lcall	_vTaskSuspendAll
                           1008 ;../../Source/queue.c:313: prvLockQueue( pxQueue );				
                           1009 ;     genInline
   037E C0 E0 C0 A8        1010 	 push ACC push IE 
                           1011 ;     genAssign
   0382 C2 AF              1012 	clr	_EA
                           1013 ;     genPlus
   0384 E5*00              1014 	mov	a,_bp
   0386 24 01              1015 	add	a,#0x01
   0388 F8                 1016 	mov	r0,a
   0389 74 3B              1017 	mov	a,#0x3B
   038B 26                 1018 	add	a,@r0
   038C FA                 1019 	mov	r2,a
   038D 74 00              1020 	mov	a,#0x00
   038F 08                 1021 	inc	r0
   0390 36                 1022 	addc	a,@r0
   0391 FB                 1023 	mov	r3,a
   0392 08                 1024 	inc	r0
   0393 86 04              1025 	mov	ar4,@r0
                           1026 ;     genPointerGet
                           1027 ;     genGenPointerGet
   0395 8A 82              1028 	mov	dpl,r2
   0397 8B 83              1029 	mov	dph,r3
   0399 8C F0              1030 	mov	b,r4
   039B 12s00r00           1031 	lcall	__gptrget
   039E FD                 1032 	mov	r5,a
                           1033 ;     genPlus
                           1034 ;     genPlusIncr
   039F 0D                 1035 	inc	r5
                           1036 ;     genPointerSet
                           1037 ;     genGenPointerSet
   03A0 8A 82              1038 	mov	dpl,r2
   03A2 8B 83              1039 	mov	dph,r3
   03A4 8C F0              1040 	mov	b,r4
   03A6 ED                 1041 	mov	a,r5
   03A7 12s00r00           1042 	lcall	__gptrput
                           1043 ;     genPlus
   03AA E5*00              1044 	mov	a,_bp
   03AC 24 01              1045 	add	a,#0x01
   03AE F8                 1046 	mov	r0,a
   03AF 74 3C              1047 	mov	a,#0x3C
   03B1 26                 1048 	add	a,@r0
   03B2 FA                 1049 	mov	r2,a
   03B3 74 00              1050 	mov	a,#0x00
   03B5 08                 1051 	inc	r0
   03B6 36                 1052 	addc	a,@r0
   03B7 FB                 1053 	mov	r3,a
   03B8 08                 1054 	inc	r0
   03B9 86 04              1055 	mov	ar4,@r0
                           1056 ;     genPointerGet
                           1057 ;     genGenPointerGet
   03BB 8A 82              1058 	mov	dpl,r2
   03BD 8B 83              1059 	mov	dph,r3
   03BF 8C F0              1060 	mov	b,r4
   03C1 12s00r00           1061 	lcall	__gptrget
   03C4 FD                 1062 	mov	r5,a
                           1063 ;     genPlus
                           1064 ;     genPlusIncr
   03C5 0D                 1065 	inc	r5
                           1066 ;     genPointerSet
                           1067 ;     genGenPointerSet
   03C6 8A 82              1068 	mov	dpl,r2
   03C8 8B 83              1069 	mov	dph,r3
   03CA 8C F0              1070 	mov	b,r4
   03CC ED                 1071 	mov	a,r5
   03CD 12s00r00           1072 	lcall	__gptrput
                           1073 ;     genInline
   03D0 D0 E0              1074 	 pop ACC 
                           1075 ;     genAnd
   03D2 53 E0 80           1076 	anl	_ACC,#0x80
                           1077 ;     genOr
   03D5 E5 E0              1078 	mov	a,_ACC
   03D7 42 A8              1079 	orl	_IE,a
                           1080 ;     genInline
   03D9 D0 E0              1081 	 pop ACC 
                           1082 ;../../Source/queue.c:315: taskEXIT_CRITICAL();
                           1083 ;     genInline
   03DB D0 E0              1084 	 pop ACC 
                           1085 ;     genAnd
   03DD 53 E0 80           1086 	anl	_ACC,#0x80
                           1087 ;     genOr
   03E0 E5 E0              1088 	mov	a,_ACC
   03E2 42 A8              1089 	orl	_IE,a
                           1090 ;     genInline
   03E4 D0 E0              1091 	 pop ACC 
   03E6                    1092 00106$:
                           1093 ;../../Source/queue.c:324: taskENTER_CRITICAL();
                           1094 ;     genInline
   03E6 C0 E0 C0 A8        1095 	 push ACC push IE 
                           1096 ;     genAssign
   03EA C2 AF              1097 	clr	_EA
                           1098 ;../../Source/queue.c:326: if( pxQueue->ucMessagesWaiting < pxQueue->ucLength )
                           1099 ;     genPlus
   03EC E5*00              1100 	mov	a,_bp
   03EE 24 01              1101 	add	a,#0x01
   03F0 F8                 1102 	mov	r0,a
   03F1 74 38              1103 	mov	a,#0x38
   03F3 26                 1104 	add	a,@r0
   03F4 FA                 1105 	mov	r2,a
   03F5 74 00              1106 	mov	a,#0x00
   03F7 08                 1107 	inc	r0
   03F8 36                 1108 	addc	a,@r0
   03F9 FB                 1109 	mov	r3,a
   03FA 08                 1110 	inc	r0
   03FB 86 04              1111 	mov	ar4,@r0
                           1112 ;     genPointerGet
                           1113 ;     genGenPointerGet
   03FD 8A 82              1114 	mov	dpl,r2
   03FF 8B 83              1115 	mov	dph,r3
   0401 8C F0              1116 	mov	b,r4
   0403 E5*00              1117 	mov	a,_bp
   0405 24 04              1118 	add	a,#0x04
   0407 F8                 1119 	mov	r0,a
   0408 12s00r00           1120 	lcall	__gptrget
   040B F6                 1121 	mov	@r0,a
                           1122 ;     genPlus
   040C E5*00              1123 	mov	a,_bp
   040E 24 01              1124 	add	a,#0x01
   0410 F8                 1125 	mov	r0,a
   0411 74 39              1126 	mov	a,#0x39
   0413 26                 1127 	add	a,@r0
   0414 FE                 1128 	mov	r6,a
   0415 74 00              1129 	mov	a,#0x00
   0417 08                 1130 	inc	r0
   0418 36                 1131 	addc	a,@r0
   0419 FF                 1132 	mov	r7,a
   041A 08                 1133 	inc	r0
   041B 86 05              1134 	mov	ar5,@r0
                           1135 ;     genPointerGet
                           1136 ;     genGenPointerGet
   041D 8E 82              1137 	mov	dpl,r6
   041F 8F 83              1138 	mov	dph,r7
   0421 8D F0              1139 	mov	b,r5
   0423 12s00r00           1140 	lcall	__gptrget
   0426 FE                 1141 	mov	r6,a
                           1142 ;     genCmpLt
   0427 E5*00              1143 	mov	a,_bp
   0429 24 04              1144 	add	a,#0x04
   042B F8                 1145 	mov	r0,a
                           1146 ;     genCmp
   042C C3                 1147 	clr	c
   042D E6                 1148 	mov	a,@r0
   042E 9E                 1149 	subb	a,r6
                           1150 ;     genIfxJump
   042F 40 03              1151 	jc	00129$
   0431 02s05rD1           1152 	ljmp	00110$
   0434                    1153 00129$:
                           1154 ;../../Source/queue.c:329: prvCopyQueueData( pxQueue, pvItemToQueue );		
                           1155 ;     genPlus
   0434 E5*00              1156 	mov	a,_bp
   0436 24 01              1157 	add	a,#0x01
   0438 F8                 1158 	mov	r0,a
   0439 E5*00              1159 	mov	a,_bp
   043B 24 05              1160 	add	a,#0x05
   043D F9                 1161 	mov	r1,a
   043E 74 3A              1162 	mov	a,#0x3A
   0440 26                 1163 	add	a,@r0
   0441 F7                 1164 	mov	@r1,a
   0442 74 00              1165 	mov	a,#0x00
   0444 08                 1166 	inc	r0
   0445 36                 1167 	addc	a,@r0
   0446 09                 1168 	inc	r1
   0447 F7                 1169 	mov	@r1,a
   0448 08                 1170 	inc	r0
   0449 09                 1171 	inc	r1
   044A E6                 1172 	mov	a,@r0
   044B F7                 1173 	mov	@r1,a
                           1174 ;     genPointerGet
                           1175 ;     genGenPointerGet
   044C E5*00              1176 	mov	a,_bp
   044E 24 05              1177 	add	a,#0x05
   0450 F8                 1178 	mov	r0,a
   0451 86 82              1179 	mov	dpl,@r0
   0453 08                 1180 	inc	r0
   0454 86 83              1181 	mov	dph,@r0
   0456 08                 1182 	inc	r0
   0457 86 F0              1183 	mov	b,@r0
   0459 12s00r00           1184 	lcall	__gptrget
   045C FD                 1185 	mov	r5,a
                           1186 ;     genCast
   045D E5*00              1187 	mov	a,_bp
   045F 24 0B              1188 	add	a,#0x0b
   0461 F8                 1189 	mov	r0,a
   0462 A6 05              1190 	mov	@r0,ar5
   0464 08                 1191 	inc	r0
   0465 76 00              1192 	mov	@r0,#0x00
                           1193 ;     genPlus
   0467 E5*00              1194 	mov	a,_bp
   0469 24 01              1195 	add	a,#0x01
   046B F8                 1196 	mov	r0,a
   046C E5*00              1197 	mov	a,_bp
   046E 24 08              1198 	add	a,#0x08
   0470 F9                 1199 	mov	r1,a
   0471 74 06              1200 	mov	a,#0x06
   0473 26                 1201 	add	a,@r0
   0474 F7                 1202 	mov	@r1,a
   0475 74 00              1203 	mov	a,#0x00
   0477 08                 1204 	inc	r0
   0478 36                 1205 	addc	a,@r0
   0479 09                 1206 	inc	r1
   047A F7                 1207 	mov	@r1,a
   047B 08                 1208 	inc	r0
   047C 09                 1209 	inc	r1
   047D E6                 1210 	mov	a,@r0
   047E F7                 1211 	mov	@r1,a
                           1212 ;     genPointerGet
                           1213 ;     genGenPointerGet
   047F E5*00              1214 	mov	a,_bp
   0481 24 08              1215 	add	a,#0x08
   0483 F8                 1216 	mov	r0,a
   0484 86 82              1217 	mov	dpl,@r0
   0486 08                 1218 	inc	r0
   0487 86 83              1219 	mov	dph,@r0
   0489 08                 1220 	inc	r0
   048A 86 F0              1221 	mov	b,@r0
   048C 12s00r00           1222 	lcall	__gptrget
   048F FF                 1223 	mov	r7,a
   0490 A3                 1224 	inc	dptr
   0491 12s00r00           1225 	lcall	__gptrget
   0494 FD                 1226 	mov	r5,a
   0495 A3                 1227 	inc	dptr
   0496 12s00r00           1228 	lcall	__gptrget
   0499 FE                 1229 	mov	r6,a
                           1230 ;     genIpush
   049A C0 02              1231 	push	ar2
   049C C0 03              1232 	push	ar3
   049E C0 04              1233 	push	ar4
   04A0 E5*00              1234 	mov	a,_bp
   04A2 24 0B              1235 	add	a,#0x0b
   04A4 F8                 1236 	mov	r0,a
   04A5 E6                 1237 	mov	a,@r0
   04A6 C0 E0              1238 	push	acc
   04A8 08                 1239 	inc	r0
   04A9 E6                 1240 	mov	a,@r0
   04AA C0 E0              1241 	push	acc
                           1242 ;     genIpush
   04AC E5*00              1243 	mov	a,_bp
   04AE 24 FB              1244 	add	a,#0xfb
   04B0 F8                 1245 	mov	r0,a
   04B1 E6                 1246 	mov	a,@r0
   04B2 C0 E0              1247 	push	acc
   04B4 08                 1248 	inc	r0
   04B5 E6                 1249 	mov	a,@r0
   04B6 C0 E0              1250 	push	acc
   04B8 08                 1251 	inc	r0
   04B9 E6                 1252 	mov	a,@r0
   04BA C0 E0              1253 	push	acc
                           1254 ;     genCall
   04BC 8F 82              1255 	mov	dpl,r7
   04BE 8D 83              1256 	mov	dph,r5
   04C0 8E F0              1257 	mov	b,r6
   04C2 12s00r00           1258 	lcall	_memcpy
   04C5 E5 81              1259 	mov	a,sp
   04C7 24 FB              1260 	add	a,#0xfb
   04C9 F5 81              1261 	mov	sp,a
   04CB D0 04              1262 	pop	ar4
   04CD D0 03              1263 	pop	ar3
   04CF D0 02              1264 	pop	ar2
                           1265 ;     genPointerGet
                           1266 ;     genGenPointerGet
   04D1 8A 82              1267 	mov	dpl,r2
   04D3 8B 83              1268 	mov	dph,r3
   04D5 8C F0              1269 	mov	b,r4
   04D7 12s00r00           1270 	lcall	__gptrget
   04DA FD                 1271 	mov	r5,a
                           1272 ;     genPlus
                           1273 ;     genPlusIncr
   04DB 0D                 1274 	inc	r5
                           1275 ;     genPointerSet
                           1276 ;     genGenPointerSet
   04DC 8A 82              1277 	mov	dpl,r2
   04DE 8B 83              1278 	mov	dph,r3
   04E0 8C F0              1279 	mov	b,r4
   04E2 ED                 1280 	mov	a,r5
   04E3 12s00r00           1281 	lcall	__gptrput
                           1282 ;     genPointerGet
                           1283 ;     genGenPointerGet
   04E6 E5*00              1284 	mov	a,_bp
   04E8 24 08              1285 	add	a,#0x08
   04EA F8                 1286 	mov	r0,a
   04EB 86 82              1287 	mov	dpl,@r0
   04ED 08                 1288 	inc	r0
   04EE 86 83              1289 	mov	dph,@r0
   04F0 08                 1290 	inc	r0
   04F1 86 F0              1291 	mov	b,@r0
   04F3 12s00r00           1292 	lcall	__gptrget
   04F6 FA                 1293 	mov	r2,a
   04F7 A3                 1294 	inc	dptr
   04F8 12s00r00           1295 	lcall	__gptrget
   04FB FB                 1296 	mov	r3,a
   04FC A3                 1297 	inc	dptr
   04FD 12s00r00           1298 	lcall	__gptrget
   0500 FC                 1299 	mov	r4,a
                           1300 ;     genPointerGet
                           1301 ;     genGenPointerGet
   0501 E5*00              1302 	mov	a,_bp
   0503 24 05              1303 	add	a,#0x05
   0505 F8                 1304 	mov	r0,a
   0506 86 82              1305 	mov	dpl,@r0
   0508 08                 1306 	inc	r0
   0509 86 83              1307 	mov	dph,@r0
   050B 08                 1308 	inc	r0
   050C 86 F0              1309 	mov	b,@r0
   050E 12s00r00           1310 	lcall	__gptrget
   0511 FD                 1311 	mov	r5,a
                           1312 ;     genPlus
   0512 E5 05              1313 	mov	a,ar5
   0514 25 02              1314 	add	a,ar2
   0516 FA                 1315 	mov	r2,a
   0517 74 00              1316 	mov	a,#0x00
   0519 35 03              1317 	addc	a,ar3
   051B FB                 1318 	mov	r3,a
                           1319 ;     genPointerSet
                           1320 ;     genGenPointerSet
   051C E5*00              1321 	mov	a,_bp
   051E 24 08              1322 	add	a,#0x08
   0520 F8                 1323 	mov	r0,a
   0521 86 82              1324 	mov	dpl,@r0
   0523 08                 1325 	inc	r0
   0524 86 83              1326 	mov	dph,@r0
   0526 08                 1327 	inc	r0
   0527 86 F0              1328 	mov	b,@r0
   0529 EA                 1329 	mov	a,r2
   052A 12s00r00           1330 	lcall	__gptrput
   052D A3                 1331 	inc	dptr
   052E EB                 1332 	mov	a,r3
   052F 12s00r00           1333 	lcall	__gptrput
   0532 A3                 1334 	inc	dptr
   0533 EC                 1335 	mov	a,r4
   0534 12s00r00           1336 	lcall	__gptrput
                           1337 ;     genPlus
   0537 E5*00              1338 	mov	a,_bp
   0539 24 01              1339 	add	a,#0x01
   053B F8                 1340 	mov	r0,a
                           1341 ;     genPlusIncr
   053C 74 03              1342 	mov	a,#0x03
   053E 26                 1343 	add	a,@r0
   053F FD                 1344 	mov	r5,a
   0540 74 00              1345 	mov	a,#0x00
   0542 08                 1346 	inc	r0
   0543 36                 1347 	addc	a,@r0
   0544 FE                 1348 	mov	r6,a
   0545 08                 1349 	inc	r0
   0546 86 07              1350 	mov	ar7,@r0
                           1351 ;     genPointerGet
                           1352 ;     genGenPointerGet
   0548 8D 82              1353 	mov	dpl,r5
   054A 8E 83              1354 	mov	dph,r6
   054C 8F F0              1355 	mov	b,r7
   054E 12s00r00           1356 	lcall	__gptrget
   0551 FD                 1357 	mov	r5,a
   0552 A3                 1358 	inc	dptr
   0553 12s00r00           1359 	lcall	__gptrget
   0556 FE                 1360 	mov	r6,a
   0557 A3                 1361 	inc	dptr
   0558 12s00r00           1362 	lcall	__gptrget
   055B FF                 1363 	mov	r7,a
                           1364 ;     genCmpLt
                           1365 ;     genCmp
   055C C3                 1366 	clr	c
   055D EA                 1367 	mov	a,r2
   055E 9D                 1368 	subb	a,r5
   055F EB                 1369 	mov	a,r3
   0560 9E                 1370 	subb	a,r6
   0561 EC                 1371 	mov	a,r4
   0562 64 80              1372 	xrl	a,#0x80
   0564 8F F0              1373 	mov	b,r7
   0566 63 F0 80           1374 	xrl	b,#0x80
   0569 95 F0              1375 	subb	a,b
                           1376 ;     genIfxJump
   056B 50 03              1377 	jnc	00130$
   056D 02s05rA6           1378 	ljmp	00108$
   0570                    1379 00130$:
                           1380 ;     genPointerGet
                           1381 ;     genGenPointerGet
   0570 E5*00              1382 	mov	a,_bp
   0572 24 01              1383 	add	a,#0x01
   0574 F8                 1384 	mov	r0,a
   0575 86 82              1385 	mov	dpl,@r0
   0577 08                 1386 	inc	r0
   0578 86 83              1387 	mov	dph,@r0
   057A 08                 1388 	inc	r0
   057B 86 F0              1389 	mov	b,@r0
   057D 12s00r00           1390 	lcall	__gptrget
   0580 FA                 1391 	mov	r2,a
   0581 A3                 1392 	inc	dptr
   0582 12s00r00           1393 	lcall	__gptrget
   0585 FB                 1394 	mov	r3,a
   0586 A3                 1395 	inc	dptr
   0587 12s00r00           1396 	lcall	__gptrget
   058A FC                 1397 	mov	r4,a
                           1398 ;     genPointerSet
                           1399 ;     genGenPointerSet
   058B E5*00              1400 	mov	a,_bp
   058D 24 08              1401 	add	a,#0x08
   058F F8                 1402 	mov	r0,a
   0590 86 82              1403 	mov	dpl,@r0
   0592 08                 1404 	inc	r0
   0593 86 83              1405 	mov	dph,@r0
   0595 08                 1406 	inc	r0
   0596 86 F0              1407 	mov	b,@r0
   0598 EA                 1408 	mov	a,r2
   0599 12s00r00           1409 	lcall	__gptrput
   059C A3                 1410 	inc	dptr
   059D EB                 1411 	mov	a,r3
   059E 12s00r00           1412 	lcall	__gptrput
   05A1 A3                 1413 	inc	dptr
   05A2 EC                 1414 	mov	a,r4
   05A3 12s00r00           1415 	lcall	__gptrput
   05A6                    1416 00108$:
                           1417 ;../../Source/queue.c:330: cReturn = ( signed portCHAR ) pdPASS;
                           1418 ;     genAssign
   05A6 7A 01              1419 	mov	r2,#0x01
                           1420 ;../../Source/queue.c:334: ++( pxQueue->cTxLock );
                           1421 ;     genPlus
   05A8 E5*00              1422 	mov	a,_bp
   05AA 24 01              1423 	add	a,#0x01
   05AC F8                 1424 	mov	r0,a
   05AD 74 3C              1425 	mov	a,#0x3C
   05AF 26                 1426 	add	a,@r0
   05B0 FB                 1427 	mov	r3,a
   05B1 74 00              1428 	mov	a,#0x00
   05B3 08                 1429 	inc	r0
   05B4 36                 1430 	addc	a,@r0
   05B5 FC                 1431 	mov	r4,a
   05B6 08                 1432 	inc	r0
   05B7 86 05              1433 	mov	ar5,@r0
                           1434 ;     genPointerGet
                           1435 ;     genGenPointerGet
   05B9 8B 82              1436 	mov	dpl,r3
   05BB 8C 83              1437 	mov	dph,r4
   05BD 8D F0              1438 	mov	b,r5
   05BF 12s00r00           1439 	lcall	__gptrget
   05C2 FE                 1440 	mov	r6,a
                           1441 ;     genPlus
                           1442 ;     genPlusIncr
   05C3 0E                 1443 	inc	r6
                           1444 ;     genPointerSet
                           1445 ;     genGenPointerSet
   05C4 8B 82              1446 	mov	dpl,r3
   05C6 8C 83              1447 	mov	dph,r4
   05C8 8D F0              1448 	mov	b,r5
   05CA EE                 1449 	mov	a,r6
   05CB 12s00r00           1450 	lcall	__gptrput
   05CE 02s05rD3           1451 	ljmp	00111$
   05D1                    1452 00110$:
                           1453 ;../../Source/queue.c:338: cReturn = errQUEUE_FULL;
                           1454 ;     genAssign
   05D1 7A FD              1455 	mov	r2,#0xFD
   05D3                    1456 00111$:
                           1457 ;../../Source/queue.c:341: taskEXIT_CRITICAL();
                           1458 ;     genInline
   05D3 D0 E0              1459 	 pop ACC 
                           1460 ;     genAnd
   05D5 53 E0 80           1461 	anl	_ACC,#0x80
                           1462 ;     genOr
   05D8 E5 E0              1463 	mov	a,_ACC
   05DA 42 A8              1464 	orl	_IE,a
                           1465 ;     genInline
   05DC D0 E0              1466 	 pop ACC 
                           1467 ;../../Source/queue.c:346: if( prvUnlockQueue( pxQueue ) )
                           1468 ;     genCall
   05DE E5*00              1469 	mov	a,_bp
   05E0 24 01              1470 	add	a,#0x01
   05E2 F8                 1471 	mov	r0,a
   05E3 86 82              1472 	mov	dpl,@r0
   05E5 08                 1473 	inc	r0
   05E6 86 83              1474 	mov	dph,@r0
   05E8 08                 1475 	inc	r0
   05E9 86 F0              1476 	mov	b,@r0
   05EB C0 02              1477 	push	ar2
   05ED 12s0Er8A           1478 	lcall	_prvUnlockQueue
   05F0 E5 82              1479 	mov	a,dpl
   05F2 D0 02              1480 	pop	ar2
                           1481 ;     genIfx
                           1482 ;     genIfxJump
   05F4 70 03              1483 	jnz	00131$
   05F6 02s06r0D           1484 	ljmp	00115$
   05F9                    1485 00131$:
                           1486 ;../../Source/queue.c:352: if( !cTaskResumeAll() )
                           1487 ;     genCall
   05F9 C0 02              1488 	push	ar2
   05FB 12s00r00           1489 	lcall	_cTaskResumeAll
   05FE E5 82              1490 	mov	a,dpl
   0600 D0 02              1491 	pop	ar2
                           1492 ;     genIfx
                           1493 ;     genIfxJump
   0602 60 03              1494 	jz	00132$
   0604 02s06r14           1495 	ljmp	00116$
   0607                    1496 00132$:
                           1497 ;../../Source/queue.c:354: taskYIELD();
                           1498 ;     genCall
   0607 12s00r00           1499 	lcall	_vPortYield
   060A 02s06r14           1500 	ljmp	00116$
   060D                    1501 00115$:
                           1502 ;../../Source/queue.c:361: cTaskResumeAll();
                           1503 ;     genCall
   060D C0 02              1504 	push	ar2
   060F 12s00r00           1505 	lcall	_cTaskResumeAll
   0612 D0 02              1506 	pop	ar2
   0614                    1507 00116$:
                           1508 ;../../Source/queue.c:364: return cReturn;
                           1509 ;     genRet
   0614 8A 82              1510 	mov	dpl,r2
   0616                    1511 00117$:
   0616 85*00 81           1512 	mov	sp,_bp
   0619 D0*00              1513 	pop	_bp
   061B 22                 1514 	ret
                           1515 ;------------------------------------------------------------
                           1516 ;Allocation info for local variables in function 'cQueueSendFromISR'
                           1517 ;------------------------------------------------------------
                           1518 ;pvItemToQueue             Allocated to stack - offset -5
                           1519 ;cTaskPreviouslyWoken      Allocated to stack - offset -6
                           1520 ;pxQueue                   Allocated to stack - offset 1
                           1521 ;sloc0                     Allocated to stack - offset 4
                           1522 ;sloc1                     Allocated to stack - offset 5
                           1523 ;sloc2                     Allocated to stack - offset 8
                           1524 ;sloc3                     Allocated to stack - offset 11
                           1525 ;------------------------------------------------------------
                           1526 ;../../Source/queue.c:368: signed portCHAR cQueueSendFromISR( xQueueHandle pxQueue, const void *pvItemToQueue, signed portCHAR cTaskPreviouslyWoken )
                           1527 ;	-----------------------------------------
                           1528 ;	 function cQueueSendFromISR
                           1529 ;	-----------------------------------------
   061C                    1530 _cQueueSendFromISR:
   061C C0*00              1531 	push	_bp
   061E 85 81*00           1532 	mov	_bp,sp
                           1533 ;     genReceive
   0621 C0 82              1534 	push	dpl
   0623 C0 83              1535 	push	dph
   0625 C0 F0              1536 	push	b
   0627 E5 81              1537 	mov	a,sp
   0629 24 0C              1538 	add	a,#0x0c
   062B F5 81              1539 	mov	sp,a
                           1540 ;../../Source/queue.c:375: if( pxQueue->ucMessagesWaiting < pxQueue->ucLength )
                           1541 ;     genPlus
   062D E5*00              1542 	mov	a,_bp
   062F 24 01              1543 	add	a,#0x01
   0631 F8                 1544 	mov	r0,a
   0632 74 38              1545 	mov	a,#0x38
   0634 26                 1546 	add	a,@r0
   0635 FD                 1547 	mov	r5,a
   0636 74 00              1548 	mov	a,#0x00
   0638 08                 1549 	inc	r0
   0639 36                 1550 	addc	a,@r0
   063A FE                 1551 	mov	r6,a
   063B 08                 1552 	inc	r0
   063C 86 07              1553 	mov	ar7,@r0
                           1554 ;     genPointerGet
                           1555 ;     genGenPointerGet
   063E 8D 82              1556 	mov	dpl,r5
   0640 8E 83              1557 	mov	dph,r6
   0642 8F F0              1558 	mov	b,r7
   0644 E5*00              1559 	mov	a,_bp
   0646 24 04              1560 	add	a,#0x04
   0648 F8                 1561 	mov	r0,a
   0649 12s00r00           1562 	lcall	__gptrget
   064C F6                 1563 	mov	@r0,a
                           1564 ;     genPlus
   064D E5*00              1565 	mov	a,_bp
   064F 24 01              1566 	add	a,#0x01
   0651 F8                 1567 	mov	r0,a
   0652 74 39              1568 	mov	a,#0x39
   0654 26                 1569 	add	a,@r0
   0655 FB                 1570 	mov	r3,a
   0656 74 00              1571 	mov	a,#0x00
   0658 08                 1572 	inc	r0
   0659 36                 1573 	addc	a,@r0
   065A FC                 1574 	mov	r4,a
   065B 08                 1575 	inc	r0
   065C 86 02              1576 	mov	ar2,@r0
                           1577 ;     genPointerGet
                           1578 ;     genGenPointerGet
   065E 8B 82              1579 	mov	dpl,r3
   0660 8C 83              1580 	mov	dph,r4
   0662 8A F0              1581 	mov	b,r2
   0664 12s00r00           1582 	lcall	__gptrget
   0667 FB                 1583 	mov	r3,a
                           1584 ;     genCmpLt
   0668 E5*00              1585 	mov	a,_bp
   066A 24 04              1586 	add	a,#0x04
   066C F8                 1587 	mov	r0,a
                           1588 ;     genCmp
   066D C3                 1589 	clr	c
   066E E6                 1590 	mov	a,@r0
   066F 9B                 1591 	subb	a,r3
                           1592 ;     genIfxJump
   0670 40 03              1593 	jc	00122$
   0672 02s08r60           1594 	ljmp	00113$
   0675                    1595 00122$:
                           1596 ;../../Source/queue.c:377: prvCopyQueueData( pxQueue, pvItemToQueue );
                           1597 ;     genPlus
   0675 E5*00              1598 	mov	a,_bp
   0677 24 01              1599 	add	a,#0x01
   0679 F8                 1600 	mov	r0,a
   067A E5*00              1601 	mov	a,_bp
   067C 24 05              1602 	add	a,#0x05
   067E F9                 1603 	mov	r1,a
   067F 74 3A              1604 	mov	a,#0x3A
   0681 26                 1605 	add	a,@r0
   0682 F7                 1606 	mov	@r1,a
   0683 74 00              1607 	mov	a,#0x00
   0685 08                 1608 	inc	r0
   0686 36                 1609 	addc	a,@r0
   0687 09                 1610 	inc	r1
   0688 F7                 1611 	mov	@r1,a
   0689 08                 1612 	inc	r0
   068A 09                 1613 	inc	r1
   068B E6                 1614 	mov	a,@r0
   068C F7                 1615 	mov	@r1,a
                           1616 ;     genPointerGet
                           1617 ;     genGenPointerGet
   068D E5*00              1618 	mov	a,_bp
   068F 24 05              1619 	add	a,#0x05
   0691 F8                 1620 	mov	r0,a
   0692 86 82              1621 	mov	dpl,@r0
   0694 08                 1622 	inc	r0
   0695 86 83              1623 	mov	dph,@r0
   0697 08                 1624 	inc	r0
   0698 86 F0              1625 	mov	b,@r0
   069A 12s00r00           1626 	lcall	__gptrget
   069D FA                 1627 	mov	r2,a
                           1628 ;     genCast
   069E E5*00              1629 	mov	a,_bp
   06A0 24 0B              1630 	add	a,#0x0b
   06A2 F8                 1631 	mov	r0,a
   06A3 A6 02              1632 	mov	@r0,ar2
   06A5 08                 1633 	inc	r0
   06A6 76 00              1634 	mov	@r0,#0x00
                           1635 ;     genPlus
   06A8 E5*00              1636 	mov	a,_bp
   06AA 24 01              1637 	add	a,#0x01
   06AC F8                 1638 	mov	r0,a
   06AD E5*00              1639 	mov	a,_bp
   06AF 24 08              1640 	add	a,#0x08
   06B1 F9                 1641 	mov	r1,a
   06B2 74 06              1642 	mov	a,#0x06
   06B4 26                 1643 	add	a,@r0
   06B5 F7                 1644 	mov	@r1,a
   06B6 74 00              1645 	mov	a,#0x00
   06B8 08                 1646 	inc	r0
   06B9 36                 1647 	addc	a,@r0
   06BA 09                 1648 	inc	r1
   06BB F7                 1649 	mov	@r1,a
   06BC 08                 1650 	inc	r0
   06BD 09                 1651 	inc	r1
   06BE E6                 1652 	mov	a,@r0
   06BF F7                 1653 	mov	@r1,a
                           1654 ;     genPointerGet
                           1655 ;     genGenPointerGet
   06C0 E5*00              1656 	mov	a,_bp
   06C2 24 08              1657 	add	a,#0x08
   06C4 F8                 1658 	mov	r0,a
   06C5 86 82              1659 	mov	dpl,@r0
   06C7 08                 1660 	inc	r0
   06C8 86 83              1661 	mov	dph,@r0
   06CA 08                 1662 	inc	r0
   06CB 86 F0              1663 	mov	b,@r0
   06CD 12s00r00           1664 	lcall	__gptrget
   06D0 FC                 1665 	mov	r4,a
   06D1 A3                 1666 	inc	dptr
   06D2 12s00r00           1667 	lcall	__gptrget
   06D5 FA                 1668 	mov	r2,a
   06D6 A3                 1669 	inc	dptr
   06D7 12s00r00           1670 	lcall	__gptrget
   06DA FB                 1671 	mov	r3,a
                           1672 ;     genIpush
   06DB C0 05              1673 	push	ar5
   06DD C0 06              1674 	push	ar6
   06DF C0 07              1675 	push	ar7
   06E1 E5*00              1676 	mov	a,_bp
   06E3 24 0B              1677 	add	a,#0x0b
   06E5 F8                 1678 	mov	r0,a
   06E6 E6                 1679 	mov	a,@r0
   06E7 C0 E0              1680 	push	acc
   06E9 08                 1681 	inc	r0
   06EA E6                 1682 	mov	a,@r0
   06EB C0 E0              1683 	push	acc
                           1684 ;     genIpush
   06ED E5*00              1685 	mov	a,_bp
   06EF 24 FB              1686 	add	a,#0xfb
   06F1 F8                 1687 	mov	r0,a
   06F2 E6                 1688 	mov	a,@r0
   06F3 C0 E0              1689 	push	acc
   06F5 08                 1690 	inc	r0
   06F6 E6                 1691 	mov	a,@r0
   06F7 C0 E0              1692 	push	acc
   06F9 08                 1693 	inc	r0
   06FA E6                 1694 	mov	a,@r0
   06FB C0 E0              1695 	push	acc
                           1696 ;     genCall
   06FD 8C 82              1697 	mov	dpl,r4
   06FF 8A 83              1698 	mov	dph,r2
   0701 8B F0              1699 	mov	b,r3
   0703 12s00r00           1700 	lcall	_memcpy
   0706 E5 81              1701 	mov	a,sp
   0708 24 FB              1702 	add	a,#0xfb
   070A F5 81              1703 	mov	sp,a
   070C D0 07              1704 	pop	ar7
   070E D0 06              1705 	pop	ar6
   0710 D0 05              1706 	pop	ar5
                           1707 ;     genPointerGet
                           1708 ;     genGenPointerGet
   0712 8D 82              1709 	mov	dpl,r5
   0714 8E 83              1710 	mov	dph,r6
   0716 8F F0              1711 	mov	b,r7
   0718 12s00r00           1712 	lcall	__gptrget
   071B FA                 1713 	mov	r2,a
                           1714 ;     genPlus
                           1715 ;     genPlusIncr
   071C 0A                 1716 	inc	r2
                           1717 ;     genPointerSet
                           1718 ;     genGenPointerSet
   071D 8D 82              1719 	mov	dpl,r5
   071F 8E 83              1720 	mov	dph,r6
   0721 8F F0              1721 	mov	b,r7
   0723 EA                 1722 	mov	a,r2
   0724 12s00r00           1723 	lcall	__gptrput
                           1724 ;     genPointerGet
                           1725 ;     genGenPointerGet
   0727 E5*00              1726 	mov	a,_bp
   0729 24 08              1727 	add	a,#0x08
   072B F8                 1728 	mov	r0,a
   072C 86 82              1729 	mov	dpl,@r0
   072E 08                 1730 	inc	r0
   072F 86 83              1731 	mov	dph,@r0
   0731 08                 1732 	inc	r0
   0732 86 F0              1733 	mov	b,@r0
   0734 12s00r00           1734 	lcall	__gptrget
   0737 FA                 1735 	mov	r2,a
   0738 A3                 1736 	inc	dptr
   0739 12s00r00           1737 	lcall	__gptrget
   073C FB                 1738 	mov	r3,a
   073D A3                 1739 	inc	dptr
   073E 12s00r00           1740 	lcall	__gptrget
   0741 FC                 1741 	mov	r4,a
                           1742 ;     genPointerGet
                           1743 ;     genGenPointerGet
   0742 E5*00              1744 	mov	a,_bp
   0744 24 05              1745 	add	a,#0x05
   0746 F8                 1746 	mov	r0,a
   0747 86 82              1747 	mov	dpl,@r0
   0749 08                 1748 	inc	r0
   074A 86 83              1749 	mov	dph,@r0
   074C 08                 1750 	inc	r0
   074D 86 F0              1751 	mov	b,@r0
   074F 12s00r00           1752 	lcall	__gptrget
   0752 FD                 1753 	mov	r5,a
                           1754 ;     genPlus
   0753 E5 05              1755 	mov	a,ar5
   0755 25 02              1756 	add	a,ar2
   0757 FA                 1757 	mov	r2,a
   0758 74 00              1758 	mov	a,#0x00
   075A 35 03              1759 	addc	a,ar3
   075C FB                 1760 	mov	r3,a
                           1761 ;     genPointerSet
                           1762 ;     genGenPointerSet
   075D E5*00              1763 	mov	a,_bp
   075F 24 08              1764 	add	a,#0x08
   0761 F8                 1765 	mov	r0,a
   0762 86 82              1766 	mov	dpl,@r0
   0764 08                 1767 	inc	r0
   0765 86 83              1768 	mov	dph,@r0
   0767 08                 1769 	inc	r0
   0768 86 F0              1770 	mov	b,@r0
   076A EA                 1771 	mov	a,r2
   076B 12s00r00           1772 	lcall	__gptrput
   076E A3                 1773 	inc	dptr
   076F EB                 1774 	mov	a,r3
   0770 12s00r00           1775 	lcall	__gptrput
   0773 A3                 1776 	inc	dptr
   0774 EC                 1777 	mov	a,r4
   0775 12s00r00           1778 	lcall	__gptrput
                           1779 ;     genPlus
   0778 E5*00              1780 	mov	a,_bp
   077A 24 01              1781 	add	a,#0x01
   077C F8                 1782 	mov	r0,a
                           1783 ;     genPlusIncr
   077D 74 03              1784 	mov	a,#0x03
   077F 26                 1785 	add	a,@r0
   0780 FD                 1786 	mov	r5,a
   0781 74 00              1787 	mov	a,#0x00
   0783 08                 1788 	inc	r0
   0784 36                 1789 	addc	a,@r0
   0785 FE                 1790 	mov	r6,a
   0786 08                 1791 	inc	r0
   0787 86 07              1792 	mov	ar7,@r0
                           1793 ;     genPointerGet
                           1794 ;     genGenPointerGet
   0789 8D 82              1795 	mov	dpl,r5
   078B 8E 83              1796 	mov	dph,r6
   078D 8F F0              1797 	mov	b,r7
   078F 12s00r00           1798 	lcall	__gptrget
   0792 FD                 1799 	mov	r5,a
   0793 A3                 1800 	inc	dptr
   0794 12s00r00           1801 	lcall	__gptrget
   0797 FE                 1802 	mov	r6,a
   0798 A3                 1803 	inc	dptr
   0799 12s00r00           1804 	lcall	__gptrget
   079C FF                 1805 	mov	r7,a
                           1806 ;     genCmpLt
                           1807 ;     genCmp
   079D C3                 1808 	clr	c
   079E EA                 1809 	mov	a,r2
   079F 9D                 1810 	subb	a,r5
   07A0 EB                 1811 	mov	a,r3
   07A1 9E                 1812 	subb	a,r6
   07A2 EC                 1813 	mov	a,r4
   07A3 64 80              1814 	xrl	a,#0x80
   07A5 8F F0              1815 	mov	b,r7
   07A7 63 F0 80           1816 	xrl	b,#0x80
   07AA 95 F0              1817 	subb	a,b
                           1818 ;     genIfxJump
   07AC 50 03              1819 	jnc	00123$
   07AE 02s07rE7           1820 	ljmp	00102$
   07B1                    1821 00123$:
                           1822 ;     genPointerGet
                           1823 ;     genGenPointerGet
   07B1 E5*00              1824 	mov	a,_bp
   07B3 24 01              1825 	add	a,#0x01
   07B5 F8                 1826 	mov	r0,a
   07B6 86 82              1827 	mov	dpl,@r0
   07B8 08                 1828 	inc	r0
   07B9 86 83              1829 	mov	dph,@r0
   07BB 08                 1830 	inc	r0
   07BC 86 F0              1831 	mov	b,@r0
   07BE 12s00r00           1832 	lcall	__gptrget
   07C1 FA                 1833 	mov	r2,a
   07C2 A3                 1834 	inc	dptr
   07C3 12s00r00           1835 	lcall	__gptrget
   07C6 FB                 1836 	mov	r3,a
   07C7 A3                 1837 	inc	dptr
   07C8 12s00r00           1838 	lcall	__gptrget
   07CB FC                 1839 	mov	r4,a
                           1840 ;     genPointerSet
                           1841 ;     genGenPointerSet
   07CC E5*00              1842 	mov	a,_bp
   07CE 24 08              1843 	add	a,#0x08
   07D0 F8                 1844 	mov	r0,a
   07D1 86 82              1845 	mov	dpl,@r0
   07D3 08                 1846 	inc	r0
   07D4 86 83              1847 	mov	dph,@r0
   07D6 08                 1848 	inc	r0
   07D7 86 F0              1849 	mov	b,@r0
   07D9 EA                 1850 	mov	a,r2
   07DA 12s00r00           1851 	lcall	__gptrput
   07DD A3                 1852 	inc	dptr
   07DE EB                 1853 	mov	a,r3
   07DF 12s00r00           1854 	lcall	__gptrput
   07E2 A3                 1855 	inc	dptr
   07E3 EC                 1856 	mov	a,r4
   07E4 12s00r00           1857 	lcall	__gptrput
   07E7                    1858 00102$:
                           1859 ;../../Source/queue.c:381: if( pxQueue->cTxLock == queueUNLOCKED )
                           1860 ;     genPlus
   07E7 E5*00              1861 	mov	a,_bp
   07E9 24 01              1862 	add	a,#0x01
   07EB F8                 1863 	mov	r0,a
   07EC 74 3C              1864 	mov	a,#0x3C
   07EE 26                 1865 	add	a,@r0
   07EF FA                 1866 	mov	r2,a
   07F0 74 00              1867 	mov	a,#0x00
   07F2 08                 1868 	inc	r0
   07F3 36                 1869 	addc	a,@r0
   07F4 FB                 1870 	mov	r3,a
   07F5 08                 1871 	inc	r0
   07F6 86 04              1872 	mov	ar4,@r0
                           1873 ;     genPointerGet
                           1874 ;     genGenPointerGet
   07F8 8A 82              1875 	mov	dpl,r2
   07FA 8B 83              1876 	mov	dph,r3
   07FC 8C F0              1877 	mov	b,r4
   07FE 12s00r00           1878 	lcall	__gptrget
   0801 FD                 1879 	mov	r5,a
                           1880 ;     genCmpEq
   0802 BD FF 02           1881 	cjne	r5,#0xFF,00124$
   0805 80 03              1882 	sjmp	00125$
   0807                    1883 00124$:
   0807 02s08r55           1884 	ljmp	00110$
   080A                    1885 00125$:
                           1886 ;../../Source/queue.c:385: if( !cTaskPreviouslyWoken )		
                           1887 ;     genIfx
   080A E5*00              1888 	mov	a,_bp
   080C 24 FA              1889 	add	a,#0xfa
   080E F8                 1890 	mov	r0,a
   080F E6                 1891 	mov	a,@r0
                           1892 ;     genIfxJump
   0810 60 03              1893 	jz	00126$
   0812 02s08r60           1894 	ljmp	00113$
   0815                    1895 00126$:
                           1896 ;../../Source/queue.c:387: if( !listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) )
                           1897 ;     genPlus
   0815 E5*00              1898 	mov	a,_bp
   0817 24 01              1899 	add	a,#0x01
   0819 F8                 1900 	mov	r0,a
   081A 74 22              1901 	mov	a,#0x22
   081C 26                 1902 	add	a,@r0
   081D FA                 1903 	mov	r2,a
   081E 74 00              1904 	mov	a,#0x00
   0820 08                 1905 	inc	r0
   0821 36                 1906 	addc	a,@r0
   0822 FB                 1907 	mov	r3,a
   0823 08                 1908 	inc	r0
   0824 86 04              1909 	mov	ar4,@r0
                           1910 ;     genPointerGet
                           1911 ;     genGenPointerGet
   0826 8A 82              1912 	mov	dpl,r2
   0828 8B 83              1913 	mov	dph,r3
   082A 8C F0              1914 	mov	b,r4
   082C 12s00r00           1915 	lcall	__gptrget
   082F FE                 1916 	mov	r6,a
   0830 A3                 1917 	inc	dptr
   0831 12s00r00           1918 	lcall	__gptrget
   0834 FF                 1919 	mov	r7,a
                           1920 ;     genCmpEq
   0835 BE 00 06           1921 	cjne	r6,#0x00,00127$
   0838 BF 00 03           1922 	cjne	r7,#0x00,00127$
   083B 02s08r60           1923 	ljmp	00113$
   083E                    1924 00127$:
                           1925 ;../../Source/queue.c:389: if( cTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != ( signed portCHAR ) pdFALSE )
                           1926 ;     genCall
   083E 8A 82              1927 	mov	dpl,r2
   0840 8B 83              1928 	mov	dph,r3
   0842 8C F0              1929 	mov	b,r4
   0844 12s00r00           1930 	lcall	_cTaskRemoveFromEventList
   0847 AE 82              1931 	mov	r6,dpl
                           1932 ;     genCmpEq
   0849 BE 00 03           1933 	cjne	r6,#0x00,00128$
   084C 02s08r60           1934 	ljmp	00113$
   084F                    1935 00128$:
                           1936 ;../../Source/queue.c:393: return pdTRUE;
                           1937 ;     genRet
   084F 75 82 01           1938 	mov	dpl,#0x01
   0852 02s08r67           1939 	ljmp	00114$
   0855                    1940 00110$:
                           1941 ;../../Source/queue.c:402: ++( pxQueue->cTxLock );
                           1942 ;     genPlus
                           1943 ;     genPlusIncr
   0855 0D                 1944 	inc	r5
                           1945 ;     genPointerSet
                           1946 ;     genGenPointerSet
   0856 8A 82              1947 	mov	dpl,r2
   0858 8B 83              1948 	mov	dph,r3
   085A 8C F0              1949 	mov	b,r4
   085C ED                 1950 	mov	a,r5
   085D 12s00r00           1951 	lcall	__gptrput
   0860                    1952 00113$:
                           1953 ;../../Source/queue.c:406: return cTaskPreviouslyWoken;
                           1954 ;     genRet
   0860 E5*00              1955 	mov	a,_bp
   0862 24 FA              1956 	add	a,#0xfa
   0864 F8                 1957 	mov	r0,a
   0865 86 82              1958 	mov	dpl,@r0
   0867                    1959 00114$:
   0867 85*00 81           1960 	mov	sp,_bp
   086A D0*00              1961 	pop	_bp
   086C 22                 1962 	ret
                           1963 ;------------------------------------------------------------
                           1964 ;Allocation info for local variables in function 'cQueueReceive'
                           1965 ;------------------------------------------------------------
                           1966 ;pcBuffer                  Allocated to stack - offset -5
                           1967 ;xTicksToWait              Allocated to stack - offset -7
                           1968 ;pxQueue                   Allocated to stack - offset 1
                           1969 ;cReturn                   Allocated to registers r2 
                           1970 ;sloc0                     Allocated to stack - offset 4
                           1971 ;sloc1                     Allocated to stack - offset 7
                           1972 ;sloc2                     Allocated to stack - offset 10
                           1973 ;sloc3                     Allocated to stack - offset 11
                           1974 ;------------------------------------------------------------
                           1975 ;../../Source/queue.c:410: signed portCHAR cQueueReceive( xQueueHandle pxQueue, void *pcBuffer, portTickType xTicksToWait )
                           1976 ;	-----------------------------------------
                           1977 ;	 function cQueueReceive
                           1978 ;	-----------------------------------------
   086D                    1979 _cQueueReceive:
   086D C0*00              1980 	push	_bp
   086F 85 81*00           1981 	mov	_bp,sp
                           1982 ;     genReceive
   0872 C0 82              1983 	push	dpl
   0874 C0 83              1984 	push	dph
   0876 C0 F0              1985 	push	b
   0878 E5 81              1986 	mov	a,sp
   087A 24 0B              1987 	add	a,#0x0b
   087C F5 81              1988 	mov	sp,a
                           1989 ;../../Source/queue.c:418: vTaskSuspendAll();
                           1990 ;     genCall
   087E 12s00r00           1991 	lcall	_vTaskSuspendAll
                           1992 ;../../Source/queue.c:421: prvLockQueue( pxQueue );
                           1993 ;     genInline
   0881 C0 E0 C0 A8        1994 	 push ACC push IE 
                           1995 ;     genAssign
   0885 C2 AF              1996 	clr	_EA
                           1997 ;     genPlus
   0887 E5*00              1998 	mov	a,_bp
   0889 24 01              1999 	add	a,#0x01
   088B F8                 2000 	mov	r0,a
   088C 74 3B              2001 	mov	a,#0x3B
   088E 26                 2002 	add	a,@r0
   088F FD                 2003 	mov	r5,a
   0890 74 00              2004 	mov	a,#0x00
   0892 08                 2005 	inc	r0
   0893 36                 2006 	addc	a,@r0
   0894 FE                 2007 	mov	r6,a
   0895 08                 2008 	inc	r0
   0896 86 07              2009 	mov	ar7,@r0
                           2010 ;     genPointerGet
                           2011 ;     genGenPointerGet
   0898 8D 82              2012 	mov	dpl,r5
   089A 8E 83              2013 	mov	dph,r6
   089C 8F F0              2014 	mov	b,r7
   089E 12s00r00           2015 	lcall	__gptrget
   08A1 FA                 2016 	mov	r2,a
                           2017 ;     genPlus
                           2018 ;     genPlusIncr
   08A2 0A                 2019 	inc	r2
                           2020 ;     genPointerSet
                           2021 ;     genGenPointerSet
   08A3 8D 82              2022 	mov	dpl,r5
   08A5 8E 83              2023 	mov	dph,r6
   08A7 8F F0              2024 	mov	b,r7
   08A9 EA                 2025 	mov	a,r2
   08AA 12s00r00           2026 	lcall	__gptrput
                           2027 ;     genPlus
   08AD E5*00              2028 	mov	a,_bp
   08AF 24 01              2029 	add	a,#0x01
   08B1 F8                 2030 	mov	r0,a
   08B2 74 3C              2031 	mov	a,#0x3C
   08B4 26                 2032 	add	a,@r0
   08B5 FA                 2033 	mov	r2,a
   08B6 74 00              2034 	mov	a,#0x00
   08B8 08                 2035 	inc	r0
   08B9 36                 2036 	addc	a,@r0
   08BA FB                 2037 	mov	r3,a
   08BB 08                 2038 	inc	r0
   08BC 86 04              2039 	mov	ar4,@r0
                           2040 ;     genPointerGet
                           2041 ;     genGenPointerGet
   08BE 8A 82              2042 	mov	dpl,r2
   08C0 8B 83              2043 	mov	dph,r3
   08C2 8C F0              2044 	mov	b,r4
   08C4 12s00r00           2045 	lcall	__gptrget
   08C7 FD                 2046 	mov	r5,a
                           2047 ;     genPlus
                           2048 ;     genPlusIncr
   08C8 0D                 2049 	inc	r5
                           2050 ;     genPointerSet
                           2051 ;     genGenPointerSet
   08C9 8A 82              2052 	mov	dpl,r2
   08CB 8B 83              2053 	mov	dph,r3
   08CD 8C F0              2054 	mov	b,r4
   08CF ED                 2055 	mov	a,r5
   08D0 12s00r00           2056 	lcall	__gptrput
                           2057 ;     genInline
   08D3 D0 E0              2058 	 pop ACC 
                           2059 ;     genAnd
   08D5 53 E0 80           2060 	anl	_ACC,#0x80
                           2061 ;     genOr
   08D8 E5 E0              2062 	mov	a,_ACC
   08DA 42 A8              2063 	orl	_IE,a
                           2064 ;     genInline
   08DC D0 E0              2065 	 pop ACC 
                           2066 ;../../Source/queue.c:424: if( prvIsQueueEmpty( pxQueue ) )
                           2067 ;     genCall
   08DE E5*00              2068 	mov	a,_bp
   08E0 24 01              2069 	add	a,#0x01
   08E2 F8                 2070 	mov	r0,a
   08E3 86 82              2071 	mov	dpl,@r0
   08E5 08                 2072 	inc	r0
   08E6 86 83              2073 	mov	dph,@r0
   08E8 08                 2074 	inc	r0
   08E9 86 F0              2075 	mov	b,@r0
   08EB 12s0FrD3           2076 	lcall	_prvIsQueueEmpty
   08EE E5 82              2077 	mov	a,dpl
                           2078 ;     genIfx
                           2079 ;     genIfxJump
   08F0 70 03              2080 	jnz	00126$
   08F2 02s09rBA           2081 	ljmp	00106$
   08F5                    2082 00126$:
                           2083 ;../../Source/queue.c:428: if( xTicksToWait > ( portTickType ) 0 )
                           2084 ;     genIfx
   08F5 E5*00              2085 	mov	a,_bp
   08F7 24 F9              2086 	add	a,#0xf9
   08F9 F8                 2087 	mov	r0,a
   08FA E6                 2088 	mov	a,@r0
   08FB 08                 2089 	inc	r0
   08FC 46                 2090 	orl	a,@r0
                           2091 ;     genIfxJump
   08FD 70 03              2092 	jnz	00127$
   08FF 02s09rBA           2093 	ljmp	00106$
   0902                    2094 00127$:
                           2095 ;../../Source/queue.c:430: vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
                           2096 ;     genPlus
   0902 E5*00              2097 	mov	a,_bp
   0904 24 01              2098 	add	a,#0x01
   0906 F8                 2099 	mov	r0,a
   0907 74 22              2100 	mov	a,#0x22
   0909 26                 2101 	add	a,@r0
   090A FA                 2102 	mov	r2,a
   090B 74 00              2103 	mov	a,#0x00
   090D 08                 2104 	inc	r0
   090E 36                 2105 	addc	a,@r0
   090F FB                 2106 	mov	r3,a
   0910 08                 2107 	inc	r0
   0911 86 04              2108 	mov	ar4,@r0
                           2109 ;     genIpush
   0913 E5*00              2110 	mov	a,_bp
   0915 24 F9              2111 	add	a,#0xf9
   0917 F8                 2112 	mov	r0,a
   0918 E6                 2113 	mov	a,@r0
   0919 C0 E0              2114 	push	acc
   091B 08                 2115 	inc	r0
   091C E6                 2116 	mov	a,@r0
   091D C0 E0              2117 	push	acc
                           2118 ;     genCall
   091F 8A 82              2119 	mov	dpl,r2
   0921 8B 83              2120 	mov	dph,r3
   0923 8C F0              2121 	mov	b,r4
   0925 12s00r00           2122 	lcall	_vTaskPlaceOnEventList
   0928 15 81              2123 	dec	sp
   092A 15 81              2124 	dec	sp
                           2125 ;../../Source/queue.c:431: taskENTER_CRITICAL();
                           2126 ;     genInline
   092C C0 E0 C0 A8        2127 	 push ACC push IE 
                           2128 ;     genAssign
   0930 C2 AF              2129 	clr	_EA
                           2130 ;../../Source/queue.c:433: prvUnlockQueue( pxQueue );
                           2131 ;     genCall
   0932 E5*00              2132 	mov	a,_bp
   0934 24 01              2133 	add	a,#0x01
   0936 F8                 2134 	mov	r0,a
   0937 86 82              2135 	mov	dpl,@r0
   0939 08                 2136 	inc	r0
   093A 86 83              2137 	mov	dph,@r0
   093C 08                 2138 	inc	r0
   093D 86 F0              2139 	mov	b,@r0
   093F 12s0Er8A           2140 	lcall	_prvUnlockQueue
                           2141 ;../../Source/queue.c:434: if( !cTaskResumeAll() )
                           2142 ;     genCall
   0942 12s00r00           2143 	lcall	_cTaskResumeAll
   0945 E5 82              2144 	mov	a,dpl
                           2145 ;     genIfx
                           2146 ;     genIfxJump
   0947 60 03              2147 	jz	00128$
   0949 02s09r4F           2148 	ljmp	00102$
   094C                    2149 00128$:
                           2150 ;../../Source/queue.c:436: taskYIELD();
                           2151 ;     genCall
   094C 12s00r00           2152 	lcall	_vPortYield
   094F                    2153 00102$:
                           2154 ;../../Source/queue.c:439: vTaskSuspendAll();
                           2155 ;     genCall
   094F 12s00r00           2156 	lcall	_vTaskSuspendAll
                           2157 ;../../Source/queue.c:440: prvLockQueue( pxQueue );
                           2158 ;     genInline
   0952 C0 E0 C0 A8        2159 	 push ACC push IE 
                           2160 ;     genAssign
   0956 C2 AF              2161 	clr	_EA
                           2162 ;     genPlus
   0958 E5*00              2163 	mov	a,_bp
   095A 24 01              2164 	add	a,#0x01
   095C F8                 2165 	mov	r0,a
   095D 74 3B              2166 	mov	a,#0x3B
   095F 26                 2167 	add	a,@r0
   0960 FA                 2168 	mov	r2,a
   0961 74 00              2169 	mov	a,#0x00
   0963 08                 2170 	inc	r0
   0964 36                 2171 	addc	a,@r0
   0965 FB                 2172 	mov	r3,a
   0966 08                 2173 	inc	r0
   0967 86 04              2174 	mov	ar4,@r0
                           2175 ;     genPointerGet
                           2176 ;     genGenPointerGet
   0969 8A 82              2177 	mov	dpl,r2
   096B 8B 83              2178 	mov	dph,r3
   096D 8C F0              2179 	mov	b,r4
   096F 12s00r00           2180 	lcall	__gptrget
   0972 FD                 2181 	mov	r5,a
                           2182 ;     genPlus
                           2183 ;     genPlusIncr
   0973 0D                 2184 	inc	r5
                           2185 ;     genPointerSet
                           2186 ;     genGenPointerSet
   0974 8A 82              2187 	mov	dpl,r2
   0976 8B 83              2188 	mov	dph,r3
   0978 8C F0              2189 	mov	b,r4
   097A ED                 2190 	mov	a,r5
   097B 12s00r00           2191 	lcall	__gptrput
                           2192 ;     genPlus
   097E E5*00              2193 	mov	a,_bp
   0980 24 01              2194 	add	a,#0x01
   0982 F8                 2195 	mov	r0,a
   0983 74 3C              2196 	mov	a,#0x3C
   0985 26                 2197 	add	a,@r0
   0986 FA                 2198 	mov	r2,a
   0987 74 00              2199 	mov	a,#0x00
   0989 08                 2200 	inc	r0
   098A 36                 2201 	addc	a,@r0
   098B FB                 2202 	mov	r3,a
   098C 08                 2203 	inc	r0
   098D 86 04              2204 	mov	ar4,@r0
                           2205 ;     genPointerGet
                           2206 ;     genGenPointerGet
   098F 8A 82              2207 	mov	dpl,r2
   0991 8B 83              2208 	mov	dph,r3
   0993 8C F0              2209 	mov	b,r4
   0995 12s00r00           2210 	lcall	__gptrget
   0998 FD                 2211 	mov	r5,a
                           2212 ;     genPlus
                           2213 ;     genPlusIncr
   0999 0D                 2214 	inc	r5
                           2215 ;     genPointerSet
                           2216 ;     genGenPointerSet
   099A 8A 82              2217 	mov	dpl,r2
   099C 8B 83              2218 	mov	dph,r3
   099E 8C F0              2219 	mov	b,r4
   09A0 ED                 2220 	mov	a,r5
   09A1 12s00r00           2221 	lcall	__gptrput
                           2222 ;     genInline
   09A4 D0 E0              2223 	 pop ACC 
                           2224 ;     genAnd
   09A6 53 E0 80           2225 	anl	_ACC,#0x80
                           2226 ;     genOr
   09A9 E5 E0              2227 	mov	a,_ACC
   09AB 42 A8              2228 	orl	_IE,a
                           2229 ;     genInline
   09AD D0 E0              2230 	 pop ACC 
                           2231 ;../../Source/queue.c:442: taskEXIT_CRITICAL();
                           2232 ;     genInline
   09AF D0 E0              2233 	 pop ACC 
                           2234 ;     genAnd
   09B1 53 E0 80           2235 	anl	_ACC,#0x80
                           2236 ;     genOr
   09B4 E5 E0              2237 	mov	a,_ACC
   09B6 42 A8              2238 	orl	_IE,a
                           2239 ;     genInline
   09B8 D0 E0              2240 	 pop ACC 
   09BA                    2241 00106$:
                           2242 ;../../Source/queue.c:446: taskENTER_CRITICAL();
                           2243 ;     genInline
   09BA C0 E0 C0 A8        2244 	 push ACC push IE 
                           2245 ;     genAssign
   09BE C2 AF              2246 	clr	_EA
                           2247 ;../../Source/queue.c:448: if( pxQueue->ucMessagesWaiting > ( unsigned portCHAR ) 0 )
                           2248 ;     genPlus
   09C0 E5*00              2249 	mov	a,_bp
   09C2 24 01              2250 	add	a,#0x01
   09C4 F8                 2251 	mov	r0,a
   09C5 74 38              2252 	mov	a,#0x38
   09C7 26                 2253 	add	a,@r0
   09C8 FA                 2254 	mov	r2,a
   09C9 74 00              2255 	mov	a,#0x00
   09CB 08                 2256 	inc	r0
   09CC 36                 2257 	addc	a,@r0
   09CD FB                 2258 	mov	r3,a
   09CE 08                 2259 	inc	r0
   09CF 86 04              2260 	mov	ar4,@r0
                           2261 ;     genPointerGet
                           2262 ;     genGenPointerGet
   09D1 8A 82              2263 	mov	dpl,r2
   09D3 8B 83              2264 	mov	dph,r3
   09D5 8C F0              2265 	mov	b,r4
   09D7 E5*00              2266 	mov	a,_bp
   09D9 24 0B              2267 	add	a,#0x0b
   09DB F8                 2268 	mov	r0,a
   09DC 12s00r00           2269 	lcall	__gptrget
   09DF F6                 2270 	mov	@r0,a
                           2271 ;     genCmpGt
   09E0 E5*00              2272 	mov	a,_bp
   09E2 24 0B              2273 	add	a,#0x0b
   09E4 F8                 2274 	mov	r0,a
                           2275 ;     genCmp
   09E5 C3                 2276 	clr	c
   09E6 74 00              2277 	mov	a,#0x00
   09E8 96                 2278 	subb	a,@r0
                           2279 ;     genIfxJump
   09E9 40 03              2280 	jc	00129$
   09EB 02s0Br75           2281 	ljmp	00110$
   09EE                    2282 00129$:
                           2283 ;../../Source/queue.c:450: pxQueue->pcReadFrom += pxQueue->ucItemSize;
                           2284 ;     genIpush
                           2285 ;     genPlus
   09EE E5*00              2286 	mov	a,_bp
   09F0 24 01              2287 	add	a,#0x01
   09F2 F8                 2288 	mov	r0,a
   09F3 E5*00              2289 	mov	a,_bp
   09F5 24 04              2290 	add	a,#0x04
   09F7 F9                 2291 	mov	r1,a
   09F8 74 09              2292 	mov	a,#0x09
   09FA 26                 2293 	add	a,@r0
   09FB F7                 2294 	mov	@r1,a
   09FC 74 00              2295 	mov	a,#0x00
   09FE 08                 2296 	inc	r0
   09FF 36                 2297 	addc	a,@r0
   0A00 09                 2298 	inc	r1
   0A01 F7                 2299 	mov	@r1,a
   0A02 08                 2300 	inc	r0
   0A03 09                 2301 	inc	r1
   0A04 E6                 2302 	mov	a,@r0
   0A05 F7                 2303 	mov	@r1,a
                           2304 ;     genPointerGet
                           2305 ;     genGenPointerGet
   0A06 E5*00              2306 	mov	a,_bp
   0A08 24 04              2307 	add	a,#0x04
   0A0A F8                 2308 	mov	r0,a
   0A0B 86 82              2309 	mov	dpl,@r0
   0A0D 08                 2310 	inc	r0
   0A0E 86 83              2311 	mov	dph,@r0
   0A10 08                 2312 	inc	r0
   0A11 86 F0              2313 	mov	b,@r0
   0A13 E5*00              2314 	mov	a,_bp
   0A15 24 07              2315 	add	a,#0x07
   0A17 F9                 2316 	mov	r1,a
   0A18 12s00r00           2317 	lcall	__gptrget
   0A1B F7                 2318 	mov	@r1,a
   0A1C A3                 2319 	inc	dptr
   0A1D 12s00r00           2320 	lcall	__gptrget
   0A20 09                 2321 	inc	r1
   0A21 F7                 2322 	mov	@r1,a
   0A22 A3                 2323 	inc	dptr
   0A23 12s00r00           2324 	lcall	__gptrget
   0A26 09                 2325 	inc	r1
   0A27 F7                 2326 	mov	@r1,a
                           2327 ;     genPlus
   0A28 E5*00              2328 	mov	a,_bp
   0A2A 24 01              2329 	add	a,#0x01
   0A2C F8                 2330 	mov	r0,a
   0A2D 74 3A              2331 	mov	a,#0x3A
   0A2F 26                 2332 	add	a,@r0
   0A30 FD                 2333 	mov	r5,a
   0A31 74 00              2334 	mov	a,#0x00
   0A33 08                 2335 	inc	r0
   0A34 36                 2336 	addc	a,@r0
   0A35 FE                 2337 	mov	r6,a
   0A36 08                 2338 	inc	r0
   0A37 86 07              2339 	mov	ar7,@r0
                           2340 ;     genPointerGet
                           2341 ;     genGenPointerGet
   0A39 8D 82              2342 	mov	dpl,r5
   0A3B 8E 83              2343 	mov	dph,r6
   0A3D 8F F0              2344 	mov	b,r7
   0A3F E5*00              2345 	mov	a,_bp
   0A41 24 0A              2346 	add	a,#0x0a
   0A43 F8                 2347 	mov	r0,a
   0A44 12s00r00           2348 	lcall	__gptrget
   0A47 F6                 2349 	mov	@r0,a
                           2350 ;     genPlus
   0A48 E5*00              2351 	mov	a,_bp
   0A4A 24 07              2352 	add	a,#0x07
   0A4C F8                 2353 	mov	r0,a
   0A4D E5*00              2354 	mov	a,_bp
   0A4F 24 0A              2355 	add	a,#0x0a
   0A51 F9                 2356 	mov	r1,a
   0A52 E7                 2357 	mov	a,@r1
   0A53 26                 2358 	add	a,@r0
   0A54 F6                 2359 	mov	@r0,a
   0A55 74 00              2360 	mov	a,#0x00
   0A57 08                 2361 	inc	r0
   0A58 36                 2362 	addc	a,@r0
   0A59 F6                 2363 	mov	@r0,a
                           2364 ;     genPointerSet
                           2365 ;     genGenPointerSet
   0A5A E5*00              2366 	mov	a,_bp
   0A5C 24 04              2367 	add	a,#0x04
   0A5E F8                 2368 	mov	r0,a
   0A5F 86 82              2369 	mov	dpl,@r0
   0A61 08                 2370 	inc	r0
   0A62 86 83              2371 	mov	dph,@r0
   0A64 08                 2372 	inc	r0
   0A65 86 F0              2373 	mov	b,@r0
   0A67 E5*00              2374 	mov	a,_bp
   0A69 24 07              2375 	add	a,#0x07
   0A6B F9                 2376 	mov	r1,a
   0A6C E7                 2377 	mov	a,@r1
   0A6D 12s00r00           2378 	lcall	__gptrput
   0A70 A3                 2379 	inc	dptr
   0A71 09                 2380 	inc	r1
   0A72 E7                 2381 	mov	a,@r1
   0A73 12s00r00           2382 	lcall	__gptrput
   0A76 A3                 2383 	inc	dptr
   0A77 09                 2384 	inc	r1
   0A78 E7                 2385 	mov	a,@r1
   0A79 12s00r00           2386 	lcall	__gptrput
                           2387 ;../../Source/queue.c:451: if( pxQueue->pcReadFrom >= pxQueue->pcTail )
                           2388 ;     genPlus
   0A7C E5*00              2389 	mov	a,_bp
   0A7E 24 01              2390 	add	a,#0x01
   0A80 F8                 2391 	mov	r0,a
                           2392 ;     genPlusIncr
   0A81 74 03              2393 	mov	a,#0x03
   0A83 26                 2394 	add	a,@r0
   0A84 FD                 2395 	mov	r5,a
   0A85 74 00              2396 	mov	a,#0x00
   0A87 08                 2397 	inc	r0
   0A88 36                 2398 	addc	a,@r0
   0A89 FE                 2399 	mov	r6,a
   0A8A 08                 2400 	inc	r0
   0A8B 86 07              2401 	mov	ar7,@r0
                           2402 ;     genPointerGet
                           2403 ;     genGenPointerGet
   0A8D 8D 82              2404 	mov	dpl,r5
   0A8F 8E 83              2405 	mov	dph,r6
   0A91 8F F0              2406 	mov	b,r7
   0A93 12s00r00           2407 	lcall	__gptrget
   0A96 FD                 2408 	mov	r5,a
   0A97 A3                 2409 	inc	dptr
   0A98 12s00r00           2410 	lcall	__gptrget
   0A9B FE                 2411 	mov	r6,a
   0A9C A3                 2412 	inc	dptr
   0A9D 12s00r00           2413 	lcall	__gptrget
   0AA0 FF                 2414 	mov	r7,a
                           2415 ;     genCmpLt
   0AA1 E5*00              2416 	mov	a,_bp
   0AA3 24 07              2417 	add	a,#0x07
   0AA5 F8                 2418 	mov	r0,a
                           2419 ;     genCmp
   0AA6 C3                 2420 	clr	c
   0AA7 E6                 2421 	mov	a,@r0
   0AA8 9D                 2422 	subb	a,r5
   0AA9 08                 2423 	inc	r0
   0AAA E6                 2424 	mov	a,@r0
   0AAB 9E                 2425 	subb	a,r6
   0AAC 08                 2426 	inc	r0
   0AAD E6                 2427 	mov	a,@r0
   0AAE 64 80              2428 	xrl	a,#0x80
   0AB0 8F F0              2429 	mov	b,r7
   0AB2 63 F0 80           2430 	xrl	b,#0x80
   0AB5 95 F0              2431 	subb	a,b
   0AB7 E4                 2432 	clr	a
   0AB8 33                 2433 	rlc	a
                           2434 ;     genIpop
                           2435 ;     genIfx
                           2436 ;     genIfxJump
   0AB9 60 03              2437 	jz	00130$
   0ABB 02s0ArF4           2438 	ljmp	00108$
   0ABE                    2439 00130$:
                           2440 ;../../Source/queue.c:453: pxQueue->pcReadFrom = pxQueue->pcHead;
                           2441 ;     genPointerGet
                           2442 ;     genGenPointerGet
   0ABE E5*00              2443 	mov	a,_bp
   0AC0 24 01              2444 	add	a,#0x01
   0AC2 F8                 2445 	mov	r0,a
   0AC3 86 82              2446 	mov	dpl,@r0
   0AC5 08                 2447 	inc	r0
   0AC6 86 83              2448 	mov	dph,@r0
   0AC8 08                 2449 	inc	r0
   0AC9 86 F0              2450 	mov	b,@r0
   0ACB 12s00r00           2451 	lcall	__gptrget
   0ACE FE                 2452 	mov	r6,a
   0ACF A3                 2453 	inc	dptr
   0AD0 12s00r00           2454 	lcall	__gptrget
   0AD3 FF                 2455 	mov	r7,a
   0AD4 A3                 2456 	inc	dptr
   0AD5 12s00r00           2457 	lcall	__gptrget
   0AD8 FD                 2458 	mov	r5,a
                           2459 ;     genPointerSet
                           2460 ;     genGenPointerSet
   0AD9 E5*00              2461 	mov	a,_bp
   0ADB 24 04              2462 	add	a,#0x04
   0ADD F8                 2463 	mov	r0,a
   0ADE 86 82              2464 	mov	dpl,@r0
   0AE0 08                 2465 	inc	r0
   0AE1 86 83              2466 	mov	dph,@r0
   0AE3 08                 2467 	inc	r0
   0AE4 86 F0              2468 	mov	b,@r0
   0AE6 EE                 2469 	mov	a,r6
   0AE7 12s00r00           2470 	lcall	__gptrput
   0AEA A3                 2471 	inc	dptr
   0AEB EF                 2472 	mov	a,r7
   0AEC 12s00r00           2473 	lcall	__gptrput
   0AEF A3                 2474 	inc	dptr
   0AF0 ED                 2475 	mov	a,r5
   0AF1 12s00r00           2476 	lcall	__gptrput
   0AF4                    2477 00108$:
                           2478 ;../../Source/queue.c:455: --( pxQueue->ucMessagesWaiting );
                           2479 ;     genMinus
   0AF4 E5*00              2480 	mov	a,_bp
   0AF6 24 0B              2481 	add	a,#0x0b
   0AF8 F8                 2482 	mov	r0,a
                           2483 ;     genMinusDec
   0AF9 E6                 2484 	mov	a,@r0
   0AFA 14                 2485 	dec	a
   0AFB FD                 2486 	mov	r5,a
                           2487 ;     genPointerSet
                           2488 ;     genGenPointerSet
   0AFC 8A 82              2489 	mov	dpl,r2
   0AFE 8B 83              2490 	mov	dph,r3
   0B00 8C F0              2491 	mov	b,r4
   0B02 ED                 2492 	mov	a,r5
   0B03 12s00r00           2493 	lcall	__gptrput
                           2494 ;../../Source/queue.c:456: memcpy( ( void * ) pcBuffer, ( void * ) pxQueue->pcReadFrom, ( unsigned ) pxQueue->ucItemSize );
                           2495 ;     genCast
   0B06 E5*00              2496 	mov	a,_bp
   0B08 24 0A              2497 	add	a,#0x0a
   0B0A F8                 2498 	mov	r0,a
   0B0B 86 02              2499 	mov	ar2,@r0
   0B0D 7B 00              2500 	mov	r3,#0x00
                           2501 ;     genPointerGet
                           2502 ;     genGenPointerGet
   0B0F E5*00              2503 	mov	a,_bp
   0B11 24 04              2504 	add	a,#0x04
   0B13 F8                 2505 	mov	r0,a
   0B14 86 82              2506 	mov	dpl,@r0
   0B16 08                 2507 	inc	r0
   0B17 86 83              2508 	mov	dph,@r0
   0B19 08                 2509 	inc	r0
   0B1A 86 F0              2510 	mov	b,@r0
   0B1C 12s00r00           2511 	lcall	__gptrget
   0B1F FC                 2512 	mov	r4,a
   0B20 A3                 2513 	inc	dptr
   0B21 12s00r00           2514 	lcall	__gptrget
   0B24 FD                 2515 	mov	r5,a
   0B25 A3                 2516 	inc	dptr
   0B26 12s00r00           2517 	lcall	__gptrget
   0B29 FE                 2518 	mov	r6,a
                           2519 ;     genIpush
   0B2A C0 02              2520 	push	ar2
   0B2C C0 03              2521 	push	ar3
                           2522 ;     genIpush
   0B2E C0 04              2523 	push	ar4
   0B30 C0 05              2524 	push	ar5
   0B32 C0 06              2525 	push	ar6
                           2526 ;     genCall
   0B34 E5*00              2527 	mov	a,_bp
   0B36 24 FB              2528 	add	a,#0xfb
   0B38 F8                 2529 	mov	r0,a
   0B39 86 82              2530 	mov	dpl,@r0
   0B3B 08                 2531 	inc	r0
   0B3C 86 83              2532 	mov	dph,@r0
   0B3E 08                 2533 	inc	r0
   0B3F 86 F0              2534 	mov	b,@r0
   0B41 12s00r00           2535 	lcall	_memcpy
   0B44 E5 81              2536 	mov	a,sp
   0B46 24 FB              2537 	add	a,#0xfb
   0B48 F5 81              2538 	mov	sp,a
                           2539 ;../../Source/queue.c:460: ++( pxQueue->cRxLock );
                           2540 ;     genPlus
   0B4A E5*00              2541 	mov	a,_bp
   0B4C 24 01              2542 	add	a,#0x01
   0B4E F8                 2543 	mov	r0,a
   0B4F 74 3B              2544 	mov	a,#0x3B
   0B51 26                 2545 	add	a,@r0
   0B52 FA                 2546 	mov	r2,a
   0B53 74 00              2547 	mov	a,#0x00
   0B55 08                 2548 	inc	r0
   0B56 36                 2549 	addc	a,@r0
   0B57 FB                 2550 	mov	r3,a
   0B58 08                 2551 	inc	r0
   0B59 86 04              2552 	mov	ar4,@r0
                           2553 ;     genPointerGet
                           2554 ;     genGenPointerGet
   0B5B 8A 82              2555 	mov	dpl,r2
   0B5D 8B 83              2556 	mov	dph,r3
   0B5F 8C F0              2557 	mov	b,r4
   0B61 12s00r00           2558 	lcall	__gptrget
   0B64 FD                 2559 	mov	r5,a
                           2560 ;     genPlus
                           2561 ;     genPlusIncr
   0B65 0D                 2562 	inc	r5
                           2563 ;     genPointerSet
                           2564 ;     genGenPointerSet
   0B66 8A 82              2565 	mov	dpl,r2
   0B68 8B 83              2566 	mov	dph,r3
   0B6A 8C F0              2567 	mov	b,r4
   0B6C ED                 2568 	mov	a,r5
   0B6D 12s00r00           2569 	lcall	__gptrput
                           2570 ;../../Source/queue.c:461: cReturn = ( signed portCHAR ) pdPASS;
                           2571 ;     genAssign
   0B70 7A 01              2572 	mov	r2,#0x01
   0B72 02s0Br77           2573 	ljmp	00111$
   0B75                    2574 00110$:
                           2575 ;../../Source/queue.c:465: cReturn = ( signed portCHAR ) pdFAIL;
                           2576 ;     genAssign
   0B75 7A 00              2577 	mov	r2,#0x00
   0B77                    2578 00111$:
                           2579 ;../../Source/queue.c:468: taskEXIT_CRITICAL();
                           2580 ;     genInline
   0B77 D0 E0              2581 	 pop ACC 
                           2582 ;     genAnd
   0B79 53 E0 80           2583 	anl	_ACC,#0x80
                           2584 ;     genOr
   0B7C E5 E0              2585 	mov	a,_ACC
   0B7E 42 A8              2586 	orl	_IE,a
                           2587 ;     genInline
   0B80 D0 E0              2588 	 pop ACC 
                           2589 ;../../Source/queue.c:471: if( prvUnlockQueue( pxQueue ) )
                           2590 ;     genCall
   0B82 E5*00              2591 	mov	a,_bp
   0B84 24 01              2592 	add	a,#0x01
   0B86 F8                 2593 	mov	r0,a
   0B87 86 82              2594 	mov	dpl,@r0
   0B89 08                 2595 	inc	r0
   0B8A 86 83              2596 	mov	dph,@r0
   0B8C 08                 2597 	inc	r0
   0B8D 86 F0              2598 	mov	b,@r0
   0B8F C0 02              2599 	push	ar2
   0B91 12s0Er8A           2600 	lcall	_prvUnlockQueue
   0B94 E5 82              2601 	mov	a,dpl
   0B96 D0 02              2602 	pop	ar2
                           2603 ;     genIfx
                           2604 ;     genIfxJump
   0B98 70 03              2605 	jnz	00131$
   0B9A 02s0BrB1           2606 	ljmp	00115$
   0B9D                    2607 00131$:
                           2608 ;../../Source/queue.c:473: if( !cTaskResumeAll() )
                           2609 ;     genCall
   0B9D C0 02              2610 	push	ar2
   0B9F 12s00r00           2611 	lcall	_cTaskResumeAll
   0BA2 E5 82              2612 	mov	a,dpl
   0BA4 D0 02              2613 	pop	ar2
                           2614 ;     genIfx
                           2615 ;     genIfxJump
   0BA6 60 03              2616 	jz	00132$
   0BA8 02s0BrB8           2617 	ljmp	00116$
   0BAB                    2618 00132$:
                           2619 ;../../Source/queue.c:475: taskYIELD();
                           2620 ;     genCall
   0BAB 12s00r00           2621 	lcall	_vPortYield
   0BAE 02s0BrB8           2622 	ljmp	00116$
   0BB1                    2623 00115$:
                           2624 ;../../Source/queue.c:480: cTaskResumeAll();
                           2625 ;     genCall
   0BB1 C0 02              2626 	push	ar2
   0BB3 12s00r00           2627 	lcall	_cTaskResumeAll
   0BB6 D0 02              2628 	pop	ar2
   0BB8                    2629 00116$:
                           2630 ;../../Source/queue.c:483: return cReturn;
                           2631 ;     genRet
   0BB8 8A 82              2632 	mov	dpl,r2
   0BBA                    2633 00117$:
   0BBA 85*00 81           2634 	mov	sp,_bp
   0BBD D0*00              2635 	pop	_bp
   0BBF 22                 2636 	ret
                           2637 ;------------------------------------------------------------
                           2638 ;Allocation info for local variables in function 'cQueueReceiveFromISR'
                           2639 ;------------------------------------------------------------
                           2640 ;pcBuffer                  Allocated to stack - offset -5
                           2641 ;pcTaskWoken               Allocated to stack - offset -8
                           2642 ;pxQueue                   Allocated to stack - offset 1
                           2643 ;cReturn                   Allocated to registers r2 
                           2644 ;sloc0                     Allocated to stack - offset 4
                           2645 ;sloc1                     Allocated to stack - offset 5
                           2646 ;sloc2                     Allocated to stack - offset 8
                           2647 ;sloc3                     Allocated to stack - offset 9
                           2648 ;------------------------------------------------------------
                           2649 ;../../Source/queue.c:487: signed portCHAR cQueueReceiveFromISR( xQueueHandle pxQueue, void *pcBuffer, signed portCHAR *pcTaskWoken )
                           2650 ;	-----------------------------------------
                           2651 ;	 function cQueueReceiveFromISR
                           2652 ;	-----------------------------------------
   0BC0                    2653 _cQueueReceiveFromISR:
   0BC0 C0*00              2654 	push	_bp
   0BC2 85 81*00           2655 	mov	_bp,sp
                           2656 ;     genReceive
   0BC5 C0 82              2657 	push	dpl
   0BC7 C0 83              2658 	push	dph
   0BC9 C0 F0              2659 	push	b
   0BCB E5 81              2660 	mov	a,sp
   0BCD 24 0B              2661 	add	a,#0x0b
   0BCF F5 81              2662 	mov	sp,a
                           2663 ;../../Source/queue.c:492: if( pxQueue->ucMessagesWaiting > ( unsigned portCHAR ) 0 )
                           2664 ;     genPlus
   0BD1 E5*00              2665 	mov	a,_bp
   0BD3 24 01              2666 	add	a,#0x01
   0BD5 F8                 2667 	mov	r0,a
   0BD6 74 38              2668 	mov	a,#0x38
   0BD8 26                 2669 	add	a,@r0
   0BD9 FD                 2670 	mov	r5,a
   0BDA 74 00              2671 	mov	a,#0x00
   0BDC 08                 2672 	inc	r0
   0BDD 36                 2673 	addc	a,@r0
   0BDE FE                 2674 	mov	r6,a
   0BDF 08                 2675 	inc	r0
   0BE0 86 07              2676 	mov	ar7,@r0
                           2677 ;     genPointerGet
                           2678 ;     genGenPointerGet
   0BE2 8D 82              2679 	mov	dpl,r5
   0BE4 8E 83              2680 	mov	dph,r6
   0BE6 8F F0              2681 	mov	b,r7
   0BE8 E5*00              2682 	mov	a,_bp
   0BEA 24 04              2683 	add	a,#0x04
   0BEC F8                 2684 	mov	r0,a
   0BED 12s00r00           2685 	lcall	__gptrget
   0BF0 F6                 2686 	mov	@r0,a
                           2687 ;     genCmpGt
   0BF1 E5*00              2688 	mov	a,_bp
   0BF3 24 04              2689 	add	a,#0x04
   0BF5 F8                 2690 	mov	r0,a
                           2691 ;     genCmp
   0BF6 C3                 2692 	clr	c
   0BF7 74 00              2693 	mov	a,#0x00
   0BF9 96                 2694 	subb	a,@r0
                           2695 ;     genIfxJump
   0BFA 40 03              2696 	jc	00123$
   0BFC 02s0Er05           2697 	ljmp	00113$
   0BFF                    2698 00123$:
                           2699 ;../../Source/queue.c:495: pxQueue->pcReadFrom += pxQueue->ucItemSize;
                           2700 ;     genIpush
   0BFF C0 05              2701 	push	ar5
   0C01 C0 06              2702 	push	ar6
   0C03 C0 07              2703 	push	ar7
                           2704 ;     genPlus
   0C05 E5*00              2705 	mov	a,_bp
   0C07 24 01              2706 	add	a,#0x01
   0C09 F8                 2707 	mov	r0,a
   0C0A E5*00              2708 	mov	a,_bp
   0C0C 24 05              2709 	add	a,#0x05
   0C0E F9                 2710 	mov	r1,a
   0C0F 74 09              2711 	mov	a,#0x09
   0C11 26                 2712 	add	a,@r0
   0C12 F7                 2713 	mov	@r1,a
   0C13 74 00              2714 	mov	a,#0x00
   0C15 08                 2715 	inc	r0
   0C16 36                 2716 	addc	a,@r0
   0C17 09                 2717 	inc	r1
   0C18 F7                 2718 	mov	@r1,a
   0C19 08                 2719 	inc	r0
   0C1A 09                 2720 	inc	r1
   0C1B E6                 2721 	mov	a,@r0
   0C1C F7                 2722 	mov	@r1,a
                           2723 ;     genPointerGet
                           2724 ;     genGenPointerGet
   0C1D E5*00              2725 	mov	a,_bp
   0C1F 24 05              2726 	add	a,#0x05
   0C21 F8                 2727 	mov	r0,a
   0C22 86 82              2728 	mov	dpl,@r0
   0C24 08                 2729 	inc	r0
   0C25 86 83              2730 	mov	dph,@r0
   0C27 08                 2731 	inc	r0
   0C28 86 F0              2732 	mov	b,@r0
   0C2A 12s00r00           2733 	lcall	__gptrget
   0C2D FD                 2734 	mov	r5,a
   0C2E A3                 2735 	inc	dptr
   0C2F 12s00r00           2736 	lcall	__gptrget
   0C32 FE                 2737 	mov	r6,a
   0C33 A3                 2738 	inc	dptr
   0C34 12s00r00           2739 	lcall	__gptrget
   0C37 FF                 2740 	mov	r7,a
                           2741 ;     genPlus
   0C38 E5*00              2742 	mov	a,_bp
   0C3A 24 01              2743 	add	a,#0x01
   0C3C F8                 2744 	mov	r0,a
   0C3D 74 3A              2745 	mov	a,#0x3A
   0C3F 26                 2746 	add	a,@r0
   0C40 FA                 2747 	mov	r2,a
   0C41 74 00              2748 	mov	a,#0x00
   0C43 08                 2749 	inc	r0
   0C44 36                 2750 	addc	a,@r0
   0C45 FB                 2751 	mov	r3,a
   0C46 08                 2752 	inc	r0
   0C47 86 04              2753 	mov	ar4,@r0
                           2754 ;     genPointerGet
                           2755 ;     genGenPointerGet
   0C49 8A 82              2756 	mov	dpl,r2
   0C4B 8B 83              2757 	mov	dph,r3
   0C4D 8C F0              2758 	mov	b,r4
   0C4F E5*00              2759 	mov	a,_bp
   0C51 24 08              2760 	add	a,#0x08
   0C53 F8                 2761 	mov	r0,a
   0C54 12s00r00           2762 	lcall	__gptrget
   0C57 F6                 2763 	mov	@r0,a
                           2764 ;     genPlus
   0C58 E5*00              2765 	mov	a,_bp
   0C5A 24 08              2766 	add	a,#0x08
   0C5C F8                 2767 	mov	r0,a
   0C5D E6                 2768 	mov	a,@r0
   0C5E 25 05              2769 	add	a,ar5
   0C60 FD                 2770 	mov	r5,a
   0C61 74 00              2771 	mov	a,#0x00
   0C63 35 06              2772 	addc	a,ar6
   0C65 FE                 2773 	mov	r6,a
                           2774 ;     genPointerSet
                           2775 ;     genGenPointerSet
   0C66 E5*00              2776 	mov	a,_bp
   0C68 24 05              2777 	add	a,#0x05
   0C6A F8                 2778 	mov	r0,a
   0C6B 86 82              2779 	mov	dpl,@r0
   0C6D 08                 2780 	inc	r0
   0C6E 86 83              2781 	mov	dph,@r0
   0C70 08                 2782 	inc	r0
   0C71 86 F0              2783 	mov	b,@r0
   0C73 ED                 2784 	mov	a,r5
   0C74 12s00r00           2785 	lcall	__gptrput
   0C77 A3                 2786 	inc	dptr
   0C78 EE                 2787 	mov	a,r6
   0C79 12s00r00           2788 	lcall	__gptrput
   0C7C A3                 2789 	inc	dptr
   0C7D EF                 2790 	mov	a,r7
   0C7E 12s00r00           2791 	lcall	__gptrput
                           2792 ;../../Source/queue.c:496: if( pxQueue->pcReadFrom >= pxQueue->pcTail )
                           2793 ;     genPlus
   0C81 E5*00              2794 	mov	a,_bp
   0C83 24 01              2795 	add	a,#0x01
   0C85 F8                 2796 	mov	r0,a
                           2797 ;     genPlusIncr
   0C86 74 03              2798 	mov	a,#0x03
   0C88 26                 2799 	add	a,@r0
   0C89 FA                 2800 	mov	r2,a
   0C8A 74 00              2801 	mov	a,#0x00
   0C8C 08                 2802 	inc	r0
   0C8D 36                 2803 	addc	a,@r0
   0C8E FB                 2804 	mov	r3,a
   0C8F 08                 2805 	inc	r0
   0C90 86 04              2806 	mov	ar4,@r0
                           2807 ;     genPointerGet
                           2808 ;     genGenPointerGet
   0C92 8A 82              2809 	mov	dpl,r2
   0C94 8B 83              2810 	mov	dph,r3
   0C96 8C F0              2811 	mov	b,r4
   0C98 12s00r00           2812 	lcall	__gptrget
   0C9B FA                 2813 	mov	r2,a
   0C9C A3                 2814 	inc	dptr
   0C9D 12s00r00           2815 	lcall	__gptrget
   0CA0 FB                 2816 	mov	r3,a
   0CA1 A3                 2817 	inc	dptr
   0CA2 12s00r00           2818 	lcall	__gptrget
   0CA5 FC                 2819 	mov	r4,a
                           2820 ;     genCmpLt
                           2821 ;     genCmp
   0CA6 C3                 2822 	clr	c
   0CA7 ED                 2823 	mov	a,r5
   0CA8 9A                 2824 	subb	a,r2
   0CA9 EE                 2825 	mov	a,r6
   0CAA 9B                 2826 	subb	a,r3
   0CAB EF                 2827 	mov	a,r7
   0CAC 64 80              2828 	xrl	a,#0x80
   0CAE 8C F0              2829 	mov	b,r4
   0CB0 63 F0 80           2830 	xrl	b,#0x80
   0CB3 95 F0              2831 	subb	a,b
   0CB5 E4                 2832 	clr	a
   0CB6 33                 2833 	rlc	a
                           2834 ;     genIpop
   0CB7 D0 07              2835 	pop	ar7
   0CB9 D0 06              2836 	pop	ar6
   0CBB D0 05              2837 	pop	ar5
                           2838 ;     genIfx
                           2839 ;     genIfxJump
   0CBD 60 03              2840 	jz	00124$
   0CBF 02s0CrF8           2841 	ljmp	00102$
   0CC2                    2842 00124$:
                           2843 ;../../Source/queue.c:498: pxQueue->pcReadFrom = pxQueue->pcHead;
                           2844 ;     genPointerGet
                           2845 ;     genGenPointerGet
   0CC2 E5*00              2846 	mov	a,_bp
   0CC4 24 01              2847 	add	a,#0x01
   0CC6 F8                 2848 	mov	r0,a
   0CC7 86 82              2849 	mov	dpl,@r0
   0CC9 08                 2850 	inc	r0
   0CCA 86 83              2851 	mov	dph,@r0
   0CCC 08                 2852 	inc	r0
   0CCD 86 F0              2853 	mov	b,@r0
   0CCF 12s00r00           2854 	lcall	__gptrget
   0CD2 FA                 2855 	mov	r2,a
   0CD3 A3                 2856 	inc	dptr
   0CD4 12s00r00           2857 	lcall	__gptrget
   0CD7 FB                 2858 	mov	r3,a
   0CD8 A3                 2859 	inc	dptr
   0CD9 12s00r00           2860 	lcall	__gptrget
   0CDC FC                 2861 	mov	r4,a
                           2862 ;     genPointerSet
                           2863 ;     genGenPointerSet
   0CDD E5*00              2864 	mov	a,_bp
   0CDF 24 05              2865 	add	a,#0x05
   0CE1 F8                 2866 	mov	r0,a
   0CE2 86 82              2867 	mov	dpl,@r0
   0CE4 08                 2868 	inc	r0
   0CE5 86 83              2869 	mov	dph,@r0
   0CE7 08                 2870 	inc	r0
   0CE8 86 F0              2871 	mov	b,@r0
   0CEA EA                 2872 	mov	a,r2
   0CEB 12s00r00           2873 	lcall	__gptrput
   0CEE A3                 2874 	inc	dptr
   0CEF EB                 2875 	mov	a,r3
   0CF0 12s00r00           2876 	lcall	__gptrput
   0CF3 A3                 2877 	inc	dptr
   0CF4 EC                 2878 	mov	a,r4
   0CF5 12s00r00           2879 	lcall	__gptrput
   0CF8                    2880 00102$:
                           2881 ;../../Source/queue.c:500: --( pxQueue->ucMessagesWaiting );
                           2882 ;     genMinus
   0CF8 E5*00              2883 	mov	a,_bp
   0CFA 24 04              2884 	add	a,#0x04
   0CFC F8                 2885 	mov	r0,a
                           2886 ;     genMinusDec
   0CFD E6                 2887 	mov	a,@r0
   0CFE 14                 2888 	dec	a
   0CFF FA                 2889 	mov	r2,a
                           2890 ;     genPointerSet
                           2891 ;     genGenPointerSet
   0D00 8D 82              2892 	mov	dpl,r5
   0D02 8E 83              2893 	mov	dph,r6
   0D04 8F F0              2894 	mov	b,r7
   0D06 EA                 2895 	mov	a,r2
   0D07 12s00r00           2896 	lcall	__gptrput
                           2897 ;../../Source/queue.c:501: memcpy( ( void * ) pcBuffer, ( void * ) pxQueue->pcReadFrom, ( unsigned ) pxQueue->ucItemSize );
                           2898 ;     genCast
   0D0A E5*00              2899 	mov	a,_bp
   0D0C 24 08              2900 	add	a,#0x08
   0D0E F8                 2901 	mov	r0,a
   0D0F 86 02              2902 	mov	ar2,@r0
   0D11 7B 00              2903 	mov	r3,#0x00
                           2904 ;     genPointerGet
                           2905 ;     genGenPointerGet
   0D13 E5*00              2906 	mov	a,_bp
   0D15 24 05              2907 	add	a,#0x05
   0D17 F8                 2908 	mov	r0,a
   0D18 86 82              2909 	mov	dpl,@r0
   0D1A 08                 2910 	inc	r0
   0D1B 86 83              2911 	mov	dph,@r0
   0D1D 08                 2912 	inc	r0
   0D1E 86 F0              2913 	mov	b,@r0
   0D20 12s00r00           2914 	lcall	__gptrget
   0D23 FC                 2915 	mov	r4,a
   0D24 A3                 2916 	inc	dptr
   0D25 12s00r00           2917 	lcall	__gptrget
   0D28 FD                 2918 	mov	r5,a
   0D29 A3                 2919 	inc	dptr
   0D2A 12s00r00           2920 	lcall	__gptrget
   0D2D FE                 2921 	mov	r6,a
                           2922 ;     genIpush
   0D2E C0 02              2923 	push	ar2
   0D30 C0 03              2924 	push	ar3
                           2925 ;     genIpush
   0D32 C0 04              2926 	push	ar4
   0D34 C0 05              2927 	push	ar5
   0D36 C0 06              2928 	push	ar6
                           2929 ;     genCall
   0D38 E5*00              2930 	mov	a,_bp
   0D3A 24 FB              2931 	add	a,#0xfb
   0D3C F8                 2932 	mov	r0,a
   0D3D 86 82              2933 	mov	dpl,@r0
   0D3F 08                 2934 	inc	r0
   0D40 86 83              2935 	mov	dph,@r0
   0D42 08                 2936 	inc	r0
   0D43 86 F0              2937 	mov	b,@r0
   0D45 12s00r00           2938 	lcall	_memcpy
   0D48 E5 81              2939 	mov	a,sp
   0D4A 24 FB              2940 	add	a,#0xfb
   0D4C F5 81              2941 	mov	sp,a
                           2942 ;../../Source/queue.c:506: if( pxQueue->cRxLock == queueUNLOCKED )
                           2943 ;     genPlus
   0D4E E5*00              2944 	mov	a,_bp
   0D50 24 01              2945 	add	a,#0x01
   0D52 F8                 2946 	mov	r0,a
   0D53 74 3B              2947 	mov	a,#0x3B
   0D55 26                 2948 	add	a,@r0
   0D56 FA                 2949 	mov	r2,a
   0D57 74 00              2950 	mov	a,#0x00
   0D59 08                 2951 	inc	r0
   0D5A 36                 2952 	addc	a,@r0
   0D5B FB                 2953 	mov	r3,a
   0D5C 08                 2954 	inc	r0
   0D5D 86 04              2955 	mov	ar4,@r0
                           2956 ;     genPointerGet
                           2957 ;     genGenPointerGet
   0D5F 8A 82              2958 	mov	dpl,r2
   0D61 8B 83              2959 	mov	dph,r3
   0D63 8C F0              2960 	mov	b,r4
   0D65 12s00r00           2961 	lcall	__gptrget
   0D68 FD                 2962 	mov	r5,a
                           2963 ;     genCmpEq
   0D69 BD FF 02           2964 	cjne	r5,#0xFF,00125$
   0D6C 80 03              2965 	sjmp	00126$
   0D6E                    2966 00125$:
   0D6E 02s0DrF5           2967 	ljmp	00110$
   0D71                    2968 00126$:
                           2969 ;../../Source/queue.c:510: if( !( *pcTaskWoken ) )
                           2970 ;     genAssign
   0D71 E5*00              2971 	mov	a,_bp
   0D73 24 F8              2972 	add	a,#0xf8
   0D75 F8                 2973 	mov	r0,a
   0D76 86 02              2974 	mov	ar2,@r0
   0D78 08                 2975 	inc	r0
   0D79 86 03              2976 	mov	ar3,@r0
   0D7B 08                 2977 	inc	r0
   0D7C 86 04              2978 	mov	ar4,@r0
                           2979 ;     genPointerGet
                           2980 ;     genGenPointerGet
   0D7E 8A 82              2981 	mov	dpl,r2
   0D80 8B 83              2982 	mov	dph,r3
   0D82 8C F0              2983 	mov	b,r4
   0D84 12s00r00           2984 	lcall	__gptrget
                           2985 ;     genIfxJump
   0D87 60 03              2986 	jz	00127$
   0D89 02s0Er00           2987 	ljmp	00111$
   0D8C                    2988 00127$:
                           2989 ;../../Source/queue.c:512: if( !listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) )
                           2990 ;     genPlus
   0D8C E5*00              2991 	mov	a,_bp
   0D8E 24 01              2992 	add	a,#0x01
   0D90 F8                 2993 	mov	r0,a
   0D91 E5*00              2994 	mov	a,_bp
   0D93 24 09              2995 	add	a,#0x09
   0D95 F9                 2996 	mov	r1,a
   0D96 74 0C              2997 	mov	a,#0x0C
   0D98 26                 2998 	add	a,@r0
   0D99 F7                 2999 	mov	@r1,a
   0D9A 74 00              3000 	mov	a,#0x00
   0D9C 08                 3001 	inc	r0
   0D9D 36                 3002 	addc	a,@r0
   0D9E 09                 3003 	inc	r1
   0D9F F7                 3004 	mov	@r1,a
   0DA0 08                 3005 	inc	r0
   0DA1 09                 3006 	inc	r1
   0DA2 E6                 3007 	mov	a,@r0
   0DA3 F7                 3008 	mov	@r1,a
                           3009 ;     genPointerGet
                           3010 ;     genGenPointerGet
   0DA4 E5*00              3011 	mov	a,_bp
   0DA6 24 09              3012 	add	a,#0x09
   0DA8 F8                 3013 	mov	r0,a
   0DA9 86 82              3014 	mov	dpl,@r0
   0DAB 08                 3015 	inc	r0
   0DAC 86 83              3016 	mov	dph,@r0
   0DAE 08                 3017 	inc	r0
   0DAF 86 F0              3018 	mov	b,@r0
   0DB1 12s00r00           3019 	lcall	__gptrget
   0DB4 FE                 3020 	mov	r6,a
   0DB5 A3                 3021 	inc	dptr
   0DB6 12s00r00           3022 	lcall	__gptrget
   0DB9 FF                 3023 	mov	r7,a
                           3024 ;     genCmpEq
   0DBA BE 00 06           3025 	cjne	r6,#0x00,00128$
   0DBD BF 00 03           3026 	cjne	r7,#0x00,00128$
   0DC0 02s0Er00           3027 	ljmp	00111$
   0DC3                    3028 00128$:
                           3029 ;../../Source/queue.c:514: if( cTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != ( signed portCHAR ) pdFALSE )
                           3030 ;     genCall
   0DC3 E5*00              3031 	mov	a,_bp
   0DC5 24 09              3032 	add	a,#0x09
   0DC7 F8                 3033 	mov	r0,a
   0DC8 86 82              3034 	mov	dpl,@r0
   0DCA 08                 3035 	inc	r0
   0DCB 86 83              3036 	mov	dph,@r0
   0DCD 08                 3037 	inc	r0
   0DCE 86 F0              3038 	mov	b,@r0
   0DD0 C0 02              3039 	push	ar2
   0DD2 C0 03              3040 	push	ar3
   0DD4 C0 04              3041 	push	ar4
   0DD6 12s00r00           3042 	lcall	_cTaskRemoveFromEventList
   0DD9 AE 82              3043 	mov	r6,dpl
   0DDB D0 04              3044 	pop	ar4
   0DDD D0 03              3045 	pop	ar3
   0DDF D0 02              3046 	pop	ar2
                           3047 ;     genCmpEq
   0DE1 BE 00 03           3048 	cjne	r6,#0x00,00129$
   0DE4 02s0Er00           3049 	ljmp	00111$
   0DE7                    3050 00129$:
                           3051 ;../../Source/queue.c:518: *pcTaskWoken = ( signed portCHAR ) pdTRUE;
                           3052 ;     genPointerSet
                           3053 ;     genGenPointerSet
   0DE7 8A 82              3054 	mov	dpl,r2
   0DE9 8B 83              3055 	mov	dph,r3
   0DEB 8C F0              3056 	mov	b,r4
   0DED 74 01              3057 	mov	a,#0x01
   0DEF 12s00r00           3058 	lcall	__gptrput
   0DF2 02s0Er00           3059 	ljmp	00111$
   0DF5                    3060 00110$:
                           3061 ;../../Source/queue.c:527: ++( pxQueue->cRxLock );
                           3062 ;     genPlus
                           3063 ;     genPlusIncr
   0DF5 0D                 3064 	inc	r5
                           3065 ;     genPointerSet
                           3066 ;     genGenPointerSet
   0DF6 8A 82              3067 	mov	dpl,r2
   0DF8 8B 83              3068 	mov	dph,r3
   0DFA 8C F0              3069 	mov	b,r4
   0DFC ED                 3070 	mov	a,r5
   0DFD 12s00r00           3071 	lcall	__gptrput
   0E00                    3072 00111$:
                           3073 ;../../Source/queue.c:530: cReturn = ( signed portCHAR ) pdPASS;
                           3074 ;     genAssign
   0E00 7A 01              3075 	mov	r2,#0x01
   0E02 02s0Er07           3076 	ljmp	00114$
   0E05                    3077 00113$:
                           3078 ;../../Source/queue.c:534: cReturn = ( signed portCHAR ) pdFAIL;
                           3079 ;     genAssign
   0E05 7A 00              3080 	mov	r2,#0x00
   0E07                    3081 00114$:
                           3082 ;../../Source/queue.c:537: return cReturn;
                           3083 ;     genRet
   0E07 8A 82              3084 	mov	dpl,r2
   0E09                    3085 00115$:
   0E09 85*00 81           3086 	mov	sp,_bp
   0E0C D0*00              3087 	pop	_bp
   0E0E 22                 3088 	ret
                           3089 ;------------------------------------------------------------
                           3090 ;Allocation info for local variables in function 'ucQueueMessagesWaiting'
                           3091 ;------------------------------------------------------------
                           3092 ;pxQueue                   Allocated to registers r2 r3 r4 
                           3093 ;ucReturn                  Allocated to registers r2 
                           3094 ;------------------------------------------------------------
                           3095 ;../../Source/queue.c:541: unsigned portCHAR ucQueueMessagesWaiting( xQueueHandle pxQueue )
                           3096 ;	-----------------------------------------
                           3097 ;	 function ucQueueMessagesWaiting
                           3098 ;	-----------------------------------------
   0E0F                    3099 _ucQueueMessagesWaiting:
   0E0F C0*00              3100 	push	_bp
   0E11 85 81*00           3101 	mov	_bp,sp
                           3102 ;     genReceive
   0E14 AA 82              3103 	mov	r2,dpl
   0E16 AB 83              3104 	mov	r3,dph
   0E18 AC F0              3105 	mov	r4,b
                           3106 ;../../Source/queue.c:545: taskENTER_CRITICAL();
                           3107 ;     genInline
   0E1A C0 E0 C0 A8        3108 	 push ACC push IE 
                           3109 ;     genAssign
   0E1E C2 AF              3110 	clr	_EA
                           3111 ;../../Source/queue.c:546: ucReturn = pxQueue->ucMessagesWaiting;
                           3112 ;     genPlus
   0E20 74 38              3113 	mov	a,#0x38
   0E22 25 02              3114 	add	a,ar2
   0E24 FA                 3115 	mov	r2,a
   0E25 74 00              3116 	mov	a,#0x00
   0E27 35 03              3117 	addc	a,ar3
   0E29 FB                 3118 	mov	r3,a
                           3119 ;     genPointerGet
                           3120 ;     genGenPointerGet
   0E2A 8A 82              3121 	mov	dpl,r2
   0E2C 8B 83              3122 	mov	dph,r3
   0E2E 8C F0              3123 	mov	b,r4
   0E30 12s00r00           3124 	lcall	__gptrget
   0E33 FA                 3125 	mov	r2,a
                           3126 ;     genAssign
                           3127 ;../../Source/queue.c:547: taskEXIT_CRITICAL();
                           3128 ;     genInline
   0E34 D0 E0              3129 	 pop ACC 
                           3130 ;     genAnd
   0E36 53 E0 80           3131 	anl	_ACC,#0x80
                           3132 ;     genOr
   0E39 E5 E0              3133 	mov	a,_ACC
   0E3B 42 A8              3134 	orl	_IE,a
                           3135 ;     genInline
   0E3D D0 E0              3136 	 pop ACC 
                           3137 ;../../Source/queue.c:549: return ucReturn;
                           3138 ;     genRet
   0E3F 8A 82              3139 	mov	dpl,r2
   0E41                    3140 00101$:
   0E41 85*00 81           3141 	mov	sp,_bp
   0E44 D0*00              3142 	pop	_bp
   0E46 22                 3143 	ret
                           3144 ;------------------------------------------------------------
                           3145 ;Allocation info for local variables in function 'vQueueDelete'
                           3146 ;------------------------------------------------------------
                           3147 ;pxQueue                   Allocated to registers r2 r3 r4 
                           3148 ;------------------------------------------------------------
                           3149 ;../../Source/queue.c:553: void vQueueDelete( xQueueHandle pxQueue )
                           3150 ;	-----------------------------------------
                           3151 ;	 function vQueueDelete
                           3152 ;	-----------------------------------------
   0E47                    3153 _vQueueDelete:
   0E47 C0*00              3154 	push	_bp
   0E49 85 81*00           3155 	mov	_bp,sp
                           3156 ;     genReceive
   0E4C AA 82              3157 	mov	r2,dpl
   0E4E AB 83              3158 	mov	r3,dph
   0E50 AC F0              3159 	mov	r4,b
                           3160 ;../../Source/queue.c:555: vPortFree( pxQueue->pcHead );
                           3161 ;     genPointerGet
                           3162 ;     genGenPointerGet
   0E52 8A 82              3163 	mov	dpl,r2
   0E54 8B 83              3164 	mov	dph,r3
   0E56 8C F0              3165 	mov	b,r4
   0E58 12s00r00           3166 	lcall	__gptrget
   0E5B FD                 3167 	mov	r5,a
   0E5C A3                 3168 	inc	dptr
   0E5D 12s00r00           3169 	lcall	__gptrget
   0E60 FE                 3170 	mov	r6,a
   0E61 A3                 3171 	inc	dptr
   0E62 12s00r00           3172 	lcall	__gptrget
   0E65 FF                 3173 	mov	r7,a
                           3174 ;     genCall
   0E66 8D 82              3175 	mov	dpl,r5
   0E68 8E 83              3176 	mov	dph,r6
   0E6A 8F F0              3177 	mov	b,r7
   0E6C C0 02              3178 	push	ar2
   0E6E C0 03              3179 	push	ar3
   0E70 C0 04              3180 	push	ar4
   0E72 12s00r00           3181 	lcall	_vPortFree
   0E75 D0 04              3182 	pop	ar4
   0E77 D0 03              3183 	pop	ar3
   0E79 D0 02              3184 	pop	ar2
                           3185 ;../../Source/queue.c:556: vPortFree( pxQueue );
                           3186 ;     genCall
   0E7B 8A 82              3187 	mov	dpl,r2
   0E7D 8B 83              3188 	mov	dph,r3
   0E7F 8C F0              3189 	mov	b,r4
   0E81 12s00r00           3190 	lcall	_vPortFree
   0E84                    3191 00101$:
   0E84 85*00 81           3192 	mov	sp,_bp
   0E87 D0*00              3193 	pop	_bp
   0E89 22                 3194 	ret
                           3195 ;------------------------------------------------------------
                           3196 ;Allocation info for local variables in function 'prvUnlockQueue'
                           3197 ;------------------------------------------------------------
                           3198 ;pxQueue                   Allocated to stack - offset 1
                           3199 ;cYieldRequired            Allocated to stack - offset 4
                           3200 ;------------------------------------------------------------
                           3201 ;../../Source/queue.c:560: static signed portCHAR prvUnlockQueue( xQueueHandle pxQueue )
                           3202 ;	-----------------------------------------
                           3203 ;	 function prvUnlockQueue
                           3204 ;	-----------------------------------------
   0E8A                    3205 _prvUnlockQueue:
   0E8A C0*00              3206 	push	_bp
   0E8C 85 81*00           3207 	mov	_bp,sp
                           3208 ;     genReceive
   0E8F C0 82              3209 	push	dpl
   0E91 C0 83              3210 	push	dph
   0E93 C0 F0              3211 	push	b
   0E95 05 81              3212 	inc	sp
                           3213 ;../../Source/queue.c:562: signed portCHAR cYieldRequired = ( signed portCHAR ) pdFALSE;
                           3214 ;     genAssign
   0E97 E5*00              3215 	mov	a,_bp
   0E99 24 04              3216 	add	a,#0x04
   0E9B F8                 3217 	mov	r0,a
   0E9C 76 00              3218 	mov	@r0,#0x00
                           3219 ;../../Source/queue.c:570: taskENTER_CRITICAL();
                           3220 ;     genInline
   0E9E C0 E0 C0 A8        3221 	 push ACC push IE 
                           3222 ;     genAssign
   0EA2 C2 AF              3223 	clr	_EA
                           3224 ;../../Source/queue.c:572: --( pxQueue->cTxLock );
                           3225 ;     genPlus
   0EA4 E5*00              3226 	mov	a,_bp
   0EA6 24 01              3227 	add	a,#0x01
   0EA8 F8                 3228 	mov	r0,a
   0EA9 74 3C              3229 	mov	a,#0x3C
   0EAB 26                 3230 	add	a,@r0
   0EAC FE                 3231 	mov	r6,a
   0EAD 74 00              3232 	mov	a,#0x00
   0EAF 08                 3233 	inc	r0
   0EB0 36                 3234 	addc	a,@r0
   0EB1 FF                 3235 	mov	r7,a
   0EB2 08                 3236 	inc	r0
   0EB3 86 05              3237 	mov	ar5,@r0
                           3238 ;     genPointerGet
                           3239 ;     genGenPointerGet
   0EB5 8E 82              3240 	mov	dpl,r6
   0EB7 8F 83              3241 	mov	dph,r7
   0EB9 8D F0              3242 	mov	b,r5
   0EBB 12s00r00           3243 	lcall	__gptrget
   0EBE FA                 3244 	mov	r2,a
                           3245 ;     genMinus
                           3246 ;     genMinusDec
   0EBF 1A                 3247 	dec	r2
                           3248 ;     genPointerSet
                           3249 ;     genGenPointerSet
   0EC0 8E 82              3250 	mov	dpl,r6
   0EC2 8F 83              3251 	mov	dph,r7
   0EC4 8D F0              3252 	mov	b,r5
   0EC6 EA                 3253 	mov	a,r2
   0EC7 12s00r00           3254 	lcall	__gptrput
                           3255 ;../../Source/queue.c:575: if( pxQueue->cTxLock > queueUNLOCKED )
                           3256 ;     genCmpGt
                           3257 ;     genCmp
   0ECA C3                 3258 	clr	c
   0ECB 74 FF              3259 	mov	a,#0xFF
   0ECD 64 80              3260 	xrl	a,#0x80
   0ECF 8A F0              3261 	mov	b,r2
   0ED1 63 F0 80           3262 	xrl	b,#0x80
   0ED4 95 F0              3263 	subb	a,b
                           3264 ;     genIfxJump
   0ED6 40 03              3265 	jc	00121$
   0ED8 02s0Fr27           3266 	ljmp	00106$
   0EDB                    3267 00121$:
                           3268 ;../../Source/queue.c:577: pxQueue->cTxLock = queueUNLOCKED;
                           3269 ;     genPointerSet
                           3270 ;     genGenPointerSet
   0EDB 8E 82              3271 	mov	dpl,r6
   0EDD 8F 83              3272 	mov	dph,r7
   0EDF 8D F0              3273 	mov	b,r5
   0EE1 74 FF              3274 	mov	a,#0xFF
   0EE3 12s00r00           3275 	lcall	__gptrput
                           3276 ;../../Source/queue.c:581: if( !listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) )
                           3277 ;     genPlus
   0EE6 E5*00              3278 	mov	a,_bp
   0EE8 24 01              3279 	add	a,#0x01
   0EEA F8                 3280 	mov	r0,a
   0EEB 74 22              3281 	mov	a,#0x22
   0EED 26                 3282 	add	a,@r0
   0EEE FA                 3283 	mov	r2,a
   0EEF 74 00              3284 	mov	a,#0x00
   0EF1 08                 3285 	inc	r0
   0EF2 36                 3286 	addc	a,@r0
   0EF3 FB                 3287 	mov	r3,a
   0EF4 08                 3288 	inc	r0
   0EF5 86 04              3289 	mov	ar4,@r0
                           3290 ;     genPointerGet
                           3291 ;     genGenPointerGet
   0EF7 8A 82              3292 	mov	dpl,r2
   0EF9 8B 83              3293 	mov	dph,r3
   0EFB 8C F0              3294 	mov	b,r4
   0EFD 12s00r00           3295 	lcall	__gptrget
   0F00 FD                 3296 	mov	r5,a
   0F01 A3                 3297 	inc	dptr
   0F02 12s00r00           3298 	lcall	__gptrget
   0F05 FE                 3299 	mov	r6,a
                           3300 ;     genCmpEq
   0F06 BD 00 06           3301 	cjne	r5,#0x00,00122$
   0F09 BE 00 03           3302 	cjne	r6,#0x00,00122$
   0F0C 02s0Fr27           3303 	ljmp	00106$
   0F0F                    3304 00122$:
                           3305 ;../../Source/queue.c:585: if( cTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != ( signed portCHAR ) pdFALSE )
                           3306 ;     genCall
   0F0F 8A 82              3307 	mov	dpl,r2
   0F11 8B 83              3308 	mov	dph,r3
   0F13 8C F0              3309 	mov	b,r4
   0F15 12s00r00           3310 	lcall	_cTaskRemoveFromEventList
   0F18 AA 82              3311 	mov	r2,dpl
                           3312 ;     genCmpEq
   0F1A BA 00 03           3313 	cjne	r2,#0x00,00123$
   0F1D 02s0Fr27           3314 	ljmp	00106$
   0F20                    3315 00123$:
                           3316 ;../../Source/queue.c:589: cYieldRequired = ( signed portCHAR ) pdTRUE;
                           3317 ;     genAssign
   0F20 E5*00              3318 	mov	a,_bp
   0F22 24 04              3319 	add	a,#0x04
   0F24 F8                 3320 	mov	r0,a
   0F25 76 01              3321 	mov	@r0,#0x01
   0F27                    3322 00106$:
                           3323 ;../../Source/queue.c:594: taskEXIT_CRITICAL();
                           3324 ;     genInline
   0F27 D0 E0              3325 	 pop ACC 
                           3326 ;     genAnd
   0F29 53 E0 80           3327 	anl	_ACC,#0x80
                           3328 ;     genOr
   0F2C E5 E0              3329 	mov	a,_ACC
   0F2E 42 A8              3330 	orl	_IE,a
                           3331 ;     genInline
   0F30 D0 E0              3332 	 pop ACC 
                           3333 ;../../Source/queue.c:597: taskENTER_CRITICAL();
                           3334 ;     genInline
   0F32 C0 E0 C0 A8        3335 	 push ACC push IE 
                           3336 ;     genAssign
   0F36 C2 AF              3337 	clr	_EA
                           3338 ;../../Source/queue.c:599: --( pxQueue->cRxLock );
                           3339 ;     genPlus
   0F38 E5*00              3340 	mov	a,_bp
   0F3A 24 01              3341 	add	a,#0x01
   0F3C F8                 3342 	mov	r0,a
   0F3D 74 3B              3343 	mov	a,#0x3B
   0F3F 26                 3344 	add	a,@r0
   0F40 FA                 3345 	mov	r2,a
   0F41 74 00              3346 	mov	a,#0x00
   0F43 08                 3347 	inc	r0
   0F44 36                 3348 	addc	a,@r0
   0F45 FB                 3349 	mov	r3,a
   0F46 08                 3350 	inc	r0
   0F47 86 04              3351 	mov	ar4,@r0
                           3352 ;     genPointerGet
                           3353 ;     genGenPointerGet
   0F49 8A 82              3354 	mov	dpl,r2
   0F4B 8B 83              3355 	mov	dph,r3
   0F4D 8C F0              3356 	mov	b,r4
   0F4F 12s00r00           3357 	lcall	__gptrget
   0F52 FD                 3358 	mov	r5,a
                           3359 ;     genMinus
                           3360 ;     genMinusDec
   0F53 1D                 3361 	dec	r5
                           3362 ;     genPointerSet
                           3363 ;     genGenPointerSet
   0F54 8A 82              3364 	mov	dpl,r2
   0F56 8B 83              3365 	mov	dph,r3
   0F58 8C F0              3366 	mov	b,r4
   0F5A ED                 3367 	mov	a,r5
   0F5B 12s00r00           3368 	lcall	__gptrput
                           3369 ;../../Source/queue.c:601: if( pxQueue->cRxLock > queueUNLOCKED )
                           3370 ;     genCmpGt
                           3371 ;     genCmp
   0F5E C3                 3372 	clr	c
   0F5F 74 FF              3373 	mov	a,#0xFF
   0F61 64 80              3374 	xrl	a,#0x80
   0F63 8D F0              3375 	mov	b,r5
   0F65 63 F0 80           3376 	xrl	b,#0x80
   0F68 95 F0              3377 	subb	a,b
                           3378 ;     genIfxJump
   0F6A 40 03              3379 	jc	00124$
   0F6C 02s0FrBB           3380 	ljmp	00112$
   0F6F                    3381 00124$:
                           3382 ;../../Source/queue.c:603: pxQueue->cRxLock = queueUNLOCKED;
                           3383 ;     genPointerSet
                           3384 ;     genGenPointerSet
   0F6F 8A 82              3385 	mov	dpl,r2
   0F71 8B 83              3386 	mov	dph,r3
   0F73 8C F0              3387 	mov	b,r4
   0F75 74 FF              3388 	mov	a,#0xFF
   0F77 12s00r00           3389 	lcall	__gptrput
                           3390 ;../../Source/queue.c:605: if( !listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) )
                           3391 ;     genPlus
   0F7A E5*00              3392 	mov	a,_bp
   0F7C 24 01              3393 	add	a,#0x01
   0F7E F8                 3394 	mov	r0,a
   0F7F 74 0C              3395 	mov	a,#0x0C
   0F81 26                 3396 	add	a,@r0
   0F82 FA                 3397 	mov	r2,a
   0F83 74 00              3398 	mov	a,#0x00
   0F85 08                 3399 	inc	r0
   0F86 36                 3400 	addc	a,@r0
   0F87 FB                 3401 	mov	r3,a
   0F88 08                 3402 	inc	r0
   0F89 86 04              3403 	mov	ar4,@r0
                           3404 ;     genPointerGet
                           3405 ;     genGenPointerGet
   0F8B 8A 82              3406 	mov	dpl,r2
   0F8D 8B 83              3407 	mov	dph,r3
   0F8F 8C F0              3408 	mov	b,r4
   0F91 12s00r00           3409 	lcall	__gptrget
   0F94 FD                 3410 	mov	r5,a
   0F95 A3                 3411 	inc	dptr
   0F96 12s00r00           3412 	lcall	__gptrget
   0F99 FE                 3413 	mov	r6,a
                           3414 ;     genCmpEq
   0F9A BD 00 06           3415 	cjne	r5,#0x00,00125$
   0F9D BE 00 03           3416 	cjne	r6,#0x00,00125$
   0FA0 02s0FrBB           3417 	ljmp	00112$
   0FA3                    3418 00125$:
                           3419 ;../../Source/queue.c:607: if( cTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != ( signed portCHAR ) pdFALSE )
                           3420 ;     genCall
   0FA3 8A 82              3421 	mov	dpl,r2
   0FA5 8B 83              3422 	mov	dph,r3
   0FA7 8C F0              3423 	mov	b,r4
   0FA9 12s00r00           3424 	lcall	_cTaskRemoveFromEventList
   0FAC AA 82              3425 	mov	r2,dpl
                           3426 ;     genCmpEq
   0FAE BA 00 03           3427 	cjne	r2,#0x00,00126$
   0FB1 02s0FrBB           3428 	ljmp	00112$
   0FB4                    3429 00126$:
                           3430 ;../../Source/queue.c:609: cYieldRequired = ( signed portCHAR ) pdTRUE;
                           3431 ;     genAssign
   0FB4 E5*00              3432 	mov	a,_bp
   0FB6 24 04              3433 	add	a,#0x04
   0FB8 F8                 3434 	mov	r0,a
   0FB9 76 01              3435 	mov	@r0,#0x01
   0FBB                    3436 00112$:
                           3437 ;../../Source/queue.c:614: taskEXIT_CRITICAL();
                           3438 ;     genInline
   0FBB D0 E0              3439 	 pop ACC 
                           3440 ;     genAnd
   0FBD 53 E0 80           3441 	anl	_ACC,#0x80
                           3442 ;     genOr
   0FC0 E5 E0              3443 	mov	a,_ACC
   0FC2 42 A8              3444 	orl	_IE,a
                           3445 ;     genInline
   0FC4 D0 E0              3446 	 pop ACC 
                           3447 ;../../Source/queue.c:616: return cYieldRequired;
                           3448 ;     genRet
   0FC6 E5*00              3449 	mov	a,_bp
   0FC8 24 04              3450 	add	a,#0x04
   0FCA F8                 3451 	mov	r0,a
   0FCB 86 82              3452 	mov	dpl,@r0
   0FCD                    3453 00113$:
   0FCD 85*00 81           3454 	mov	sp,_bp
   0FD0 D0*00              3455 	pop	_bp
   0FD2 22                 3456 	ret
                           3457 ;------------------------------------------------------------
                           3458 ;Allocation info for local variables in function 'prvIsQueueEmpty'
                           3459 ;------------------------------------------------------------
                           3460 ;pxQueue                   Allocated to registers r2 r3 r4 
                           3461 ;cReturn                   Allocated to registers r2 
                           3462 ;------------------------------------------------------------
                           3463 ;../../Source/queue.c:620: static signed portCHAR prvIsQueueEmpty( const xQueueHandle pxQueue )
                           3464 ;	-----------------------------------------
                           3465 ;	 function prvIsQueueEmpty
                           3466 ;	-----------------------------------------
   0FD3                    3467 _prvIsQueueEmpty:
   0FD3 C0*00              3468 	push	_bp
   0FD5 85 81*00           3469 	mov	_bp,sp
                           3470 ;     genReceive
   0FD8 AA 82              3471 	mov	r2,dpl
   0FDA AB 83              3472 	mov	r3,dph
   0FDC AC F0              3473 	mov	r4,b
                           3474 ;../../Source/queue.c:624: taskENTER_CRITICAL();
                           3475 ;     genInline
   0FDE C0 E0 C0 A8        3476 	 push ACC push IE 
                           3477 ;     genAssign
   0FE2 C2 AF              3478 	clr	_EA
                           3479 ;../../Source/queue.c:625: cReturn = ( pxQueue->ucMessagesWaiting == ( unsigned portCHAR ) 0 );
                           3480 ;     genPlus
   0FE4 74 38              3481 	mov	a,#0x38
   0FE6 25 02              3482 	add	a,ar2
   0FE8 FA                 3483 	mov	r2,a
   0FE9 74 00              3484 	mov	a,#0x00
   0FEB 35 03              3485 	addc	a,ar3
   0FED FB                 3486 	mov	r3,a
                           3487 ;     genPointerGet
                           3488 ;     genGenPointerGet
   0FEE 8A 82              3489 	mov	dpl,r2
   0FF0 8B 83              3490 	mov	dph,r3
   0FF2 8C F0              3491 	mov	b,r4
   0FF4 12s00r00           3492 	lcall	__gptrget
   0FF7 FA                 3493 	mov	r2,a
                           3494 ;     genCmpEq
   0FF8 BA 00 04           3495 	cjne	r2,#0x00,00103$
   0FFB 74 01              3496 	mov	a,#0x01
   0FFD 80 01              3497 	sjmp	00104$
   0FFF                    3498 00103$:
   0FFF E4                 3499 	clr	a
   1000                    3500 00104$:
   1000 FA                 3501 	mov	r2,a
                           3502 ;../../Source/queue.c:626: taskEXIT_CRITICAL();
                           3503 ;     genInline
   1001 D0 E0              3504 	 pop ACC 
                           3505 ;     genAnd
   1003 53 E0 80           3506 	anl	_ACC,#0x80
                           3507 ;     genOr
   1006 E5 E0              3508 	mov	a,_ACC
   1008 42 A8              3509 	orl	_IE,a
                           3510 ;     genInline
   100A D0 E0              3511 	 pop ACC 
                           3512 ;../../Source/queue.c:628: return cReturn;
                           3513 ;     genRet
   100C 8A 82              3514 	mov	dpl,r2
   100E                    3515 00101$:
   100E 85*00 81           3516 	mov	sp,_bp
   1011 D0*00              3517 	pop	_bp
   1013 22                 3518 	ret
                           3519 ;------------------------------------------------------------
                           3520 ;Allocation info for local variables in function 'prvIsQueueFull'
                           3521 ;------------------------------------------------------------
                           3522 ;pxQueue                   Allocated to registers r2 r3 r4 
                           3523 ;cReturn                   Allocated to registers r5 
                           3524 ;------------------------------------------------------------
                           3525 ;../../Source/queue.c:632: static signed portCHAR prvIsQueueFull( const xQueueHandle pxQueue )
                           3526 ;	-----------------------------------------
                           3527 ;	 function prvIsQueueFull
                           3528 ;	-----------------------------------------
   1014                    3529 _prvIsQueueFull:
   1014 C0*00              3530 	push	_bp
   1016 85 81*00           3531 	mov	_bp,sp
                           3532 ;     genReceive
   1019 AA 82              3533 	mov	r2,dpl
   101B AB 83              3534 	mov	r3,dph
   101D AC F0              3535 	mov	r4,b
                           3536 ;../../Source/queue.c:636: taskENTER_CRITICAL();
                           3537 ;     genInline
   101F C0 E0 C0 A8        3538 	 push ACC push IE 
                           3539 ;     genAssign
   1023 C2 AF              3540 	clr	_EA
                           3541 ;../../Source/queue.c:637: cReturn = ( pxQueue->ucMessagesWaiting == pxQueue->ucLength );
                           3542 ;     genPlus
   1025 74 38              3543 	mov	a,#0x38
   1027 25 02              3544 	add	a,ar2
   1029 FD                 3545 	mov	r5,a
   102A 74 00              3546 	mov	a,#0x00
   102C 35 03              3547 	addc	a,ar3
   102E FE                 3548 	mov	r6,a
   102F 8C 07              3549 	mov	ar7,r4
                           3550 ;     genPointerGet
                           3551 ;     genGenPointerGet
   1031 8D 82              3552 	mov	dpl,r5
   1033 8E 83              3553 	mov	dph,r6
   1035 8F F0              3554 	mov	b,r7
   1037 12s00r00           3555 	lcall	__gptrget
   103A FD                 3556 	mov	r5,a
                           3557 ;     genPlus
   103B 74 39              3558 	mov	a,#0x39
   103D 25 02              3559 	add	a,ar2
   103F FA                 3560 	mov	r2,a
   1040 74 00              3561 	mov	a,#0x00
   1042 35 03              3562 	addc	a,ar3
   1044 FB                 3563 	mov	r3,a
                           3564 ;     genPointerGet
                           3565 ;     genGenPointerGet
   1045 8A 82              3566 	mov	dpl,r2
   1047 8B 83              3567 	mov	dph,r3
   1049 8C F0              3568 	mov	b,r4
   104B 12s00r00           3569 	lcall	__gptrget
   104E FA                 3570 	mov	r2,a
                           3571 ;     genCmpEq
   104F ED                 3572 	mov	a,r5
   1050 B5 02 04           3573 	cjne	a,ar2,00103$
   1053 74 01              3574 	mov	a,#0x01
   1055 80 01              3575 	sjmp	00104$
   1057                    3576 00103$:
   1057 E4                 3577 	clr	a
   1058                    3578 00104$:
   1058 FD                 3579 	mov	r5,a
                           3580 ;     genAssign
                           3581 ;../../Source/queue.c:638: taskEXIT_CRITICAL();
                           3582 ;     genInline
   1059 D0 E0              3583 	 pop ACC 
                           3584 ;     genAnd
   105B 53 E0 80           3585 	anl	_ACC,#0x80
                           3586 ;     genOr
   105E E5 E0              3587 	mov	a,_ACC
   1060 42 A8              3588 	orl	_IE,a
                           3589 ;     genInline
   1062 D0 E0              3590 	 pop ACC 
                           3591 ;../../Source/queue.c:640: return cReturn;
                           3592 ;     genRet
   1064 8D 82              3593 	mov	dpl,r5
   1066                    3594 00101$:
   1066 85*00 81           3595 	mov	sp,_bp
   1069 D0*00              3596 	pop	_bp
   106B 22                 3597 	ret
                           3598 	.area CSEG    (CODE)
                           3599 	.area XINIT   (CODE)
