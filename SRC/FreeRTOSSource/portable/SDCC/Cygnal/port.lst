                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.4.8 #964 (Feb 23 2005)
                              4 ; This file generated Wed Mar 02 13:24:16 2005
                              5 ;--------------------------------------------------------
                              6 	.module ______Source_portable_SDCC_cygnal_port
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _TF2
                             13 	.globl _EXF2
                             14 	.globl _RCLK
                             15 	.globl _TCLK
                             16 	.globl _EXEN2
                             17 	.globl _TR2
                             18 	.globl _C_T2
                             19 	.globl _CP_RL2
                             20 	.globl _T2CON_7
                             21 	.globl _T2CON_6
                             22 	.globl _T2CON_5
                             23 	.globl _T2CON_4
                             24 	.globl _T2CON_3
                             25 	.globl _T2CON_2
                             26 	.globl _T2CON_1
                             27 	.globl _T2CON_0
                             28 	.globl _ET2
                             29 	.globl _CY
                             30 	.globl _AC
                             31 	.globl _F0
                             32 	.globl _RS1
                             33 	.globl _RS0
                             34 	.globl _OV
                             35 	.globl _F1
                             36 	.globl _P
                             37 	.globl _PS
                             38 	.globl _PT1
                             39 	.globl _PX1
                             40 	.globl _PT0
                             41 	.globl _PX0
                             42 	.globl _RD
                             43 	.globl _WR
                             44 	.globl _T1
                             45 	.globl _T0
                             46 	.globl _INT1
                             47 	.globl _INT0
                             48 	.globl _TXD
                             49 	.globl _RXD
                             50 	.globl _P3_7
                             51 	.globl _P3_6
                             52 	.globl _P3_5
                             53 	.globl _P3_4
                             54 	.globl _P3_3
                             55 	.globl _P3_2
                             56 	.globl _P3_1
                             57 	.globl _P3_0
                             58 	.globl _EA
                             59 	.globl _ES
                             60 	.globl _ET1
                             61 	.globl _EX1
                             62 	.globl _ET0
                             63 	.globl _EX0
                             64 	.globl _P2_7
                             65 	.globl _P2_6
                             66 	.globl _P2_5
                             67 	.globl _P2_4
                             68 	.globl _P2_3
                             69 	.globl _P2_2
                             70 	.globl _P2_1
                             71 	.globl _P2_0
                             72 	.globl _SM0
                             73 	.globl _SM1
                             74 	.globl _SM2
                             75 	.globl _REN
                             76 	.globl _TB8
                             77 	.globl _RB8
                             78 	.globl _TI
                             79 	.globl _RI
                             80 	.globl _P1_7
                             81 	.globl _P1_6
                             82 	.globl _P1_5
                             83 	.globl _P1_4
                             84 	.globl _P1_3
                             85 	.globl _P1_2
                             86 	.globl _P1_1
                             87 	.globl _P1_0
                             88 	.globl _TF1
                             89 	.globl _TR1
                             90 	.globl _TF0
                             91 	.globl _TR0
                             92 	.globl _IE1
                             93 	.globl _IT1
                             94 	.globl _IE0
                             95 	.globl _IT0
                             96 	.globl _P0_7
                             97 	.globl _P0_6
                             98 	.globl _P0_5
                             99 	.globl _P0_4
                            100 	.globl _P0_3
                            101 	.globl _P0_2
                            102 	.globl _P0_1
                            103 	.globl _P0_0
                            104 	.globl _TH2
                            105 	.globl _TL2
                            106 	.globl _RCAP2H
                            107 	.globl _RCAP2L
                            108 	.globl _T2CON
                            109 	.globl _B
                            110 	.globl _ACC
                            111 	.globl _PSW
                            112 	.globl _IP
                            113 	.globl _P3
                            114 	.globl _IE
                            115 	.globl _P2
                            116 	.globl _SBUF
                            117 	.globl _SCON
                            118 	.globl _P1
                            119 	.globl _TH1
                            120 	.globl _TH0
                            121 	.globl _TL1
                            122 	.globl _TL0
                            123 	.globl _TMOD
                            124 	.globl _TCON
                            125 	.globl _PCON
                            126 	.globl _DPH
                            127 	.globl _DPL
                            128 	.globl _SP
                            129 	.globl _P0
                            130 	.globl _pxPortInitialiseStack
                            131 	.globl _sPortStartScheduler
                            132 	.globl _vPortEndScheduler
                            133 	.globl _vPortYield
                            134 	.globl _vTimer2ISR
                            135 ;--------------------------------------------------------
                            136 ; special function registers
                            137 ;--------------------------------------------------------
                            138 	.area RSEG    (DATA)
                    0080    139 G$P0$0$0 == 0x0080
                    0080    140 _P0	=	0x0080
                    0081    141 G$SP$0$0 == 0x0081
                    0081    142 _SP	=	0x0081
                    0082    143 G$DPL$0$0 == 0x0082
                    0082    144 _DPL	=	0x0082
                    0083    145 G$DPH$0$0 == 0x0083
                    0083    146 _DPH	=	0x0083
                    0087    147 G$PCON$0$0 == 0x0087
                    0087    148 _PCON	=	0x0087
                    0088    149 G$TCON$0$0 == 0x0088
                    0088    150 _TCON	=	0x0088
                    0089    151 G$TMOD$0$0 == 0x0089
                    0089    152 _TMOD	=	0x0089
                    008A    153 G$TL0$0$0 == 0x008a
                    008A    154 _TL0	=	0x008a
                    008B    155 G$TL1$0$0 == 0x008b
                    008B    156 _TL1	=	0x008b
                    008C    157 G$TH0$0$0 == 0x008c
                    008C    158 _TH0	=	0x008c
                    008D    159 G$TH1$0$0 == 0x008d
                    008D    160 _TH1	=	0x008d
                    0090    161 G$P1$0$0 == 0x0090
                    0090    162 _P1	=	0x0090
                    0098    163 G$SCON$0$0 == 0x0098
                    0098    164 _SCON	=	0x0098
                    0099    165 G$SBUF$0$0 == 0x0099
                    0099    166 _SBUF	=	0x0099
                    00A0    167 G$P2$0$0 == 0x00a0
                    00A0    168 _P2	=	0x00a0
                    00A8    169 G$IE$0$0 == 0x00a8
                    00A8    170 _IE	=	0x00a8
                    00B0    171 G$P3$0$0 == 0x00b0
                    00B0    172 _P3	=	0x00b0
                    00B8    173 G$IP$0$0 == 0x00b8
                    00B8    174 _IP	=	0x00b8
                    00D0    175 G$PSW$0$0 == 0x00d0
                    00D0    176 _PSW	=	0x00d0
                    00E0    177 G$ACC$0$0 == 0x00e0
                    00E0    178 _ACC	=	0x00e0
                    00F0    179 G$B$0$0 == 0x00f0
                    00F0    180 _B	=	0x00f0
                    00C8    181 G$T2CON$0$0 == 0x00c8
                    00C8    182 _T2CON	=	0x00c8
                    00CA    183 G$RCAP2L$0$0 == 0x00ca
                    00CA    184 _RCAP2L	=	0x00ca
                    00CB    185 G$RCAP2H$0$0 == 0x00cb
                    00CB    186 _RCAP2H	=	0x00cb
                    00CC    187 G$TL2$0$0 == 0x00cc
                    00CC    188 _TL2	=	0x00cc
                    00CD    189 G$TH2$0$0 == 0x00cd
                    00CD    190 _TH2	=	0x00cd
                            191 ;--------------------------------------------------------
                            192 ; special function bits 
                            193 ;--------------------------------------------------------
                            194 	.area RSEG    (DATA)
                    0080    195 G$P0_0$0$0 == 0x0080
                    0080    196 _P0_0	=	0x0080
                    0081    197 G$P0_1$0$0 == 0x0081
                    0081    198 _P0_1	=	0x0081
                    0082    199 G$P0_2$0$0 == 0x0082
                    0082    200 _P0_2	=	0x0082
                    0083    201 G$P0_3$0$0 == 0x0083
                    0083    202 _P0_3	=	0x0083
                    0084    203 G$P0_4$0$0 == 0x0084
                    0084    204 _P0_4	=	0x0084
                    0085    205 G$P0_5$0$0 == 0x0085
                    0085    206 _P0_5	=	0x0085
                    0086    207 G$P0_6$0$0 == 0x0086
                    0086    208 _P0_6	=	0x0086
                    0087    209 G$P0_7$0$0 == 0x0087
                    0087    210 _P0_7	=	0x0087
                    0088    211 G$IT0$0$0 == 0x0088
                    0088    212 _IT0	=	0x0088
                    0089    213 G$IE0$0$0 == 0x0089
                    0089    214 _IE0	=	0x0089
                    008A    215 G$IT1$0$0 == 0x008a
                    008A    216 _IT1	=	0x008a
                    008B    217 G$IE1$0$0 == 0x008b
                    008B    218 _IE1	=	0x008b
                    008C    219 G$TR0$0$0 == 0x008c
                    008C    220 _TR0	=	0x008c
                    008D    221 G$TF0$0$0 == 0x008d
                    008D    222 _TF0	=	0x008d
                    008E    223 G$TR1$0$0 == 0x008e
                    008E    224 _TR1	=	0x008e
                    008F    225 G$TF1$0$0 == 0x008f
                    008F    226 _TF1	=	0x008f
                    0090    227 G$P1_0$0$0 == 0x0090
                    0090    228 _P1_0	=	0x0090
                    0091    229 G$P1_1$0$0 == 0x0091
                    0091    230 _P1_1	=	0x0091
                    0092    231 G$P1_2$0$0 == 0x0092
                    0092    232 _P1_2	=	0x0092
                    0093    233 G$P1_3$0$0 == 0x0093
                    0093    234 _P1_3	=	0x0093
                    0094    235 G$P1_4$0$0 == 0x0094
                    0094    236 _P1_4	=	0x0094
                    0095    237 G$P1_5$0$0 == 0x0095
                    0095    238 _P1_5	=	0x0095
                    0096    239 G$P1_6$0$0 == 0x0096
                    0096    240 _P1_6	=	0x0096
                    0097    241 G$P1_7$0$0 == 0x0097
                    0097    242 _P1_7	=	0x0097
                    0098    243 G$RI$0$0 == 0x0098
                    0098    244 _RI	=	0x0098
                    0099    245 G$TI$0$0 == 0x0099
                    0099    246 _TI	=	0x0099
                    009A    247 G$RB8$0$0 == 0x009a
                    009A    248 _RB8	=	0x009a
                    009B    249 G$TB8$0$0 == 0x009b
                    009B    250 _TB8	=	0x009b
                    009C    251 G$REN$0$0 == 0x009c
                    009C    252 _REN	=	0x009c
                    009D    253 G$SM2$0$0 == 0x009d
                    009D    254 _SM2	=	0x009d
                    009E    255 G$SM1$0$0 == 0x009e
                    009E    256 _SM1	=	0x009e
                    009F    257 G$SM0$0$0 == 0x009f
                    009F    258 _SM0	=	0x009f
                    00A0    259 G$P2_0$0$0 == 0x00a0
                    00A0    260 _P2_0	=	0x00a0
                    00A1    261 G$P2_1$0$0 == 0x00a1
                    00A1    262 _P2_1	=	0x00a1
                    00A2    263 G$P2_2$0$0 == 0x00a2
                    00A2    264 _P2_2	=	0x00a2
                    00A3    265 G$P2_3$0$0 == 0x00a3
                    00A3    266 _P2_3	=	0x00a3
                    00A4    267 G$P2_4$0$0 == 0x00a4
                    00A4    268 _P2_4	=	0x00a4
                    00A5    269 G$P2_5$0$0 == 0x00a5
                    00A5    270 _P2_5	=	0x00a5
                    00A6    271 G$P2_6$0$0 == 0x00a6
                    00A6    272 _P2_6	=	0x00a6
                    00A7    273 G$P2_7$0$0 == 0x00a7
                    00A7    274 _P2_7	=	0x00a7
                    00A8    275 G$EX0$0$0 == 0x00a8
                    00A8    276 _EX0	=	0x00a8
                    00A9    277 G$ET0$0$0 == 0x00a9
                    00A9    278 _ET0	=	0x00a9
                    00AA    279 G$EX1$0$0 == 0x00aa
                    00AA    280 _EX1	=	0x00aa
                    00AB    281 G$ET1$0$0 == 0x00ab
                    00AB    282 _ET1	=	0x00ab
                    00AC    283 G$ES$0$0 == 0x00ac
                    00AC    284 _ES	=	0x00ac
                    00AF    285 G$EA$0$0 == 0x00af
                    00AF    286 _EA	=	0x00af
                    00B0    287 G$P3_0$0$0 == 0x00b0
                    00B0    288 _P3_0	=	0x00b0
                    00B1    289 G$P3_1$0$0 == 0x00b1
                    00B1    290 _P3_1	=	0x00b1
                    00B2    291 G$P3_2$0$0 == 0x00b2
                    00B2    292 _P3_2	=	0x00b2
                    00B3    293 G$P3_3$0$0 == 0x00b3
                    00B3    294 _P3_3	=	0x00b3
                    00B4    295 G$P3_4$0$0 == 0x00b4
                    00B4    296 _P3_4	=	0x00b4
                    00B5    297 G$P3_5$0$0 == 0x00b5
                    00B5    298 _P3_5	=	0x00b5
                    00B6    299 G$P3_6$0$0 == 0x00b6
                    00B6    300 _P3_6	=	0x00b6
                    00B7    301 G$P3_7$0$0 == 0x00b7
                    00B7    302 _P3_7	=	0x00b7
                    00B0    303 G$RXD$0$0 == 0x00b0
                    00B0    304 _RXD	=	0x00b0
                    00B1    305 G$TXD$0$0 == 0x00b1
                    00B1    306 _TXD	=	0x00b1
                    00B2    307 G$INT0$0$0 == 0x00b2
                    00B2    308 _INT0	=	0x00b2
                    00B3    309 G$INT1$0$0 == 0x00b3
                    00B3    310 _INT1	=	0x00b3
                    00B4    311 G$T0$0$0 == 0x00b4
                    00B4    312 _T0	=	0x00b4
                    00B5    313 G$T1$0$0 == 0x00b5
                    00B5    314 _T1	=	0x00b5
                    00B6    315 G$WR$0$0 == 0x00b6
                    00B6    316 _WR	=	0x00b6
                    00B7    317 G$RD$0$0 == 0x00b7
                    00B7    318 _RD	=	0x00b7
                    00B8    319 G$PX0$0$0 == 0x00b8
                    00B8    320 _PX0	=	0x00b8
                    00B9    321 G$PT0$0$0 == 0x00b9
                    00B9    322 _PT0	=	0x00b9
                    00BA    323 G$PX1$0$0 == 0x00ba
                    00BA    324 _PX1	=	0x00ba
                    00BB    325 G$PT1$0$0 == 0x00bb
                    00BB    326 _PT1	=	0x00bb
                    00BC    327 G$PS$0$0 == 0x00bc
                    00BC    328 _PS	=	0x00bc
                    00D0    329 G$P$0$0 == 0x00d0
                    00D0    330 _P	=	0x00d0
                    00D1    331 G$F1$0$0 == 0x00d1
                    00D1    332 _F1	=	0x00d1
                    00D2    333 G$OV$0$0 == 0x00d2
                    00D2    334 _OV	=	0x00d2
                    00D3    335 G$RS0$0$0 == 0x00d3
                    00D3    336 _RS0	=	0x00d3
                    00D4    337 G$RS1$0$0 == 0x00d4
                    00D4    338 _RS1	=	0x00d4
                    00D5    339 G$F0$0$0 == 0x00d5
                    00D5    340 _F0	=	0x00d5
                    00D6    341 G$AC$0$0 == 0x00d6
                    00D6    342 _AC	=	0x00d6
                    00D7    343 G$CY$0$0 == 0x00d7
                    00D7    344 _CY	=	0x00d7
                    00AD    345 G$ET2$0$0 == 0x00ad
                    00AD    346 _ET2	=	0x00ad
                    00C8    347 G$T2CON_0$0$0 == 0x00c8
                    00C8    348 _T2CON_0	=	0x00c8
                    00C9    349 G$T2CON_1$0$0 == 0x00c9
                    00C9    350 _T2CON_1	=	0x00c9
                    00CA    351 G$T2CON_2$0$0 == 0x00ca
                    00CA    352 _T2CON_2	=	0x00ca
                    00CB    353 G$T2CON_3$0$0 == 0x00cb
                    00CB    354 _T2CON_3	=	0x00cb
                    00CC    355 G$T2CON_4$0$0 == 0x00cc
                    00CC    356 _T2CON_4	=	0x00cc
                    00CD    357 G$T2CON_5$0$0 == 0x00cd
                    00CD    358 _T2CON_5	=	0x00cd
                    00CE    359 G$T2CON_6$0$0 == 0x00ce
                    00CE    360 _T2CON_6	=	0x00ce
                    00CF    361 G$T2CON_7$0$0 == 0x00cf
                    00CF    362 _T2CON_7	=	0x00cf
                    00C8    363 G$CP_RL2$0$0 == 0x00c8
                    00C8    364 _CP_RL2	=	0x00c8
                    00C9    365 G$C_T2$0$0 == 0x00c9
                    00C9    366 _C_T2	=	0x00c9
                    00CA    367 G$TR2$0$0 == 0x00ca
                    00CA    368 _TR2	=	0x00ca
                    00CB    369 G$EXEN2$0$0 == 0x00cb
                    00CB    370 _EXEN2	=	0x00cb
                    00CC    371 G$TCLK$0$0 == 0x00cc
                    00CC    372 _TCLK	=	0x00cc
                    00CD    373 G$RCLK$0$0 == 0x00cd
                    00CD    374 _RCLK	=	0x00cd
                    00CE    375 G$EXF2$0$0 == 0x00ce
                    00CE    376 _EXF2	=	0x00ce
                    00CF    377 G$TF2$0$0 == 0x00cf
                    00CF    378 _TF2	=	0x00cf
                            379 ;--------------------------------------------------------
                            380 ; overlayable register banks 
                            381 ;--------------------------------------------------------
                            382 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     383 	.ds 8
                            384 ;--------------------------------------------------------
                            385 ; internal ram data
                            386 ;--------------------------------------------------------
                            387 	.area DSEG    (DATA)
                    0000    388 F______Source_portable_SDCC_cygnal_port$ucStackBytes$0$0==.
   0000                     389 _ucStackBytes:
   0000                     390 	.ds 1
                    0001    391 F______Source_portable_SDCC_cygnal_port$pxXRAMStack$0$0==.
   0001                     392 _pxXRAMStack:
   0001                     393 	.ds 2
                    0003    394 F______Source_portable_SDCC_cygnal_port$pxRAMStack$0$0==.
   0003                     395 _pxRAMStack:
   0003                     396 	.ds 1
                            397 ;--------------------------------------------------------
                            398 ; overlayable items in internal ram 
                            399 ;--------------------------------------------------------
                            400 	.area OSEG    (OVR,DATA)
                            401 ;--------------------------------------------------------
                            402 ; indirectly addressable internal ram data
                            403 ;--------------------------------------------------------
                            404 	.area ISEG    (DATA)
                            405 ;--------------------------------------------------------
                            406 ; bit data
                            407 ;--------------------------------------------------------
                            408 	.area BSEG    (BIT)
                            409 ;--------------------------------------------------------
                            410 ; paged external ram data
                            411 ;--------------------------------------------------------
                            412 	.area PSEG    (PAG,XDATA)
                            413 ;--------------------------------------------------------
                            414 ; external ram data
                            415 ;--------------------------------------------------------
                            416 	.area XSEG    (XDATA)
                            417 ;--------------------------------------------------------
                            418 ; external initialized ram data
                            419 ;--------------------------------------------------------
                            420 	.area XISEG   (XDATA)
                            421 	.area CSEG    (CODE)
                            422 	.area GSINIT0 (CODE)
                            423 	.area GSINIT1 (CODE)
                            424 	.area GSINIT2 (CODE)
                            425 	.area GSINIT3 (CODE)
                            426 	.area GSINIT4 (CODE)
                            427 	.area GSINIT5 (CODE)
                            428 ;--------------------------------------------------------
                            429 ; global & static initialisations
                            430 ;--------------------------------------------------------
                            431 	.area CSEG    (CODE)
                            432 	.area GSINIT  (CODE)
                            433 	.area GSFINAL (CODE)
                            434 	.area GSINIT  (CODE)
                            435 ;--------------------------------------------------------
                            436 ; Home
                            437 ;--------------------------------------------------------
                            438 	.area HOME    (CODE)
                            439 	.area CSEG    (CODE)
                            440 ;--------------------------------------------------------
                            441 ; code
                            442 ;--------------------------------------------------------
                            443 	.area CSEG    (CODE)
                            444 ;------------------------------------------------------------
                            445 ;Allocation info for local variables in function 'pxPortInitialiseStack'
                            446 ;------------------------------------------------------------
                            447 ;pxCode                    Allocated to stack - offset -4
                            448 ;pvParameters              Allocated to stack - offset -7
                            449 ;pxTopOfStack              Allocated to stack - offset 1
                            450 ;ulAddress                 Allocated to registers r5 r6 r7 r2 
                            451 ;pxStartOfStack            Allocated to stack - offset 4
                            452 ;------------------------------------------------------------
                    0000    453 	G$pxPortInitialiseStack$0$0 ==.
                    0000    454 	C$port.c$222$0$0 ==.
                            455 ;../../Source/portable/SDCC/cygnal/port.c:222: portSTACK_TYPE *pxPortInitialiseStack( portSTACK_TYPE *pxTopOfStack, pdTASK_CODE pxCode, void *pvParameters )
                            456 ;	-----------------------------------------
                            457 ;	 function pxPortInitialiseStack
                            458 ;	-----------------------------------------
   0000                     459 _pxPortInitialiseStack:
                    0002    460 	ar2 = 0x02
                    0003    461 	ar3 = 0x03
                    0004    462 	ar4 = 0x04
                    0005    463 	ar5 = 0x05
                    0006    464 	ar6 = 0x06
                    0007    465 	ar7 = 0x07
                    0000    466 	ar0 = 0x00
                    0001    467 	ar1 = 0x01
   0000 C0*00               468 	push	_bp
   0002 85 81*00            469 	mov	_bp,sp
                            470 ;     genReceive
   0005 C0 82               471 	push	dpl
   0007 C0 83               472 	push	dph
   0009 C0 F0               473 	push	b
   000B 05 81               474 	inc	sp
   000D 05 81               475 	inc	sp
   000F 05 81               476 	inc	sp
                    0011    477 	C$port.c$228$1$1 ==.
                            478 ;../../Source/portable/SDCC/cygnal/port.c:228: pxStartOfStack = pxTopOfStack;
                            479 ;     genAssign
   0011 E5*00               480 	mov	a,_bp
   0013 24 01               481 	add	a,#0x01
   0015 F8                  482 	mov	r0,a
   0016 E5*00               483 	mov	a,_bp
   0018 24 04               484 	add	a,#0x04
   001A F9                  485 	mov	r1,a
   001B E6                  486 	mov	a,@r0
   001C F7                  487 	mov	@r1,a
   001D 08                  488 	inc	r0
   001E 09                  489 	inc	r1
   001F E6                  490 	mov	a,@r0
   0020 F7                  491 	mov	@r1,a
   0021 08                  492 	inc	r0
   0022 09                  493 	inc	r1
   0023 E6                  494 	mov	a,@r0
   0024 F7                  495 	mov	@r1,a
                    0025    496 	C$port.c$229$1$1 ==.
                            497 ;../../Source/portable/SDCC/cygnal/port.c:229: pxTopOfStack++;
                            498 ;     genPlus
   0025 E5*00               499 	mov	a,_bp
   0027 24 01               500 	add	a,#0x01
   0029 F8                  501 	mov	r0,a
                            502 ;     genPlusIncr
   002A 74 01               503 	mov	a,#0x01
   002C 26                  504 	add	a,@r0
   002D F6                  505 	mov	@r0,a
   002E 74 00               506 	mov	a,#0x00
   0030 08                  507 	inc	r0
   0031 36                  508 	addc	a,@r0
   0032 F6                  509 	mov	@r0,a
                    0033    510 	C$port.c$245$1$1 ==.
                            511 ;../../Source/portable/SDCC/cygnal/port.c:245: ulAddress = ( unsigned portLONG ) pxCode;
                            512 ;     genCast
   0033 E5*00               513 	mov	a,_bp
   0035 24 FC               514 	add	a,#0xfc
   0037 F8                  515 	mov	r0,a
   0038 86 05               516 	mov	ar5,@r0
   003A 08                  517 	inc	r0
   003B 86 06               518 	mov	ar6,@r0
   003D 7F 00               519 	mov	r7,#0x00
   003F 7A 00               520 	mov	r2,#0x00
                    0041    521 	C$port.c$246$1$1 ==.
                            522 ;../../Source/portable/SDCC/cygnal/port.c:246: *pxTopOfStack = ( portSTACK_TYPE ) ulAddress;
                            523 ;     genCast
   0041 8D 03               524 	mov	ar3,r5
                            525 ;     genPointerSet
                            526 ;     genGenPointerSet
   0043 E5*00               527 	mov	a,_bp
   0045 24 01               528 	add	a,#0x01
   0047 F8                  529 	mov	r0,a
   0048 86 82               530 	mov	dpl,@r0
   004A 08                  531 	inc	r0
   004B 86 83               532 	mov	dph,@r0
   004D 08                  533 	inc	r0
   004E 86 F0               534 	mov	b,@r0
   0050 EB                  535 	mov	a,r3
   0051 12s00r00            536 	lcall	__gptrput
   0054 A3                  537 	inc	dptr
   0055 18                  538 	dec	r0
   0056 18                  539 	dec	r0
   0057 A6 82               540 	mov	@r0,dpl
   0059 08                  541 	inc	r0
   005A A6 83               542 	mov	@r0,dph
                    005C    543 	C$port.c$247$1$1 ==.
                            544 ;../../Source/portable/SDCC/cygnal/port.c:247: ulAddress >>= 8;
                            545 ;     genRightShift
                            546 ;     genRightShiftLiteral
                            547 ;     genrshFour
   005C 8E 05               548 	mov	ar5,r6
   005E 8F 06               549 	mov	ar6,r7
   0060 8A 07               550 	mov	ar7,r2
   0062 7A 00               551 	mov	r2,#0x00
                    0064    552 	C$port.c$248$1$1 ==.
                            553 ;../../Source/portable/SDCC/cygnal/port.c:248: pxTopOfStack++;
                    0064    554 	C$port.c$249$1$1 ==.
                            555 ;../../Source/portable/SDCC/cygnal/port.c:249: *pxTopOfStack = ( portSTACK_TYPE ) ( ulAddress );
                            556 ;     genCast
   0064 8D 03               557 	mov	ar3,r5
                            558 ;     genPointerSet
                            559 ;     genGenPointerSet
   0066 E5*00               560 	mov	a,_bp
   0068 24 01               561 	add	a,#0x01
   006A F8                  562 	mov	r0,a
   006B 86 82               563 	mov	dpl,@r0
   006D 08                  564 	inc	r0
   006E 86 83               565 	mov	dph,@r0
   0070 08                  566 	inc	r0
   0071 86 F0               567 	mov	b,@r0
   0073 EB                  568 	mov	a,r3
   0074 12s00r00            569 	lcall	__gptrput
   0077 A3                  570 	inc	dptr
   0078 18                  571 	dec	r0
   0079 18                  572 	dec	r0
   007A A6 82               573 	mov	@r0,dpl
   007C 08                  574 	inc	r0
   007D A6 83               575 	mov	@r0,dph
                    007F    576 	C$port.c$250$1$1 ==.
                            577 ;../../Source/portable/SDCC/cygnal/port.c:250: pxTopOfStack++;
                    007F    578 	C$port.c$253$1$1 ==.
                            579 ;../../Source/portable/SDCC/cygnal/port.c:253: *pxTopOfStack = 0xaa;	/* acc */
                            580 ;     genPointerSet
                            581 ;     genGenPointerSet
   007F E5*00               582 	mov	a,_bp
   0081 24 01               583 	add	a,#0x01
   0083 F8                  584 	mov	r0,a
   0084 86 82               585 	mov	dpl,@r0
   0086 08                  586 	inc	r0
   0087 86 83               587 	mov	dph,@r0
   0089 08                  588 	inc	r0
   008A 86 F0               589 	mov	b,@r0
   008C 74 AA               590 	mov	a,#0xAA
   008E 12s00r00            591 	lcall	__gptrput
   0091 A3                  592 	inc	dptr
   0092 18                  593 	dec	r0
   0093 18                  594 	dec	r0
   0094 A6 82               595 	mov	@r0,dpl
   0096 08                  596 	inc	r0
   0097 A6 83               597 	mov	@r0,dph
                    0099    598 	C$port.c$254$1$1 ==.
                            599 ;../../Source/portable/SDCC/cygnal/port.c:254: pxTopOfStack++;	
                    0099    600 	C$port.c$257$1$1 ==.
                            601 ;../../Source/portable/SDCC/cygnal/port.c:257: *pxTopOfStack = portGLOBAL_INTERRUPT_BIT;
                            602 ;     genPointerSet
                            603 ;     genGenPointerSet
   0099 E5*00               604 	mov	a,_bp
   009B 24 01               605 	add	a,#0x01
   009D F8                  606 	mov	r0,a
   009E 86 82               607 	mov	dpl,@r0
   00A0 08                  608 	inc	r0
   00A1 86 83               609 	mov	dph,@r0
   00A3 08                  610 	inc	r0
   00A4 86 F0               611 	mov	b,@r0
   00A6 74 80               612 	mov	a,#0x80
   00A8 12s00r00            613 	lcall	__gptrput
   00AB A3                  614 	inc	dptr
   00AC 18                  615 	dec	r0
   00AD 18                  616 	dec	r0
   00AE A6 82               617 	mov	@r0,dpl
   00B0 08                  618 	inc	r0
   00B1 A6 83               619 	mov	@r0,dph
                    00B3    620 	C$port.c$258$1$1 ==.
                            621 ;../../Source/portable/SDCC/cygnal/port.c:258: pxTopOfStack++;
                    00B3    622 	C$port.c$262$1$1 ==.
                            623 ;../../Source/portable/SDCC/cygnal/port.c:262: ulAddress = ( unsigned portLONG ) pvParameters;
                            624 ;     genCast
   00B3 E5*00               625 	mov	a,_bp
   00B5 24 F9               626 	add	a,#0xf9
   00B7 F8                  627 	mov	r0,a
   00B8 86 05               628 	mov	ar5,@r0
   00BA 08                  629 	inc	r0
   00BB 86 06               630 	mov	ar6,@r0
   00BD 08                  631 	inc	r0
   00BE 86 07               632 	mov	ar7,@r0
   00C0 7A 00               633 	mov	r2,#0x00
                    00C2    634 	C$port.c$263$1$1 ==.
                            635 ;../../Source/portable/SDCC/cygnal/port.c:263: *pxTopOfStack = ( portSTACK_TYPE ) ulAddress;	/* DPL */
                            636 ;     genCast
   00C2 8D 03               637 	mov	ar3,r5
                            638 ;     genPointerSet
                            639 ;     genGenPointerSet
   00C4 E5*00               640 	mov	a,_bp
   00C6 24 01               641 	add	a,#0x01
   00C8 F8                  642 	mov	r0,a
   00C9 86 82               643 	mov	dpl,@r0
   00CB 08                  644 	inc	r0
   00CC 86 83               645 	mov	dph,@r0
   00CE 08                  646 	inc	r0
   00CF 86 F0               647 	mov	b,@r0
   00D1 EB                  648 	mov	a,r3
   00D2 12s00r00            649 	lcall	__gptrput
   00D5 A3                  650 	inc	dptr
   00D6 18                  651 	dec	r0
   00D7 18                  652 	dec	r0
   00D8 A6 82               653 	mov	@r0,dpl
   00DA 08                  654 	inc	r0
   00DB A6 83               655 	mov	@r0,dph
                    00DD    656 	C$port.c$264$1$1 ==.
                            657 ;../../Source/portable/SDCC/cygnal/port.c:264: ulAddress >>= 8;
                            658 ;     genRightShift
                            659 ;     genRightShiftLiteral
                            660 ;     genrshFour
   00DD 8E 05               661 	mov	ar5,r6
   00DF 8F 06               662 	mov	ar6,r7
   00E1 8A 07               663 	mov	ar7,r2
   00E3 7A 00               664 	mov	r2,#0x00
                    00E5    665 	C$port.c$265$1$1 ==.
                            666 ;../../Source/portable/SDCC/cygnal/port.c:265: *pxTopOfStack++;
                    00E5    667 	C$port.c$266$1$1 ==.
                            668 ;../../Source/portable/SDCC/cygnal/port.c:266: *pxTopOfStack = ( portSTACK_TYPE ) ulAddress;	/* DPH */
                            669 ;     genCast
   00E5 8D 03               670 	mov	ar3,r5
                            671 ;     genPointerSet
                            672 ;     genGenPointerSet
   00E7 E5*00               673 	mov	a,_bp
   00E9 24 01               674 	add	a,#0x01
   00EB F8                  675 	mov	r0,a
   00EC 86 82               676 	mov	dpl,@r0
   00EE 08                  677 	inc	r0
   00EF 86 83               678 	mov	dph,@r0
   00F1 08                  679 	inc	r0
   00F2 86 F0               680 	mov	b,@r0
   00F4 EB                  681 	mov	a,r3
   00F5 12s00r00            682 	lcall	__gptrput
   00F8 A3                  683 	inc	dptr
   00F9 18                  684 	dec	r0
   00FA 18                  685 	dec	r0
   00FB A6 82               686 	mov	@r0,dpl
   00FD 08                  687 	inc	r0
   00FE A6 83               688 	mov	@r0,dph
                    0100    689 	C$port.c$267$1$1 ==.
                            690 ;../../Source/portable/SDCC/cygnal/port.c:267: ulAddress >>= 8;
                            691 ;     genRightShift
                            692 ;     genRightShiftLiteral
                            693 ;     genrshFour
   0100 8E 05               694 	mov	ar5,r6
   0102 8F 06               695 	mov	ar6,r7
   0104 8A 07               696 	mov	ar7,r2
   0106 7A 00               697 	mov	r2,#0x00
                    0108    698 	C$port.c$268$1$1 ==.
                            699 ;../../Source/portable/SDCC/cygnal/port.c:268: pxTopOfStack++;
                    0108    700 	C$port.c$269$1$1 ==.
                            701 ;../../Source/portable/SDCC/cygnal/port.c:269: *pxTopOfStack = ( portSTACK_TYPE ) ulAddress;	/* b */
                            702 ;     genCast
                            703 ;     genPointerSet
                            704 ;     genGenPointerSet
   0108 E5*00               705 	mov	a,_bp
   010A 24 01               706 	add	a,#0x01
   010C F8                  707 	mov	r0,a
   010D 86 82               708 	mov	dpl,@r0
   010F 08                  709 	inc	r0
   0110 86 83               710 	mov	dph,@r0
   0112 08                  711 	inc	r0
   0113 86 F0               712 	mov	b,@r0
   0115 ED                  713 	mov	a,r5
   0116 12s00r00            714 	lcall	__gptrput
   0119 A3                  715 	inc	dptr
   011A 18                  716 	dec	r0
   011B 18                  717 	dec	r0
   011C A6 82               718 	mov	@r0,dpl
   011E 08                  719 	inc	r0
   011F A6 83               720 	mov	@r0,dph
                    0121    721 	C$port.c$270$1$1 ==.
                            722 ;../../Source/portable/SDCC/cygnal/port.c:270: pxTopOfStack++;
                    0121    723 	C$port.c$273$1$1 ==.
                            724 ;../../Source/portable/SDCC/cygnal/port.c:273: *pxTopOfStack = 0x02;	/* R2 */
                            725 ;     genPointerSet
                            726 ;     genGenPointerSet
   0121 E5*00               727 	mov	a,_bp
   0123 24 01               728 	add	a,#0x01
   0125 F8                  729 	mov	r0,a
   0126 86 82               730 	mov	dpl,@r0
   0128 08                  731 	inc	r0
   0129 86 83               732 	mov	dph,@r0
   012B 08                  733 	inc	r0
   012C 86 F0               734 	mov	b,@r0
   012E 74 02               735 	mov	a,#0x02
   0130 12s00r00            736 	lcall	__gptrput
   0133 A3                  737 	inc	dptr
   0134 18                  738 	dec	r0
   0135 18                  739 	dec	r0
   0136 A6 82               740 	mov	@r0,dpl
   0138 08                  741 	inc	r0
   0139 A6 83               742 	mov	@r0,dph
                    013B    743 	C$port.c$274$1$1 ==.
                            744 ;../../Source/portable/SDCC/cygnal/port.c:274: pxTopOfStack++;
                    013B    745 	C$port.c$275$1$1 ==.
                            746 ;../../Source/portable/SDCC/cygnal/port.c:275: *pxTopOfStack = 0x03;	/* R3 */
                            747 ;     genPointerSet
                            748 ;     genGenPointerSet
   013B E5*00               749 	mov	a,_bp
   013D 24 01               750 	add	a,#0x01
   013F F8                  751 	mov	r0,a
   0140 86 82               752 	mov	dpl,@r0
   0142 08                  753 	inc	r0
   0143 86 83               754 	mov	dph,@r0
   0145 08                  755 	inc	r0
   0146 86 F0               756 	mov	b,@r0
   0148 74 03               757 	mov	a,#0x03
   014A 12s00r00            758 	lcall	__gptrput
   014D A3                  759 	inc	dptr
   014E 18                  760 	dec	r0
   014F 18                  761 	dec	r0
   0150 A6 82               762 	mov	@r0,dpl
   0152 08                  763 	inc	r0
   0153 A6 83               764 	mov	@r0,dph
                    0155    765 	C$port.c$276$1$1 ==.
                            766 ;../../Source/portable/SDCC/cygnal/port.c:276: pxTopOfStack++;
                    0155    767 	C$port.c$277$1$1 ==.
                            768 ;../../Source/portable/SDCC/cygnal/port.c:277: *pxTopOfStack = 0x04;	/* R4 */
                            769 ;     genPointerSet
                            770 ;     genGenPointerSet
   0155 E5*00               771 	mov	a,_bp
   0157 24 01               772 	add	a,#0x01
   0159 F8                  773 	mov	r0,a
   015A 86 82               774 	mov	dpl,@r0
   015C 08                  775 	inc	r0
   015D 86 83               776 	mov	dph,@r0
   015F 08                  777 	inc	r0
   0160 86 F0               778 	mov	b,@r0
   0162 74 04               779 	mov	a,#0x04
   0164 12s00r00            780 	lcall	__gptrput
   0167 A3                  781 	inc	dptr
   0168 18                  782 	dec	r0
   0169 18                  783 	dec	r0
   016A A6 82               784 	mov	@r0,dpl
   016C 08                  785 	inc	r0
   016D A6 83               786 	mov	@r0,dph
                    016F    787 	C$port.c$278$1$1 ==.
                            788 ;../../Source/portable/SDCC/cygnal/port.c:278: pxTopOfStack++;
                    016F    789 	C$port.c$279$1$1 ==.
                            790 ;../../Source/portable/SDCC/cygnal/port.c:279: *pxTopOfStack = 0x05;	/* R5 */
                            791 ;     genPointerSet
                            792 ;     genGenPointerSet
   016F E5*00               793 	mov	a,_bp
   0171 24 01               794 	add	a,#0x01
   0173 F8                  795 	mov	r0,a
   0174 86 82               796 	mov	dpl,@r0
   0176 08                  797 	inc	r0
   0177 86 83               798 	mov	dph,@r0
   0179 08                  799 	inc	r0
   017A 86 F0               800 	mov	b,@r0
   017C 74 05               801 	mov	a,#0x05
   017E 12s00r00            802 	lcall	__gptrput
   0181 A3                  803 	inc	dptr
   0182 18                  804 	dec	r0
   0183 18                  805 	dec	r0
   0184 A6 82               806 	mov	@r0,dpl
   0186 08                  807 	inc	r0
   0187 A6 83               808 	mov	@r0,dph
                    0189    809 	C$port.c$280$1$1 ==.
                            810 ;../../Source/portable/SDCC/cygnal/port.c:280: pxTopOfStack++;
                    0189    811 	C$port.c$281$1$1 ==.
                            812 ;../../Source/portable/SDCC/cygnal/port.c:281: *pxTopOfStack = 0x06;	/* R6 */
                            813 ;     genPointerSet
                            814 ;     genGenPointerSet
   0189 E5*00               815 	mov	a,_bp
   018B 24 01               816 	add	a,#0x01
   018D F8                  817 	mov	r0,a
   018E 86 82               818 	mov	dpl,@r0
   0190 08                  819 	inc	r0
   0191 86 83               820 	mov	dph,@r0
   0193 08                  821 	inc	r0
   0194 86 F0               822 	mov	b,@r0
   0196 74 06               823 	mov	a,#0x06
   0198 12s00r00            824 	lcall	__gptrput
   019B A3                  825 	inc	dptr
   019C 18                  826 	dec	r0
   019D 18                  827 	dec	r0
   019E A6 82               828 	mov	@r0,dpl
   01A0 08                  829 	inc	r0
   01A1 A6 83               830 	mov	@r0,dph
                    01A3    831 	C$port.c$282$1$1 ==.
                            832 ;../../Source/portable/SDCC/cygnal/port.c:282: pxTopOfStack++;
                    01A3    833 	C$port.c$283$1$1 ==.
                            834 ;../../Source/portable/SDCC/cygnal/port.c:283: *pxTopOfStack = 0x07;	/* R7 */
                            835 ;     genPointerSet
                            836 ;     genGenPointerSet
   01A3 E5*00               837 	mov	a,_bp
   01A5 24 01               838 	add	a,#0x01
   01A7 F8                  839 	mov	r0,a
   01A8 86 82               840 	mov	dpl,@r0
   01AA 08                  841 	inc	r0
   01AB 86 83               842 	mov	dph,@r0
   01AD 08                  843 	inc	r0
   01AE 86 F0               844 	mov	b,@r0
   01B0 74 07               845 	mov	a,#0x07
   01B2 12s00r00            846 	lcall	__gptrput
   01B5 A3                  847 	inc	dptr
   01B6 18                  848 	dec	r0
   01B7 18                  849 	dec	r0
   01B8 A6 82               850 	mov	@r0,dpl
   01BA 08                  851 	inc	r0
   01BB A6 83               852 	mov	@r0,dph
                    01BD    853 	C$port.c$284$1$1 ==.
                            854 ;../../Source/portable/SDCC/cygnal/port.c:284: pxTopOfStack++;
                    01BD    855 	C$port.c$285$1$1 ==.
                            856 ;../../Source/portable/SDCC/cygnal/port.c:285: *pxTopOfStack = 0x00;	/* R0 */
                            857 ;     genPointerSet
                            858 ;     genGenPointerSet
   01BD E5*00               859 	mov	a,_bp
   01BF 24 01               860 	add	a,#0x01
   01C1 F8                  861 	mov	r0,a
   01C2 86 82               862 	mov	dpl,@r0
   01C4 08                  863 	inc	r0
   01C5 86 83               864 	mov	dph,@r0
   01C7 08                  865 	inc	r0
   01C8 86 F0               866 	mov	b,@r0
   01CA 74 00               867 	mov	a,#0x00
   01CC 12s00r00            868 	lcall	__gptrput
   01CF A3                  869 	inc	dptr
   01D0 18                  870 	dec	r0
   01D1 18                  871 	dec	r0
   01D2 A6 82               872 	mov	@r0,dpl
   01D4 08                  873 	inc	r0
   01D5 A6 83               874 	mov	@r0,dph
                    01D7    875 	C$port.c$286$1$1 ==.
                            876 ;../../Source/portable/SDCC/cygnal/port.c:286: pxTopOfStack++;
                    01D7    877 	C$port.c$287$1$1 ==.
                            878 ;../../Source/portable/SDCC/cygnal/port.c:287: *pxTopOfStack = 0x01;	/* R1 */
                            879 ;     genPointerSet
                            880 ;     genGenPointerSet
   01D7 E5*00               881 	mov	a,_bp
   01D9 24 01               882 	add	a,#0x01
   01DB F8                  883 	mov	r0,a
   01DC 86 82               884 	mov	dpl,@r0
   01DE 08                  885 	inc	r0
   01DF 86 83               886 	mov	dph,@r0
   01E1 08                  887 	inc	r0
   01E2 86 F0               888 	mov	b,@r0
   01E4 74 01               889 	mov	a,#0x01
   01E6 12s00r00            890 	lcall	__gptrput
   01E9 A3                  891 	inc	dptr
   01EA 18                  892 	dec	r0
   01EB 18                  893 	dec	r0
   01EC A6 82               894 	mov	@r0,dpl
   01EE 08                  895 	inc	r0
   01EF A6 83               896 	mov	@r0,dph
                    01F1    897 	C$port.c$288$1$1 ==.
                            898 ;../../Source/portable/SDCC/cygnal/port.c:288: pxTopOfStack++;
                    01F1    899 	C$port.c$289$1$1 ==.
                            900 ;../../Source/portable/SDCC/cygnal/port.c:289: *pxTopOfStack = 0x00;	/* PSW */
                            901 ;     genPointerSet
                            902 ;     genGenPointerSet
   01F1 E5*00               903 	mov	a,_bp
   01F3 24 01               904 	add	a,#0x01
   01F5 F8                  905 	mov	r0,a
   01F6 86 82               906 	mov	dpl,@r0
   01F8 08                  907 	inc	r0
   01F9 86 83               908 	mov	dph,@r0
   01FB 08                  909 	inc	r0
   01FC 86 F0               910 	mov	b,@r0
   01FE 74 00               911 	mov	a,#0x00
   0200 12s00r00            912 	lcall	__gptrput
   0203 A3                  913 	inc	dptr
   0204 18                  914 	dec	r0
   0205 18                  915 	dec	r0
   0206 A6 82               916 	mov	@r0,dpl
   0208 08                  917 	inc	r0
   0209 A6 83               918 	mov	@r0,dph
                    020B    919 	C$port.c$290$1$1 ==.
                            920 ;../../Source/portable/SDCC/cygnal/port.c:290: pxTopOfStack++;
                    020B    921 	C$port.c$291$1$1 ==.
                            922 ;../../Source/portable/SDCC/cygnal/port.c:291: *pxTopOfStack = 0xbb;	/* BP */
                            923 ;     genPointerSet
                            924 ;     genGenPointerSet
   020B E5*00               925 	mov	a,_bp
   020D 24 01               926 	add	a,#0x01
   020F F8                  927 	mov	r0,a
   0210 86 82               928 	mov	dpl,@r0
   0212 08                  929 	inc	r0
   0213 86 83               930 	mov	dph,@r0
   0215 08                  931 	inc	r0
   0216 86 F0               932 	mov	b,@r0
   0218 74 BB               933 	mov	a,#0xBB
   021A 12s00r00            934 	lcall	__gptrput
                    021D    935 	C$port.c$297$1$1 ==.
                            936 ;../../Source/portable/SDCC/cygnal/port.c:297: *pxStartOfStack = ( portSTACK_TYPE ) ( pxTopOfStack - pxStartOfStack );
                            937 ;     genMinus
   021D E5*00               938 	mov	a,_bp
   021F 24 01               939 	add	a,#0x01
   0221 F8                  940 	mov	r0,a
   0222 E5*00               941 	mov	a,_bp
   0224 24 04               942 	add	a,#0x04
   0226 F9                  943 	mov	r1,a
   0227 E6                  944 	mov	a,@r0
   0228 C3                  945 	clr	c
   0229 97                  946 	subb	a,@r1
   022A FA                  947 	mov	r2,a
   022B 08                  948 	inc	r0
   022C E6                  949 	mov	a,@r0
   022D 09                  950 	inc	r1
   022E 97                  951 	subb	a,@r1
   022F FB                  952 	mov	r3,a
                            953 ;     genCast
                            954 ;     genPointerSet
                            955 ;     genGenPointerSet
   0230 E5*00               956 	mov	a,_bp
   0232 24 04               957 	add	a,#0x04
   0234 F8                  958 	mov	r0,a
   0235 86 82               959 	mov	dpl,@r0
   0237 08                  960 	inc	r0
   0238 86 83               961 	mov	dph,@r0
   023A 08                  962 	inc	r0
   023B 86 F0               963 	mov	b,@r0
   023D EA                  964 	mov	a,r2
   023E 12s00r00            965 	lcall	__gptrput
                    0241    966 	C$port.c$301$1$1 ==.
                            967 ;../../Source/portable/SDCC/cygnal/port.c:301: return pxStartOfStack;
                            968 ;     genRet
   0241 E5*00               969 	mov	a,_bp
   0243 24 04               970 	add	a,#0x04
   0245 F8                  971 	mov	r0,a
   0246 86 82               972 	mov	dpl,@r0
   0248 08                  973 	inc	r0
   0249 86 83               974 	mov	dph,@r0
   024B 08                  975 	inc	r0
   024C 86 F0               976 	mov	b,@r0
   024E                     977 00101$:
   024E 85*00 81            978 	mov	sp,_bp
   0251 D0*00               979 	pop	_bp
                    0253    980 	C$port.c$302$1$1 ==.
                    0253    981 	XG$pxPortInitialiseStack$0$0 ==.
   0253 22                  982 	ret
                            983 ;------------------------------------------------------------
                            984 ;Allocation info for local variables in function 'sPortStartScheduler'
                            985 ;------------------------------------------------------------
                            986 ;sUsePreemption            Allocated to registers 
                            987 ;------------------------------------------------------------
                    0254    988 	G$sPortStartScheduler$0$0 ==.
                    0254    989 	C$port.c$308$1$1 ==.
                            990 ;../../Source/portable/SDCC/cygnal/port.c:308: portSHORT sPortStartScheduler( portSHORT sUsePreemption )
                            991 ;	-----------------------------------------
                            992 ;	 function sPortStartScheduler
                            993 ;	-----------------------------------------
   0254                     994 _sPortStartScheduler:
   0254 C0*00               995 	push	_bp
   0256 85 81*00            996 	mov	_bp,sp
                    0259    997 	C$port.c$315$1$1 ==.
                            998 ;../../Source/portable/SDCC/cygnal/port.c:315: prvSetupTimerInterrupt();	
                            999 ;     genCall
   0259 12s04rBE           1000 	lcall	_prvSetupTimerInterrupt
                    025C   1001 	C$port.c$323$2$2 ==.
                           1002 ;../../Source/portable/SDCC/cygnal/port.c:323: portCOPY_XRAM_TO_STACK();
                           1003 ;     genAssign
   025C 90s00r00           1004 	mov	dptr,#_pxCurrentTCB
   025F E0                 1005 	movx	a,@dptr
   0260 FA                 1006 	mov	r2,a
   0261 A3                 1007 	inc	dptr
   0262 E0                 1008 	movx	a,@dptr
   0263 FB                 1009 	mov	r3,a
   0264 A3                 1010 	inc	dptr
   0265 E0                 1011 	movx	a,@dptr
   0266 FC                 1012 	mov	r4,a
                           1013 ;     genPointerGet
                           1014 ;     genGenPointerGet
   0267 8A 82              1015 	mov	dpl,r2
   0269 8B 83              1016 	mov	dph,r3
   026B 8C F0              1017 	mov	b,r4
   026D 12s00r00           1018 	lcall	__gptrget
   0270 F5*01              1019 	mov	_pxXRAMStack,a
   0272 A3                 1020 	inc	dptr
   0273 12s00r00           1021 	lcall	__gptrget
   0276 F5*02              1022 	mov	(_pxXRAMStack + 1),a
                           1023 ;     genAssign
   0278 75*03 0D           1024 	mov	_pxRAMStack,#0x0D
                           1025 ;     genAssign
   027B 85*01 82           1026 	mov	dpl,_pxXRAMStack
   027E 85*02 83           1027 	mov	dph,(_pxXRAMStack + 1)
                           1028 ;     genPointerGet
                           1029 ;     genFarPointerGet
   0281 E0                 1030 	movx	a,@dptr
   0282 F5*00              1031 	mov	_ucStackBytes,a
   0284                    1032 00101$:
                           1033 ;     genPlus
                           1034 ;     genPlusIncr
   0284 05*01              1035 	inc	_pxXRAMStack
   0286 E4                 1036 	clr	a
   0287 B5*01 02           1037 	cjne	a,_pxXRAMStack,00108$
   028A 05*02              1038 	inc	(_pxXRAMStack + 1)
   028C                    1039 00108$:
                           1040 ;     genPlus
                           1041 ;     genPlusIncr
   028C 05*03              1042 	inc	_pxRAMStack
                           1043 ;     genAssign
   028E A8*03              1044 	mov	r0,_pxRAMStack
                           1045 ;     genAssign
   0290 85*01 82           1046 	mov	dpl,_pxXRAMStack
   0293 85*02 83           1047 	mov	dph,(_pxXRAMStack + 1)
                           1048 ;     genPointerGet
                           1049 ;     genFarPointerGet
   0296 E0                 1050 	movx	a,@dptr
   0297 FA                 1051 	mov	r2,a
                           1052 ;     genPointerSet
                           1053 ;     genNearPointerSet
   0298 A6 02              1054 	mov	@r0,ar2
                           1055 ;     genMinus
                           1056 ;     genMinusDec
   029A 15*00              1057 	dec	_ucStackBytes
                           1058 ;     genIfx
   029C E5*00              1059 	mov	a,_ucStackBytes
                           1060 ;     genIfxJump
   029E 60 03              1061 	jz	00109$
   02A0 02s02r84           1062 	ljmp	00101$
   02A3                    1063 00109$:
                           1064 ;     genCast
   02A3 85*03 81           1065 	mov	_SP,_pxRAMStack
                    02A6   1066 	C$port.c$324$2$4 ==.
                           1067 ;../../Source/portable/SDCC/cygnal/port.c:324: portRESTORE_CONTEXT();
                           1068 ;     genInline
   02A6                    1069  pop _bp pop PSW pop ar1 pop ar0 pop ar7 pop ar6 pop ar5 pop ar4 pop ar3 pop ar2 pop b pop DPH pop DPL pop ACC JB ACC.7,0098$ CLR IE.7 LJMP 0099$ 0098$:
   02CA                    1070 SETB IE.7 0099$:
   02CC D0 E0 32           1071 	pop ACC reti 
                    02CF   1072 	C$port.c$327$1$1 ==.
                           1073 ;../../Source/portable/SDCC/cygnal/port.c:327: return pdTRUE;
                           1074 ;     genRet
   02CF 75 82 01           1075 	mov	dpl,#0x01
   02D2 75 83 00           1076 	mov	dph,#0x00
   02D5                    1077 00104$:
   02D5 85*00 81           1078 	mov	sp,_bp
   02D8 D0*00              1079 	pop	_bp
                    02DA   1080 	C$port.c$328$1$1 ==.
                    02DA   1081 	XG$sPortStartScheduler$0$0 ==.
   02DA 22                 1082 	ret
                           1083 ;------------------------------------------------------------
                           1084 ;Allocation info for local variables in function 'vPortEndScheduler'
                           1085 ;------------------------------------------------------------
                           1086 ;------------------------------------------------------------
                    02DB   1087 	G$vPortEndScheduler$0$0 ==.
                    02DB   1088 	C$port.c$331$1$1 ==.
                           1089 ;../../Source/portable/SDCC/cygnal/port.c:331: void vPortEndScheduler( void )
                           1090 ;	-----------------------------------------
                           1091 ;	 function vPortEndScheduler
                           1092 ;	-----------------------------------------
   02DB                    1093 _vPortEndScheduler:
   02DB C0*00              1094 	push	_bp
   02DD 85 81*00           1095 	mov	_bp,sp
                    02E0   1096 	C$port.c$334$1$1 ==.
                           1097 ;../../Source/portable/SDCC/cygnal/port.c:334: }
   02E0                    1098 00101$:
   02E0 85*00 81           1099 	mov	sp,_bp
   02E3 D0*00              1100 	pop	_bp
                    02E5   1101 	C$port.c$334$1$1 ==.
                    02E5   1102 	XG$vPortEndScheduler$0$0 ==.
   02E5 22                 1103 	ret
                           1104 ;------------------------------------------------------------
                           1105 ;Allocation info for local variables in function 'vPortYield'
                           1106 ;------------------------------------------------------------
                           1107 ;------------------------------------------------------------
                    02E6   1108 	G$vPortYield$0$0 ==.
                    02E6   1109 	C$port.c$341$1$1 ==.
                           1110 ;../../Source/portable/SDCC/cygnal/port.c:341: void vPortYield( void ) _naked
                           1111 ;	-----------------------------------------
                           1112 ;	 function vPortYield
                           1113 ;	-----------------------------------------
   02E6                    1114 _vPortYield:
                           1115 ;	naked function: no prologue.
                    02E6   1116 	C$port.c$349$2$2 ==.
                           1117 ;../../Source/portable/SDCC/cygnal/port.c:349: portSAVE_CONTEXT();
                           1118 ;     genInline
   02E6 C0 E0 C0 A8 C2 AF  1119 	 push ACC push IE clr _EA push DPL push DPH push b push ar2 push ar3 push ar4 push ar5 push ar6 push ar7 push ar0 push ar1 push PSW 
        C0 82 C0 83 C0 F0
        C0 02 C0 03 C0 04
        C0 05 C0 06 C0 07
        C0 00 C0 01 C0 D0
                           1120 ;     genAssign
   0304 75 D0 00           1121 	mov	_PSW,#0x00
                           1122 ;     genInline
   0307 C0*00              1123 	 push _bp 
                    0309   1124 	C$port.c$350$2$3 ==.
                           1125 ;../../Source/portable/SDCC/cygnal/port.c:350: portCOPY_STACK_TO_XRAM();
                           1126 ;     genAssign
   0309 90s00r00           1127 	mov	dptr,#_pxCurrentTCB
   030C E0                 1128 	movx	a,@dptr
   030D FA                 1129 	mov	r2,a
   030E A3                 1130 	inc	dptr
   030F E0                 1131 	movx	a,@dptr
   0310 FB                 1132 	mov	r3,a
   0311 A3                 1133 	inc	dptr
   0312 E0                 1134 	movx	a,@dptr
   0313 FC                 1135 	mov	r4,a
                           1136 ;     genPointerGet
                           1137 ;     genGenPointerGet
   0314 8A 82              1138 	mov	dpl,r2
   0316 8B 83              1139 	mov	dph,r3
   0318 8C F0              1140 	mov	b,r4
   031A 12s00r00           1141 	lcall	__gptrget
   031D F5*01              1142 	mov	_pxXRAMStack,a
   031F A3                 1143 	inc	dptr
   0320 12s00r00           1144 	lcall	__gptrget
   0323 F5*02              1145 	mov	(_pxXRAMStack + 1),a
                           1146 ;     genAssign
   0325 75*03 0E           1147 	mov	_pxRAMStack,#0x0E
                           1148 ;     genMinus
   0328 E5 81              1149 	mov	a,_SP
   032A 24 F3              1150 	add	a,#0xf3
   032C F5*00              1151 	mov	_ucStackBytes,a
                           1152 ;     genAssign
   032E 85*01 82           1153 	mov	dpl,_pxXRAMStack
   0331 85*02 83           1154 	mov	dph,(_pxXRAMStack + 1)
                           1155 ;     genPointerSet
                           1156 ;     genFarPointerSet
   0334 E5*00              1157 	mov	a,_ucStackBytes
   0336 F0                 1158 	movx	@dptr,a
   0337                    1159 00101$:
                           1160 ;     genIfx
   0337 E5*00              1161 	mov	a,_ucStackBytes
                           1162 ;     genIfxJump
   0339 70 03              1163 	jnz	00113$
   033B 02s03r59           1164 	ljmp	00103$
   033E                    1165 00113$:
                           1166 ;     genPlus
                           1167 ;     genPlusIncr
   033E 05*01              1168 	inc	_pxXRAMStack
   0340 E4                 1169 	clr	a
   0341 B5*01 02           1170 	cjne	a,_pxXRAMStack,00114$
   0344 05*02              1171 	inc	(_pxXRAMStack + 1)
   0346                    1172 00114$:
                           1173 ;     genAssign
   0346 85*01 82           1174 	mov	dpl,_pxXRAMStack
   0349 85*02 83           1175 	mov	dph,(_pxXRAMStack + 1)
                           1176 ;     genAssign
   034C A8*03              1177 	mov	r0,_pxRAMStack
                           1178 ;     genPointerGet
                           1179 ;     genNearPointerGet
   034E 86 02              1180 	mov	ar2,@r0
                           1181 ;     genPointerSet
                           1182 ;     genFarPointerSet
   0350 EA                 1183 	mov	a,r2
   0351 F0                 1184 	movx	@dptr,a
                           1185 ;     genPlus
                           1186 ;     genPlusIncr
   0352 05*03              1187 	inc	_pxRAMStack
                           1188 ;     genMinus
                           1189 ;     genMinusDec
   0354 15*00              1190 	dec	_ucStackBytes
   0356 02s03r37           1191 	ljmp	00101$
   0359                    1192 00103$:
                    0359   1193 	C$port.c$353$1$1 ==.
                           1194 ;../../Source/portable/SDCC/cygnal/port.c:353: vTaskSwitchContext();
                           1195 ;     genCall
   0359 12s00r00           1196 	lcall	_vTaskSwitchContext
                    035C   1197 	C$port.c$357$2$5 ==.
                           1198 ;../../Source/portable/SDCC/cygnal/port.c:357: portCOPY_XRAM_TO_STACK();
                           1199 ;     genAssign
   035C 90s00r00           1200 	mov	dptr,#_pxCurrentTCB
   035F E0                 1201 	movx	a,@dptr
   0360 FA                 1202 	mov	r2,a
   0361 A3                 1203 	inc	dptr
   0362 E0                 1204 	movx	a,@dptr
   0363 FB                 1205 	mov	r3,a
   0364 A3                 1206 	inc	dptr
   0365 E0                 1207 	movx	a,@dptr
   0366 FC                 1208 	mov	r4,a
                           1209 ;     genPointerGet
                           1210 ;     genGenPointerGet
   0367 8A 82              1211 	mov	dpl,r2
   0369 8B 83              1212 	mov	dph,r3
   036B 8C F0              1213 	mov	b,r4
   036D 12s00r00           1214 	lcall	__gptrget
   0370 F5*01              1215 	mov	_pxXRAMStack,a
   0372 A3                 1216 	inc	dptr
   0373 12s00r00           1217 	lcall	__gptrget
   0376 F5*02              1218 	mov	(_pxXRAMStack + 1),a
                           1219 ;     genAssign
   0378 75*03 0D           1220 	mov	_pxRAMStack,#0x0D
                           1221 ;     genAssign
   037B 85*01 82           1222 	mov	dpl,_pxXRAMStack
   037E 85*02 83           1223 	mov	dph,(_pxXRAMStack + 1)
                           1224 ;     genPointerGet
                           1225 ;     genFarPointerGet
   0381 E0                 1226 	movx	a,@dptr
   0382 F5*00              1227 	mov	_ucStackBytes,a
   0384                    1228 00104$:
                           1229 ;     genPlus
                           1230 ;     genPlusIncr
   0384 05*01              1231 	inc	_pxXRAMStack
   0386 E4                 1232 	clr	a
   0387 B5*01 02           1233 	cjne	a,_pxXRAMStack,00115$
   038A 05*02              1234 	inc	(_pxXRAMStack + 1)
   038C                    1235 00115$:
                           1236 ;     genPlus
                           1237 ;     genPlusIncr
   038C 05*03              1238 	inc	_pxRAMStack
                           1239 ;     genAssign
   038E A8*03              1240 	mov	r0,_pxRAMStack
                           1241 ;     genAssign
   0390 85*01 82           1242 	mov	dpl,_pxXRAMStack
   0393 85*02 83           1243 	mov	dph,(_pxXRAMStack + 1)
                           1244 ;     genPointerGet
                           1245 ;     genFarPointerGet
   0396 E0                 1246 	movx	a,@dptr
   0397 FA                 1247 	mov	r2,a
                           1248 ;     genPointerSet
                           1249 ;     genNearPointerSet
   0398 A6 02              1250 	mov	@r0,ar2
                           1251 ;     genMinus
                           1252 ;     genMinusDec
   039A 15*00              1253 	dec	_ucStackBytes
                           1254 ;     genIfx
   039C E5*00              1255 	mov	a,_ucStackBytes
                           1256 ;     genIfxJump
   039E 60 03              1257 	jz	00116$
   03A0 02s03r84           1258 	ljmp	00104$
   03A3                    1259 00116$:
                           1260 ;     genCast
   03A3 85*03 81           1261 	mov	_SP,_pxRAMStack
                    03A6   1262 	C$port.c$358$2$7 ==.
                           1263 ;../../Source/portable/SDCC/cygnal/port.c:358: portRESTORE_CONTEXT();
                           1264 ;     genInline
   03A6                    1265  pop _bp pop PSW pop ar1 pop ar0 pop ar7 pop ar6 pop ar5 pop ar4 pop ar3 pop ar2 pop b pop DPH pop DPL pop ACC JB ACC.7,0098$ CLR IE.7 LJMP 0099$ 0098$:
   03CA                    1266 SETB IE.7 0099$:
   03CC D0 E0 32           1267 	pop ACC reti 
   03CF                    1268 00107$:
                           1269 ;	naked function: no epilogue.
                    03CF   1270 	C$port.c$359$2$7 ==.
                    03CF   1271 	XG$vPortYield$0$0 ==.
                           1272 ;------------------------------------------------------------
                           1273 ;Allocation info for local variables in function 'vTimer2ISR'
                           1274 ;------------------------------------------------------------
                           1275 ;------------------------------------------------------------
                    03CF   1276 	G$vTimer2ISR$0$0 ==.
                    03CF   1277 	C$port.c$363$2$7 ==.
                           1278 ;../../Source/portable/SDCC/cygnal/port.c:363: void vTimer2ISR( void ) interrupt 5 _naked
                           1279 ;	-----------------------------------------
                           1280 ;	 function vTimer2ISR
                           1281 ;	-----------------------------------------
   03CF                    1282 _vTimer2ISR:
                           1283 ;	naked function: no prologue.
                    03CF   1284 	C$port.c$369$2$2 ==.
                           1285 ;../../Source/portable/SDCC/cygnal/port.c:369: portSAVE_CONTEXT();
                           1286 ;     genInline
   03CF C0 E0 C0 A8 C2 AF  1287 	 push ACC push IE clr _EA push DPL push DPH push b push ar2 push ar3 push ar4 push ar5 push ar6 push ar7 push ar0 push ar1 push PSW 
        C0 82 C0 83 C0 F0
        C0 02 C0 03 C0 04
        C0 05 C0 06 C0 07
        C0 00 C0 01 C0 D0
                           1288 ;     genAssign
   03ED 75 D0 00           1289 	mov	_PSW,#0x00
                           1290 ;     genInline
   03F0 C0*00              1291 	 push _bp 
                    03F2   1292 	C$port.c$370$2$3 ==.
                           1293 ;../../Source/portable/SDCC/cygnal/port.c:370: portCOPY_STACK_TO_XRAM();
                           1294 ;     genAssign
   03F2 90s00r00           1295 	mov	dptr,#_pxCurrentTCB
   03F5 E0                 1296 	movx	a,@dptr
   03F6 FA                 1297 	mov	r2,a
   03F7 A3                 1298 	inc	dptr
   03F8 E0                 1299 	movx	a,@dptr
   03F9 FB                 1300 	mov	r3,a
   03FA A3                 1301 	inc	dptr
   03FB E0                 1302 	movx	a,@dptr
   03FC FC                 1303 	mov	r4,a
                           1304 ;     genPointerGet
                           1305 ;     genGenPointerGet
   03FD 8A 82              1306 	mov	dpl,r2
   03FF 8B 83              1307 	mov	dph,r3
   0401 8C F0              1308 	mov	b,r4
   0403 12s00r00           1309 	lcall	__gptrget
   0406 F5*01              1310 	mov	_pxXRAMStack,a
   0408 A3                 1311 	inc	dptr
   0409 12s00r00           1312 	lcall	__gptrget
   040C F5*02              1313 	mov	(_pxXRAMStack + 1),a
                           1314 ;     genAssign
   040E 75*03 0E           1315 	mov	_pxRAMStack,#0x0E
                           1316 ;     genMinus
   0411 E5 81              1317 	mov	a,_SP
   0413 24 F3              1318 	add	a,#0xf3
   0415 F5*00              1319 	mov	_ucStackBytes,a
                           1320 ;     genAssign
   0417 85*01 82           1321 	mov	dpl,_pxXRAMStack
   041A 85*02 83           1322 	mov	dph,(_pxXRAMStack + 1)
                           1323 ;     genPointerSet
                           1324 ;     genFarPointerSet
   041D E5*00              1325 	mov	a,_ucStackBytes
   041F F0                 1326 	movx	@dptr,a
   0420                    1327 00101$:
                           1328 ;     genIfx
   0420 E5*00              1329 	mov	a,_ucStackBytes
                           1330 ;     genIfxJump
   0422 70 03              1331 	jnz	00113$
   0424 02s04r42           1332 	ljmp	00103$
   0427                    1333 00113$:
                           1334 ;     genPlus
                           1335 ;     genPlusIncr
   0427 05*01              1336 	inc	_pxXRAMStack
   0429 E4                 1337 	clr	a
   042A B5*01 02           1338 	cjne	a,_pxXRAMStack,00114$
   042D 05*02              1339 	inc	(_pxXRAMStack + 1)
   042F                    1340 00114$:
                           1341 ;     genAssign
   042F 85*01 82           1342 	mov	dpl,_pxXRAMStack
   0432 85*02 83           1343 	mov	dph,(_pxXRAMStack + 1)
                           1344 ;     genAssign
   0435 A8*03              1345 	mov	r0,_pxRAMStack
                           1346 ;     genPointerGet
                           1347 ;     genNearPointerGet
   0437 86 02              1348 	mov	ar2,@r0
                           1349 ;     genPointerSet
                           1350 ;     genFarPointerSet
   0439 EA                 1351 	mov	a,r2
   043A F0                 1352 	movx	@dptr,a
                           1353 ;     genPlus
                           1354 ;     genPlusIncr
   043B 05*03              1355 	inc	_pxRAMStack
                           1356 ;     genMinus
                           1357 ;     genMinusDec
   043D 15*00              1358 	dec	_ucStackBytes
   043F 02s04r20           1359 	ljmp	00101$
   0442                    1360 00103$:
                    0442   1361 	C$port.c$372$1$1 ==.
                           1362 ;../../Source/portable/SDCC/cygnal/port.c:372: vTaskIncrementTick();
                           1363 ;     genCall
   0442 12s00r00           1364 	lcall	_vTaskIncrementTick
                    0445   1365 	C$port.c$373$1$1 ==.
                           1366 ;../../Source/portable/SDCC/cygnal/port.c:373: vTaskSwitchContext();
                           1367 ;     genCall
   0445 12s00r00           1368 	lcall	_vTaskSwitchContext
                    0448   1369 	C$port.c$375$1$1 ==.
                           1370 ;../../Source/portable/SDCC/cygnal/port.c:375: portCLEAR_INTERRUPT_FLAG();
                           1371 ;     genAnd
   0448 53 C8 7F           1372 	anl	_T2CON,#0x7F
                    044B   1373 	C$port.c$376$2$5 ==.
                           1374 ;../../Source/portable/SDCC/cygnal/port.c:376: portCOPY_XRAM_TO_STACK();
                           1375 ;     genAssign
   044B 90s00r00           1376 	mov	dptr,#_pxCurrentTCB
   044E E0                 1377 	movx	a,@dptr
   044F FA                 1378 	mov	r2,a
   0450 A3                 1379 	inc	dptr
   0451 E0                 1380 	movx	a,@dptr
   0452 FB                 1381 	mov	r3,a
   0453 A3                 1382 	inc	dptr
   0454 E0                 1383 	movx	a,@dptr
   0455 FC                 1384 	mov	r4,a
                           1385 ;     genPointerGet
                           1386 ;     genGenPointerGet
   0456 8A 82              1387 	mov	dpl,r2
   0458 8B 83              1388 	mov	dph,r3
   045A 8C F0              1389 	mov	b,r4
   045C 12s00r00           1390 	lcall	__gptrget
   045F F5*01              1391 	mov	_pxXRAMStack,a
   0461 A3                 1392 	inc	dptr
   0462 12s00r00           1393 	lcall	__gptrget
   0465 F5*02              1394 	mov	(_pxXRAMStack + 1),a
                           1395 ;     genAssign
   0467 75*03 0D           1396 	mov	_pxRAMStack,#0x0D
                           1397 ;     genAssign
   046A 85*01 82           1398 	mov	dpl,_pxXRAMStack
   046D 85*02 83           1399 	mov	dph,(_pxXRAMStack + 1)
                           1400 ;     genPointerGet
                           1401 ;     genFarPointerGet
   0470 E0                 1402 	movx	a,@dptr
   0471 F5*00              1403 	mov	_ucStackBytes,a
   0473                    1404 00104$:
                           1405 ;     genPlus
                           1406 ;     genPlusIncr
   0473 05*01              1407 	inc	_pxXRAMStack
   0475 E4                 1408 	clr	a
   0476 B5*01 02           1409 	cjne	a,_pxXRAMStack,00115$
   0479 05*02              1410 	inc	(_pxXRAMStack + 1)
   047B                    1411 00115$:
                           1412 ;     genPlus
                           1413 ;     genPlusIncr
   047B 05*03              1414 	inc	_pxRAMStack
                           1415 ;     genAssign
   047D A8*03              1416 	mov	r0,_pxRAMStack
                           1417 ;     genAssign
   047F 85*01 82           1418 	mov	dpl,_pxXRAMStack
   0482 85*02 83           1419 	mov	dph,(_pxXRAMStack + 1)
                           1420 ;     genPointerGet
                           1421 ;     genFarPointerGet
   0485 E0                 1422 	movx	a,@dptr
   0486 FA                 1423 	mov	r2,a
                           1424 ;     genPointerSet
                           1425 ;     genNearPointerSet
   0487 A6 02              1426 	mov	@r0,ar2
                           1427 ;     genMinus
                           1428 ;     genMinusDec
   0489 15*00              1429 	dec	_ucStackBytes
                           1430 ;     genIfx
   048B E5*00              1431 	mov	a,_ucStackBytes
                           1432 ;     genIfxJump
   048D 60 03              1433 	jz	00116$
   048F 02s04r73           1434 	ljmp	00104$
   0492                    1435 00116$:
                           1436 ;     genCast
   0492 85*03 81           1437 	mov	_SP,_pxRAMStack
                    0495   1438 	C$port.c$377$2$7 ==.
                           1439 ;../../Source/portable/SDCC/cygnal/port.c:377: portRESTORE_CONTEXT();
                           1440 ;     genInline
   0495                    1441  pop _bp pop PSW pop ar1 pop ar0 pop ar7 pop ar6 pop ar5 pop ar4 pop ar3 pop ar2 pop b pop DPH pop DPL pop ACC JB ACC.7,0098$ CLR IE.7 LJMP 0099$ 0098$:
   04B9                    1442 SETB IE.7 0099$:
   04BB D0 E0 32           1443 	pop ACC reti 
   04BE                    1444 00107$:
                           1445 ;	naked function: no epilogue.
                    04BE   1446 	C$port.c$378$2$7 ==.
                    04BE   1447 	XG$vTimer2ISR$0$0 ==.
                           1448 ;------------------------------------------------------------
                           1449 ;Allocation info for local variables in function 'prvSetupTimerInterrupt'
                           1450 ;------------------------------------------------------------
                           1451 ;ulTicksPerSecond          Allocated to registers 
                           1452 ;ulCaptureTime             Allocated to registers 
                           1453 ;ulCaptureValue            Allocated to registers 
                           1454 ;ucLowCaptureByte          Allocated to registers 
                           1455 ;ucHighCaptureByte         Allocated to registers 
                           1456 ;------------------------------------------------------------
                    04BE   1457 	F______Source_portable_SDCC_cygnal_port$prvSetupTimerInterrupt$0$0 ==.
                    04BE   1458 	C$port.c$391$2$7 ==.
                           1459 ;../../Source/portable/SDCC/cygnal/port.c:391: static void prvSetupTimerInterrupt( void )
                           1460 ;	-----------------------------------------
                           1461 ;	 function prvSetupTimerInterrupt
                           1462 ;	-----------------------------------------
   04BE                    1463 _prvSetupTimerInterrupt:
   04BE C0*00              1464 	push	_bp
   04C0 85 81*00           1465 	mov	_bp,sp
                    04C3   1466 	C$port.c$413$1$1 ==.
                           1467 ;../../Source/portable/SDCC/cygnal/port.c:413: RCAP2L = ucLowCaptureByte;
                           1468 ;     genAssign
   04C3 75 CA 19           1469 	mov	_RCAP2L,#0x19
                    04C6   1470 	C$port.c$414$1$1 ==.
                           1471 ;../../Source/portable/SDCC/cygnal/port.c:414: RCAP2H = ucHighCaptureByte;
                           1472 ;     genAssign
   04C6 75 CB E0           1473 	mov	_RCAP2H,#0xE0
                    04C9   1474 	C$port.c$419$1$1 ==.
                           1475 ;../../Source/portable/SDCC/cygnal/port.c:419: TL2 = ucLowCaptureByte;
                           1476 ;     genAssign
   04C9 75 CC 19           1477 	mov	_TL2,#0x19
                    04CC   1478 	C$port.c$420$1$1 ==.
                           1479 ;../../Source/portable/SDCC/cygnal/port.c:420: TH2 = ucHighCaptureByte;
                           1480 ;     genAssign
   04CC 75 CD E0           1481 	mov	_TH2,#0xE0
                    04CF   1482 	C$port.c$423$1$1 ==.
                           1483 ;../../Source/portable/SDCC/cygnal/port.c:423: IE |= portTIMER_2_INTERRUPT_ENABLE;
                           1484 ;     genOr
   04CF 43 A8 20           1485 	orl	_IE,#0x20
                    04D2   1486 	C$port.c$428$1$1 ==.
                           1487 ;../../Source/portable/SDCC/cygnal/port.c:428: T2CON = portENABLE_TIMER;
                           1488 ;     genAssign
   04D2 75 C8 04           1489 	mov	_T2CON,#0x04
   04D5                    1490 00101$:
   04D5 85*00 81           1491 	mov	sp,_bp
   04D8 D0*00              1492 	pop	_bp
                    04DA   1493 	C$port.c$432$1$1 ==.
                    04DA   1494 	XF______Source_portable_SDCC_cygnal_port$prvSetupTimerInterrupt$0$0 ==.
   04DA 22                 1495 	ret
                           1496 	.area CSEG    (CODE)
                           1497 	.area XINIT   (CODE)
