                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.4.8 #964 (Feb 23 2005)
                              4 ; This file generated Fri May 20 14:05:28 2005
                              5 ;--------------------------------------------------------
                              6 	.module ______Source_portable_SDCC_ASIX_port
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _TF2
                             13 	.globl _EXF2
                             14 	.globl _RCLK
                             15 	.globl _TCLK
                             16 	.globl _EXEN2
                             17 	.globl _TR2
                             18 	.globl _C_T2
                             19 	.globl _CP_RL2
                             20 	.globl _T2CON_7
                             21 	.globl _T2CON_6
                             22 	.globl _T2CON_5
                             23 	.globl _T2CON_4
                             24 	.globl _T2CON_3
                             25 	.globl _T2CON_2
                             26 	.globl _T2CON_1
                             27 	.globl _T2CON_0
                             28 	.globl _ET2
                             29 	.globl _CY
                             30 	.globl _AC
                             31 	.globl _F0
                             32 	.globl _RS1
                             33 	.globl _RS0
                             34 	.globl _OV
                             35 	.globl _F1
                             36 	.globl _P
                             37 	.globl _PS
                             38 	.globl _PT1
                             39 	.globl _PX1
                             40 	.globl _PT0
                             41 	.globl _PX0
                             42 	.globl _RD
                             43 	.globl _WR
                             44 	.globl _T1
                             45 	.globl _T0
                             46 	.globl _INT1
                             47 	.globl _INT0
                             48 	.globl _TXD
                             49 	.globl _RXD
                             50 	.globl _P3_7
                             51 	.globl _P3_6
                             52 	.globl _P3_5
                             53 	.globl _P3_4
                             54 	.globl _P3_3
                             55 	.globl _P3_2
                             56 	.globl _P3_1
                             57 	.globl _P3_0
                             58 	.globl _EA
                             59 	.globl _ES
                             60 	.globl _ET1
                             61 	.globl _EX1
                             62 	.globl _ET0
                             63 	.globl _EX0
                             64 	.globl _P2_7
                             65 	.globl _P2_6
                             66 	.globl _P2_5
                             67 	.globl _P2_4
                             68 	.globl _P2_3
                             69 	.globl _P2_2
                             70 	.globl _P2_1
                             71 	.globl _P2_0
                             72 	.globl _SM0
                             73 	.globl _SM1
                             74 	.globl _SM2
                             75 	.globl _REN
                             76 	.globl _TB8
                             77 	.globl _RB8
                             78 	.globl _TI
                             79 	.globl _RI
                             80 	.globl _P1_7
                             81 	.globl _P1_6
                             82 	.globl _P1_5
                             83 	.globl _P1_4
                             84 	.globl _P1_3
                             85 	.globl _P1_2
                             86 	.globl _P1_1
                             87 	.globl _P1_0
                             88 	.globl _TF1
                             89 	.globl _TR1
                             90 	.globl _TF0
                             91 	.globl _TR0
                             92 	.globl _IE1
                             93 	.globl _IT1
                             94 	.globl _IE0
                             95 	.globl _IT0
                             96 	.globl _P0_7
                             97 	.globl _P0_6
                             98 	.globl _P0_5
                             99 	.globl _P0_4
                            100 	.globl _P0_3
                            101 	.globl _P0_2
                            102 	.globl _P0_1
                            103 	.globl _P0_0
                            104 	.globl _TH2
                            105 	.globl _TL2
                            106 	.globl _RCAP2H
                            107 	.globl _RCAP2L
                            108 	.globl _T2CON
                            109 	.globl _B
                            110 	.globl _ACC
                            111 	.globl _PSW
                            112 	.globl _IP
                            113 	.globl _P3
                            114 	.globl _IE
                            115 	.globl _P2
                            116 	.globl _SBUF
                            117 	.globl _SCON
                            118 	.globl _P1
                            119 	.globl _TH1
                            120 	.globl _TH0
                            121 	.globl _TL1
                            122 	.globl _TL0
                            123 	.globl _TMOD
                            124 	.globl _TCON
                            125 	.globl _PCON
                            126 	.globl _DPH
                            127 	.globl _DPL
                            128 	.globl _SP
                            129 	.globl _P0
                            130 	.globl _pxPortInitialiseStack
                            131 	.globl _sPortStartScheduler
                            132 	.globl _vPortEndScheduler
                            133 	.globl _vPortYield
                            134 	.globl _vTimer2ISR
                            135 ;--------------------------------------------------------
                            136 ; special function registers
                            137 ;--------------------------------------------------------
                            138 	.area RSEG    (DATA)
                    0080    139 _P0	=	0x0080
                    0081    140 _SP	=	0x0081
                    0082    141 _DPL	=	0x0082
                    0083    142 _DPH	=	0x0083
                    0087    143 _PCON	=	0x0087
                    0088    144 _TCON	=	0x0088
                    0089    145 _TMOD	=	0x0089
                    008A    146 _TL0	=	0x008a
                    008B    147 _TL1	=	0x008b
                    008C    148 _TH0	=	0x008c
                    008D    149 _TH1	=	0x008d
                    0090    150 _P1	=	0x0090
                    0098    151 _SCON	=	0x0098
                    0099    152 _SBUF	=	0x0099
                    00A0    153 _P2	=	0x00a0
                    00A8    154 _IE	=	0x00a8
                    00B0    155 _P3	=	0x00b0
                    00B8    156 _IP	=	0x00b8
                    00D0    157 _PSW	=	0x00d0
                    00E0    158 _ACC	=	0x00e0
                    00F0    159 _B	=	0x00f0
                    00C8    160 _T2CON	=	0x00c8
                    00CA    161 _RCAP2L	=	0x00ca
                    00CB    162 _RCAP2H	=	0x00cb
                    00CC    163 _TL2	=	0x00cc
                    00CD    164 _TH2	=	0x00cd
                            165 ;--------------------------------------------------------
                            166 ; special function bits 
                            167 ;--------------------------------------------------------
                            168 	.area RSEG    (DATA)
                    0080    169 _P0_0	=	0x0080
                    0081    170 _P0_1	=	0x0081
                    0082    171 _P0_2	=	0x0082
                    0083    172 _P0_3	=	0x0083
                    0084    173 _P0_4	=	0x0084
                    0085    174 _P0_5	=	0x0085
                    0086    175 _P0_6	=	0x0086
                    0087    176 _P0_7	=	0x0087
                    0088    177 _IT0	=	0x0088
                    0089    178 _IE0	=	0x0089
                    008A    179 _IT1	=	0x008a
                    008B    180 _IE1	=	0x008b
                    008C    181 _TR0	=	0x008c
                    008D    182 _TF0	=	0x008d
                    008E    183 _TR1	=	0x008e
                    008F    184 _TF1	=	0x008f
                    0090    185 _P1_0	=	0x0090
                    0091    186 _P1_1	=	0x0091
                    0092    187 _P1_2	=	0x0092
                    0093    188 _P1_3	=	0x0093
                    0094    189 _P1_4	=	0x0094
                    0095    190 _P1_5	=	0x0095
                    0096    191 _P1_6	=	0x0096
                    0097    192 _P1_7	=	0x0097
                    0098    193 _RI	=	0x0098
                    0099    194 _TI	=	0x0099
                    009A    195 _RB8	=	0x009a
                    009B    196 _TB8	=	0x009b
                    009C    197 _REN	=	0x009c
                    009D    198 _SM2	=	0x009d
                    009E    199 _SM1	=	0x009e
                    009F    200 _SM0	=	0x009f
                    00A0    201 _P2_0	=	0x00a0
                    00A1    202 _P2_1	=	0x00a1
                    00A2    203 _P2_2	=	0x00a2
                    00A3    204 _P2_3	=	0x00a3
                    00A4    205 _P2_4	=	0x00a4
                    00A5    206 _P2_5	=	0x00a5
                    00A6    207 _P2_6	=	0x00a6
                    00A7    208 _P2_7	=	0x00a7
                    00A8    209 _EX0	=	0x00a8
                    00A9    210 _ET0	=	0x00a9
                    00AA    211 _EX1	=	0x00aa
                    00AB    212 _ET1	=	0x00ab
                    00AC    213 _ES	=	0x00ac
                    00AF    214 _EA	=	0x00af
                    00B0    215 _P3_0	=	0x00b0
                    00B1    216 _P3_1	=	0x00b1
                    00B2    217 _P3_2	=	0x00b2
                    00B3    218 _P3_3	=	0x00b3
                    00B4    219 _P3_4	=	0x00b4
                    00B5    220 _P3_5	=	0x00b5
                    00B6    221 _P3_6	=	0x00b6
                    00B7    222 _P3_7	=	0x00b7
                    00B0    223 _RXD	=	0x00b0
                    00B1    224 _TXD	=	0x00b1
                    00B2    225 _INT0	=	0x00b2
                    00B3    226 _INT1	=	0x00b3
                    00B4    227 _T0	=	0x00b4
                    00B5    228 _T1	=	0x00b5
                    00B6    229 _WR	=	0x00b6
                    00B7    230 _RD	=	0x00b7
                    00B8    231 _PX0	=	0x00b8
                    00B9    232 _PT0	=	0x00b9
                    00BA    233 _PX1	=	0x00ba
                    00BB    234 _PT1	=	0x00bb
                    00BC    235 _PS	=	0x00bc
                    00D0    236 _P	=	0x00d0
                    00D1    237 _F1	=	0x00d1
                    00D2    238 _OV	=	0x00d2
                    00D3    239 _RS0	=	0x00d3
                    00D4    240 _RS1	=	0x00d4
                    00D5    241 _F0	=	0x00d5
                    00D6    242 _AC	=	0x00d6
                    00D7    243 _CY	=	0x00d7
                    00AD    244 _ET2	=	0x00ad
                    00C8    245 _T2CON_0	=	0x00c8
                    00C9    246 _T2CON_1	=	0x00c9
                    00CA    247 _T2CON_2	=	0x00ca
                    00CB    248 _T2CON_3	=	0x00cb
                    00CC    249 _T2CON_4	=	0x00cc
                    00CD    250 _T2CON_5	=	0x00cd
                    00CE    251 _T2CON_6	=	0x00ce
                    00CF    252 _T2CON_7	=	0x00cf
                    00C8    253 _CP_RL2	=	0x00c8
                    00C9    254 _C_T2	=	0x00c9
                    00CA    255 _TR2	=	0x00ca
                    00CB    256 _EXEN2	=	0x00cb
                    00CC    257 _TCLK	=	0x00cc
                    00CD    258 _RCLK	=	0x00cd
                    00CE    259 _EXF2	=	0x00ce
                    00CF    260 _TF2	=	0x00cf
                            261 ;--------------------------------------------------------
                            262 ; overlayable register banks 
                            263 ;--------------------------------------------------------
                            264 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     265 	.ds 8
                            266 ;--------------------------------------------------------
                            267 ; internal ram data
                            268 ;--------------------------------------------------------
                            269 	.area DSEG    (DATA)
   0000                     270 _ucStackBytes:
   0000                     271 	.ds 1
   0001                     272 _pxXRAMStack:
   0001                     273 	.ds 2
   0003                     274 _pxRAMStack:
   0003                     275 	.ds 1
                            276 ;--------------------------------------------------------
                            277 ; overlayable items in internal ram 
                            278 ;--------------------------------------------------------
                            279 	.area OSEG    (OVR,DATA)
                            280 ;--------------------------------------------------------
                            281 ; indirectly addressable internal ram data
                            282 ;--------------------------------------------------------
                            283 	.area ISEG    (DATA)
                            284 ;--------------------------------------------------------
                            285 ; bit data
                            286 ;--------------------------------------------------------
                            287 	.area BSEG    (BIT)
                            288 ;--------------------------------------------------------
                            289 ; paged external ram data
                            290 ;--------------------------------------------------------
                            291 	.area PSEG    (PAG,XDATA)
                            292 ;--------------------------------------------------------
                            293 ; external ram data
                            294 ;--------------------------------------------------------
                            295 	.area XSEG    (XDATA)
                            296 ;--------------------------------------------------------
                            297 ; external initialized ram data
                            298 ;--------------------------------------------------------
                            299 	.area XISEG   (XDATA)
                            300 	.area CSEG    (CODE)
                            301 	.area GSINIT0 (CODE)
                            302 	.area GSINIT1 (CODE)
                            303 	.area GSINIT2 (CODE)
                            304 	.area GSINIT3 (CODE)
                            305 	.area GSINIT4 (CODE)
                            306 	.area GSINIT5 (CODE)
                            307 ;--------------------------------------------------------
                            308 ; global & static initialisations
                            309 ;--------------------------------------------------------
                            310 	.area CSEG    (CODE)
                            311 	.area GSINIT  (CODE)
                            312 	.area GSFINAL (CODE)
                            313 	.area GSINIT  (CODE)
                            314 ;--------------------------------------------------------
                            315 ; Home
                            316 ;--------------------------------------------------------
                            317 	.area HOME    (CODE)
                            318 	.area CSEG    (CODE)
                            319 ;--------------------------------------------------------
                            320 ; code
                            321 ;--------------------------------------------------------
                            322 	.area CSEG    (CODE)
                            323 ;------------------------------------------------------------
                            324 ;Allocation info for local variables in function 'pxPortInitialiseStack'
                            325 ;------------------------------------------------------------
                            326 ;pxCode                    Allocated to stack - offset -4
                            327 ;pvParameters              Allocated to stack - offset -7
                            328 ;pxTopOfStack              Allocated to stack - offset 1
                            329 ;ulAddress                 Allocated to registers r5 r6 r7 r2 
                            330 ;pxStartOfStack            Allocated to stack - offset 4
                            331 ;------------------------------------------------------------
                            332 ;../../Source/portable/SDCC/ASIX/port.c:221: portSTACK_TYPE *pxPortInitialiseStack( portSTACK_TYPE *pxTopOfStack, pdTASK_CODE pxCode, void *pvParameters )
                            333 ;	-----------------------------------------
                            334 ;	 function pxPortInitialiseStack
                            335 ;	-----------------------------------------
   0000                     336 _pxPortInitialiseStack:
                    0002    337 	ar2 = 0x02
                    0003    338 	ar3 = 0x03
                    0004    339 	ar4 = 0x04
                    0005    340 	ar5 = 0x05
                    0006    341 	ar6 = 0x06
                    0007    342 	ar7 = 0x07
                    0000    343 	ar0 = 0x00
                    0001    344 	ar1 = 0x01
   0000 C0*00               345 	push	_bp
   0002 85 81*00            346 	mov	_bp,sp
                            347 ;     genReceive
   0005 C0 82               348 	push	dpl
   0007 C0 83               349 	push	dph
   0009 C0 F0               350 	push	b
   000B 05 81               351 	inc	sp
   000D 05 81               352 	inc	sp
   000F 05 81               353 	inc	sp
                            354 ;../../Source/portable/SDCC/ASIX/port.c:227: pxStartOfStack = pxTopOfStack;
                            355 ;     genAssign
   0011 E5*00               356 	mov	a,_bp
   0013 24 01               357 	add	a,#0x01
   0015 F8                  358 	mov	r0,a
   0016 E5*00               359 	mov	a,_bp
   0018 24 04               360 	add	a,#0x04
   001A F9                  361 	mov	r1,a
   001B E6                  362 	mov	a,@r0
   001C F7                  363 	mov	@r1,a
   001D 08                  364 	inc	r0
   001E 09                  365 	inc	r1
   001F E6                  366 	mov	a,@r0
   0020 F7                  367 	mov	@r1,a
   0021 08                  368 	inc	r0
   0022 09                  369 	inc	r1
   0023 E6                  370 	mov	a,@r0
   0024 F7                  371 	mov	@r1,a
                            372 ;../../Source/portable/SDCC/ASIX/port.c:228: pxTopOfStack++;
                            373 ;     genPlus
   0025 E5*00               374 	mov	a,_bp
   0027 24 01               375 	add	a,#0x01
   0029 F8                  376 	mov	r0,a
                            377 ;     genPlusIncr
   002A 74 01               378 	mov	a,#0x01
   002C 26                  379 	add	a,@r0
   002D F6                  380 	mov	@r0,a
   002E 74 00               381 	mov	a,#0x00
   0030 08                  382 	inc	r0
   0031 36                  383 	addc	a,@r0
   0032 F6                  384 	mov	@r0,a
                            385 ;../../Source/portable/SDCC/ASIX/port.c:244: ulAddress = ( unsigned portLONG ) pxCode;
                            386 ;     genCast
   0033 E5*00               387 	mov	a,_bp
   0035 24 FC               388 	add	a,#0xfc
   0037 F8                  389 	mov	r0,a
   0038 86 05               390 	mov	ar5,@r0
   003A 08                  391 	inc	r0
   003B 86 06               392 	mov	ar6,@r0
   003D 7F 00               393 	mov	r7,#0x00
   003F 7A 00               394 	mov	r2,#0x00
                            395 ;../../Source/portable/SDCC/ASIX/port.c:245: *pxTopOfStack = ( portSTACK_TYPE ) ulAddress;
                            396 ;     genCast
   0041 8D 03               397 	mov	ar3,r5
                            398 ;     genPointerSet
                            399 ;     genGenPointerSet
   0043 E5*00               400 	mov	a,_bp
   0045 24 01               401 	add	a,#0x01
   0047 F8                  402 	mov	r0,a
   0048 86 82               403 	mov	dpl,@r0
   004A 08                  404 	inc	r0
   004B 86 83               405 	mov	dph,@r0
   004D 08                  406 	inc	r0
   004E 86 F0               407 	mov	b,@r0
   0050 EB                  408 	mov	a,r3
   0051 12s00r00            409 	lcall	__gptrput
   0054 A3                  410 	inc	dptr
   0055 18                  411 	dec	r0
   0056 18                  412 	dec	r0
   0057 A6 82               413 	mov	@r0,dpl
   0059 08                  414 	inc	r0
   005A A6 83               415 	mov	@r0,dph
                            416 ;../../Source/portable/SDCC/ASIX/port.c:246: ulAddress >>= 8;
                            417 ;     genRightShift
                            418 ;     genRightShiftLiteral
                            419 ;     genrshFour
   005C 8E 05               420 	mov	ar5,r6
   005E 8F 06               421 	mov	ar6,r7
   0060 8A 07               422 	mov	ar7,r2
   0062 7A 00               423 	mov	r2,#0x00
                            424 ;../../Source/portable/SDCC/ASIX/port.c:247: pxTopOfStack++;
                            425 ;../../Source/portable/SDCC/ASIX/port.c:248: *pxTopOfStack = ( portSTACK_TYPE ) ( ulAddress );
                            426 ;     genCast
   0064 8D 03               427 	mov	ar3,r5
                            428 ;     genPointerSet
                            429 ;     genGenPointerSet
   0066 E5*00               430 	mov	a,_bp
   0068 24 01               431 	add	a,#0x01
   006A F8                  432 	mov	r0,a
   006B 86 82               433 	mov	dpl,@r0
   006D 08                  434 	inc	r0
   006E 86 83               435 	mov	dph,@r0
   0070 08                  436 	inc	r0
   0071 86 F0               437 	mov	b,@r0
   0073 EB                  438 	mov	a,r3
   0074 12s00r00            439 	lcall	__gptrput
   0077 A3                  440 	inc	dptr
   0078 18                  441 	dec	r0
   0079 18                  442 	dec	r0
   007A A6 82               443 	mov	@r0,dpl
   007C 08                  444 	inc	r0
   007D A6 83               445 	mov	@r0,dph
                            446 ;../../Source/portable/SDCC/ASIX/port.c:249: pxTopOfStack++;
                            447 ;../../Source/portable/SDCC/ASIX/port.c:252: *pxTopOfStack = 0xaa;	/* acc */
                            448 ;     genPointerSet
                            449 ;     genGenPointerSet
   007F E5*00               450 	mov	a,_bp
   0081 24 01               451 	add	a,#0x01
   0083 F8                  452 	mov	r0,a
   0084 86 82               453 	mov	dpl,@r0
   0086 08                  454 	inc	r0
   0087 86 83               455 	mov	dph,@r0
   0089 08                  456 	inc	r0
   008A 86 F0               457 	mov	b,@r0
   008C 74 AA               458 	mov	a,#0xAA
   008E 12s00r00            459 	lcall	__gptrput
   0091 A3                  460 	inc	dptr
   0092 18                  461 	dec	r0
   0093 18                  462 	dec	r0
   0094 A6 82               463 	mov	@r0,dpl
   0096 08                  464 	inc	r0
   0097 A6 83               465 	mov	@r0,dph
                            466 ;../../Source/portable/SDCC/ASIX/port.c:253: pxTopOfStack++;	
                            467 ;../../Source/portable/SDCC/ASIX/port.c:256: *pxTopOfStack = portGLOBAL_INTERRUPT_BIT;
                            468 ;     genPointerSet
                            469 ;     genGenPointerSet
   0099 E5*00               470 	mov	a,_bp
   009B 24 01               471 	add	a,#0x01
   009D F8                  472 	mov	r0,a
   009E 86 82               473 	mov	dpl,@r0
   00A0 08                  474 	inc	r0
   00A1 86 83               475 	mov	dph,@r0
   00A3 08                  476 	inc	r0
   00A4 86 F0               477 	mov	b,@r0
   00A6 74 80               478 	mov	a,#0x80
   00A8 12s00r00            479 	lcall	__gptrput
   00AB A3                  480 	inc	dptr
   00AC 18                  481 	dec	r0
   00AD 18                  482 	dec	r0
   00AE A6 82               483 	mov	@r0,dpl
   00B0 08                  484 	inc	r0
   00B1 A6 83               485 	mov	@r0,dph
                            486 ;../../Source/portable/SDCC/ASIX/port.c:257: pxTopOfStack++;
                            487 ;../../Source/portable/SDCC/ASIX/port.c:261: ulAddress = ( unsigned portLONG ) pvParameters;
                            488 ;     genCast
   00B3 E5*00               489 	mov	a,_bp
   00B5 24 F9               490 	add	a,#0xf9
   00B7 F8                  491 	mov	r0,a
   00B8 86 05               492 	mov	ar5,@r0
   00BA 08                  493 	inc	r0
   00BB 86 06               494 	mov	ar6,@r0
   00BD 08                  495 	inc	r0
   00BE 86 07               496 	mov	ar7,@r0
   00C0 7A 00               497 	mov	r2,#0x00
                            498 ;../../Source/portable/SDCC/ASIX/port.c:262: *pxTopOfStack = ( portSTACK_TYPE ) ulAddress;	/* DPL */
                            499 ;     genCast
   00C2 8D 03               500 	mov	ar3,r5
                            501 ;     genPointerSet
                            502 ;     genGenPointerSet
   00C4 E5*00               503 	mov	a,_bp
   00C6 24 01               504 	add	a,#0x01
   00C8 F8                  505 	mov	r0,a
   00C9 86 82               506 	mov	dpl,@r0
   00CB 08                  507 	inc	r0
   00CC 86 83               508 	mov	dph,@r0
   00CE 08                  509 	inc	r0
   00CF 86 F0               510 	mov	b,@r0
   00D1 EB                  511 	mov	a,r3
   00D2 12s00r00            512 	lcall	__gptrput
   00D5 A3                  513 	inc	dptr
   00D6 18                  514 	dec	r0
   00D7 18                  515 	dec	r0
   00D8 A6 82               516 	mov	@r0,dpl
   00DA 08                  517 	inc	r0
   00DB A6 83               518 	mov	@r0,dph
                            519 ;../../Source/portable/SDCC/ASIX/port.c:263: ulAddress >>= 8;
                            520 ;     genRightShift
                            521 ;     genRightShiftLiteral
                            522 ;     genrshFour
   00DD 8E 05               523 	mov	ar5,r6
   00DF 8F 06               524 	mov	ar6,r7
   00E1 8A 07               525 	mov	ar7,r2
   00E3 7A 00               526 	mov	r2,#0x00
                            527 ;../../Source/portable/SDCC/ASIX/port.c:264: *pxTopOfStack++;
                            528 ;../../Source/portable/SDCC/ASIX/port.c:265: *pxTopOfStack = ( portSTACK_TYPE ) ulAddress;	/* DPH */
                            529 ;     genCast
   00E5 8D 03               530 	mov	ar3,r5
                            531 ;     genPointerSet
                            532 ;     genGenPointerSet
   00E7 E5*00               533 	mov	a,_bp
   00E9 24 01               534 	add	a,#0x01
   00EB F8                  535 	mov	r0,a
   00EC 86 82               536 	mov	dpl,@r0
   00EE 08                  537 	inc	r0
   00EF 86 83               538 	mov	dph,@r0
   00F1 08                  539 	inc	r0
   00F2 86 F0               540 	mov	b,@r0
   00F4 EB                  541 	mov	a,r3
   00F5 12s00r00            542 	lcall	__gptrput
   00F8 A3                  543 	inc	dptr
   00F9 18                  544 	dec	r0
   00FA 18                  545 	dec	r0
   00FB A6 82               546 	mov	@r0,dpl
   00FD 08                  547 	inc	r0
   00FE A6 83               548 	mov	@r0,dph
                            549 ;../../Source/portable/SDCC/ASIX/port.c:266: ulAddress >>= 8;
                            550 ;     genRightShift
                            551 ;     genRightShiftLiteral
                            552 ;     genrshFour
   0100 8E 05               553 	mov	ar5,r6
   0102 8F 06               554 	mov	ar6,r7
   0104 8A 07               555 	mov	ar7,r2
   0106 7A 00               556 	mov	r2,#0x00
                            557 ;../../Source/portable/SDCC/ASIX/port.c:267: pxTopOfStack++;
                            558 ;../../Source/portable/SDCC/ASIX/port.c:268: *pxTopOfStack = ( portSTACK_TYPE ) ulAddress;	/* b */
                            559 ;     genCast
                            560 ;     genPointerSet
                            561 ;     genGenPointerSet
   0108 E5*00               562 	mov	a,_bp
   010A 24 01               563 	add	a,#0x01
   010C F8                  564 	mov	r0,a
   010D 86 82               565 	mov	dpl,@r0
   010F 08                  566 	inc	r0
   0110 86 83               567 	mov	dph,@r0
   0112 08                  568 	inc	r0
   0113 86 F0               569 	mov	b,@r0
   0115 ED                  570 	mov	a,r5
   0116 12s00r00            571 	lcall	__gptrput
   0119 A3                  572 	inc	dptr
   011A 18                  573 	dec	r0
   011B 18                  574 	dec	r0
   011C A6 82               575 	mov	@r0,dpl
   011E 08                  576 	inc	r0
   011F A6 83               577 	mov	@r0,dph
                            578 ;../../Source/portable/SDCC/ASIX/port.c:269: pxTopOfStack++;
                            579 ;../../Source/portable/SDCC/ASIX/port.c:272: *pxTopOfStack = 0x02;	/* R2 */
                            580 ;     genPointerSet
                            581 ;     genGenPointerSet
   0121 E5*00               582 	mov	a,_bp
   0123 24 01               583 	add	a,#0x01
   0125 F8                  584 	mov	r0,a
   0126 86 82               585 	mov	dpl,@r0
   0128 08                  586 	inc	r0
   0129 86 83               587 	mov	dph,@r0
   012B 08                  588 	inc	r0
   012C 86 F0               589 	mov	b,@r0
   012E 74 02               590 	mov	a,#0x02
   0130 12s00r00            591 	lcall	__gptrput
   0133 A3                  592 	inc	dptr
   0134 18                  593 	dec	r0
   0135 18                  594 	dec	r0
   0136 A6 82               595 	mov	@r0,dpl
   0138 08                  596 	inc	r0
   0139 A6 83               597 	mov	@r0,dph
                            598 ;../../Source/portable/SDCC/ASIX/port.c:273: pxTopOfStack++;
                            599 ;../../Source/portable/SDCC/ASIX/port.c:274: *pxTopOfStack = 0x03;	/* R3 */
                            600 ;     genPointerSet
                            601 ;     genGenPointerSet
   013B E5*00               602 	mov	a,_bp
   013D 24 01               603 	add	a,#0x01
   013F F8                  604 	mov	r0,a
   0140 86 82               605 	mov	dpl,@r0
   0142 08                  606 	inc	r0
   0143 86 83               607 	mov	dph,@r0
   0145 08                  608 	inc	r0
   0146 86 F0               609 	mov	b,@r0
   0148 74 03               610 	mov	a,#0x03
   014A 12s00r00            611 	lcall	__gptrput
   014D A3                  612 	inc	dptr
   014E 18                  613 	dec	r0
   014F 18                  614 	dec	r0
   0150 A6 82               615 	mov	@r0,dpl
   0152 08                  616 	inc	r0
   0153 A6 83               617 	mov	@r0,dph
                            618 ;../../Source/portable/SDCC/ASIX/port.c:275: pxTopOfStack++;
                            619 ;../../Source/portable/SDCC/ASIX/port.c:276: *pxTopOfStack = 0x04;	/* R4 */
                            620 ;     genPointerSet
                            621 ;     genGenPointerSet
   0155 E5*00               622 	mov	a,_bp
   0157 24 01               623 	add	a,#0x01
   0159 F8                  624 	mov	r0,a
   015A 86 82               625 	mov	dpl,@r0
   015C 08                  626 	inc	r0
   015D 86 83               627 	mov	dph,@r0
   015F 08                  628 	inc	r0
   0160 86 F0               629 	mov	b,@r0
   0162 74 04               630 	mov	a,#0x04
   0164 12s00r00            631 	lcall	__gptrput
   0167 A3                  632 	inc	dptr
   0168 18                  633 	dec	r0
   0169 18                  634 	dec	r0
   016A A6 82               635 	mov	@r0,dpl
   016C 08                  636 	inc	r0
   016D A6 83               637 	mov	@r0,dph
                            638 ;../../Source/portable/SDCC/ASIX/port.c:277: pxTopOfStack++;
                            639 ;../../Source/portable/SDCC/ASIX/port.c:278: *pxTopOfStack = 0x05;	/* R5 */
                            640 ;     genPointerSet
                            641 ;     genGenPointerSet
   016F E5*00               642 	mov	a,_bp
   0171 24 01               643 	add	a,#0x01
   0173 F8                  644 	mov	r0,a
   0174 86 82               645 	mov	dpl,@r0
   0176 08                  646 	inc	r0
   0177 86 83               647 	mov	dph,@r0
   0179 08                  648 	inc	r0
   017A 86 F0               649 	mov	b,@r0
   017C 74 05               650 	mov	a,#0x05
   017E 12s00r00            651 	lcall	__gptrput
   0181 A3                  652 	inc	dptr
   0182 18                  653 	dec	r0
   0183 18                  654 	dec	r0
   0184 A6 82               655 	mov	@r0,dpl
   0186 08                  656 	inc	r0
   0187 A6 83               657 	mov	@r0,dph
                            658 ;../../Source/portable/SDCC/ASIX/port.c:279: pxTopOfStack++;
                            659 ;../../Source/portable/SDCC/ASIX/port.c:280: *pxTopOfStack = 0x06;	/* R6 */
                            660 ;     genPointerSet
                            661 ;     genGenPointerSet
   0189 E5*00               662 	mov	a,_bp
   018B 24 01               663 	add	a,#0x01
   018D F8                  664 	mov	r0,a
   018E 86 82               665 	mov	dpl,@r0
   0190 08                  666 	inc	r0
   0191 86 83               667 	mov	dph,@r0
   0193 08                  668 	inc	r0
   0194 86 F0               669 	mov	b,@r0
   0196 74 06               670 	mov	a,#0x06
   0198 12s00r00            671 	lcall	__gptrput
   019B A3                  672 	inc	dptr
   019C 18                  673 	dec	r0
   019D 18                  674 	dec	r0
   019E A6 82               675 	mov	@r0,dpl
   01A0 08                  676 	inc	r0
   01A1 A6 83               677 	mov	@r0,dph
                            678 ;../../Source/portable/SDCC/ASIX/port.c:281: pxTopOfStack++;
                            679 ;../../Source/portable/SDCC/ASIX/port.c:282: *pxTopOfStack = 0x07;	/* R7 */
                            680 ;     genPointerSet
                            681 ;     genGenPointerSet
   01A3 E5*00               682 	mov	a,_bp
   01A5 24 01               683 	add	a,#0x01
   01A7 F8                  684 	mov	r0,a
   01A8 86 82               685 	mov	dpl,@r0
   01AA 08                  686 	inc	r0
   01AB 86 83               687 	mov	dph,@r0
   01AD 08                  688 	inc	r0
   01AE 86 F0               689 	mov	b,@r0
   01B0 74 07               690 	mov	a,#0x07
   01B2 12s00r00            691 	lcall	__gptrput
   01B5 A3                  692 	inc	dptr
   01B6 18                  693 	dec	r0
   01B7 18                  694 	dec	r0
   01B8 A6 82               695 	mov	@r0,dpl
   01BA 08                  696 	inc	r0
   01BB A6 83               697 	mov	@r0,dph
                            698 ;../../Source/portable/SDCC/ASIX/port.c:283: pxTopOfStack++;
                            699 ;../../Source/portable/SDCC/ASIX/port.c:284: *pxTopOfStack = 0x00;	/* R0 */
                            700 ;     genPointerSet
                            701 ;     genGenPointerSet
   01BD E5*00               702 	mov	a,_bp
   01BF 24 01               703 	add	a,#0x01
   01C1 F8                  704 	mov	r0,a
   01C2 86 82               705 	mov	dpl,@r0
   01C4 08                  706 	inc	r0
   01C5 86 83               707 	mov	dph,@r0
   01C7 08                  708 	inc	r0
   01C8 86 F0               709 	mov	b,@r0
   01CA 74 00               710 	mov	a,#0x00
   01CC 12s00r00            711 	lcall	__gptrput
   01CF A3                  712 	inc	dptr
   01D0 18                  713 	dec	r0
   01D1 18                  714 	dec	r0
   01D2 A6 82               715 	mov	@r0,dpl
   01D4 08                  716 	inc	r0
   01D5 A6 83               717 	mov	@r0,dph
                            718 ;../../Source/portable/SDCC/ASIX/port.c:285: pxTopOfStack++;
                            719 ;../../Source/portable/SDCC/ASIX/port.c:286: *pxTopOfStack = 0x01;	/* R1 */
                            720 ;     genPointerSet
                            721 ;     genGenPointerSet
   01D7 E5*00               722 	mov	a,_bp
   01D9 24 01               723 	add	a,#0x01
   01DB F8                  724 	mov	r0,a
   01DC 86 82               725 	mov	dpl,@r0
   01DE 08                  726 	inc	r0
   01DF 86 83               727 	mov	dph,@r0
   01E1 08                  728 	inc	r0
   01E2 86 F0               729 	mov	b,@r0
   01E4 74 01               730 	mov	a,#0x01
   01E6 12s00r00            731 	lcall	__gptrput
   01E9 A3                  732 	inc	dptr
   01EA 18                  733 	dec	r0
   01EB 18                  734 	dec	r0
   01EC A6 82               735 	mov	@r0,dpl
   01EE 08                  736 	inc	r0
   01EF A6 83               737 	mov	@r0,dph
                            738 ;../../Source/portable/SDCC/ASIX/port.c:287: pxTopOfStack++;
                            739 ;../../Source/portable/SDCC/ASIX/port.c:288: *pxTopOfStack = 0x00;	/* PSW */
                            740 ;     genPointerSet
                            741 ;     genGenPointerSet
   01F1 E5*00               742 	mov	a,_bp
   01F3 24 01               743 	add	a,#0x01
   01F5 F8                  744 	mov	r0,a
   01F6 86 82               745 	mov	dpl,@r0
   01F8 08                  746 	inc	r0
   01F9 86 83               747 	mov	dph,@r0
   01FB 08                  748 	inc	r0
   01FC 86 F0               749 	mov	b,@r0
   01FE 74 00               750 	mov	a,#0x00
   0200 12s00r00            751 	lcall	__gptrput
   0203 A3                  752 	inc	dptr
   0204 18                  753 	dec	r0
   0205 18                  754 	dec	r0
   0206 A6 82               755 	mov	@r0,dpl
   0208 08                  756 	inc	r0
   0209 A6 83               757 	mov	@r0,dph
                            758 ;../../Source/portable/SDCC/ASIX/port.c:289: pxTopOfStack++;
                            759 ;../../Source/portable/SDCC/ASIX/port.c:290: *pxTopOfStack = 0xbb;	/* BP */
                            760 ;     genPointerSet
                            761 ;     genGenPointerSet
   020B E5*00               762 	mov	a,_bp
   020D 24 01               763 	add	a,#0x01
   020F F8                  764 	mov	r0,a
   0210 86 82               765 	mov	dpl,@r0
   0212 08                  766 	inc	r0
   0213 86 83               767 	mov	dph,@r0
   0215 08                  768 	inc	r0
   0216 86 F0               769 	mov	b,@r0
   0218 74 BB               770 	mov	a,#0xBB
   021A 12s00r00            771 	lcall	__gptrput
                            772 ;../../Source/portable/SDCC/ASIX/port.c:296: *pxStartOfStack = ( portSTACK_TYPE ) ( pxTopOfStack - pxStartOfStack );
                            773 ;     genMinus
   021D E5*00               774 	mov	a,_bp
   021F 24 01               775 	add	a,#0x01
   0221 F8                  776 	mov	r0,a
   0222 E5*00               777 	mov	a,_bp
   0224 24 04               778 	add	a,#0x04
   0226 F9                  779 	mov	r1,a
   0227 E6                  780 	mov	a,@r0
   0228 C3                  781 	clr	c
   0229 97                  782 	subb	a,@r1
   022A FA                  783 	mov	r2,a
   022B 08                  784 	inc	r0
   022C E6                  785 	mov	a,@r0
   022D 09                  786 	inc	r1
   022E 97                  787 	subb	a,@r1
   022F FB                  788 	mov	r3,a
                            789 ;     genCast
                            790 ;     genPointerSet
                            791 ;     genGenPointerSet
   0230 E5*00               792 	mov	a,_bp
   0232 24 04               793 	add	a,#0x04
   0234 F8                  794 	mov	r0,a
   0235 86 82               795 	mov	dpl,@r0
   0237 08                  796 	inc	r0
   0238 86 83               797 	mov	dph,@r0
   023A 08                  798 	inc	r0
   023B 86 F0               799 	mov	b,@r0
   023D EA                  800 	mov	a,r2
   023E 12s00r00            801 	lcall	__gptrput
                            802 ;../../Source/portable/SDCC/ASIX/port.c:300: return pxStartOfStack;
                            803 ;     genRet
   0241 E5*00               804 	mov	a,_bp
   0243 24 04               805 	add	a,#0x04
   0245 F8                  806 	mov	r0,a
   0246 86 82               807 	mov	dpl,@r0
   0248 08                  808 	inc	r0
   0249 86 83               809 	mov	dph,@r0
   024B 08                  810 	inc	r0
   024C 86 F0               811 	mov	b,@r0
   024E                     812 00101$:
   024E 85*00 81            813 	mov	sp,_bp
   0251 D0*00               814 	pop	_bp
   0253 22                  815 	ret
                            816 ;------------------------------------------------------------
                            817 ;Allocation info for local variables in function 'sPortStartScheduler'
                            818 ;------------------------------------------------------------
                            819 ;sUsePreemption            Allocated to registers 
                            820 ;------------------------------------------------------------
                            821 ;../../Source/portable/SDCC/ASIX/port.c:307: portSHORT sPortStartScheduler( portSHORT sUsePreemption )
                            822 ;	-----------------------------------------
                            823 ;	 function sPortStartScheduler
                            824 ;	-----------------------------------------
   0254                     825 _sPortStartScheduler:
   0254 C0*00               826 	push	_bp
   0256 85 81*00            827 	mov	_bp,sp
                            828 ;../../Source/portable/SDCC/ASIX/port.c:314: prvSetupTimerInterrupt();	
                            829 ;     genCall
   0259 12s04rBE            830 	lcall	_prvSetupTimerInterrupt
                            831 ;../../Source/portable/SDCC/ASIX/port.c:319: portCOPY_XRAM_TO_STACK();
                            832 ;     genAssign
   025C 90s00r00            833 	mov	dptr,#_pxCurrentTCB
   025F E0                  834 	movx	a,@dptr
   0260 FA                  835 	mov	r2,a
   0261 A3                  836 	inc	dptr
   0262 E0                  837 	movx	a,@dptr
   0263 FB                  838 	mov	r3,a
   0264 A3                  839 	inc	dptr
   0265 E0                  840 	movx	a,@dptr
   0266 FC                  841 	mov	r4,a
                            842 ;     genPointerGet
                            843 ;     genGenPointerGet
   0267 8A 82               844 	mov	dpl,r2
   0269 8B 83               845 	mov	dph,r3
   026B 8C F0               846 	mov	b,r4
   026D 12s00r00            847 	lcall	__gptrget
   0270 F5*01               848 	mov	_pxXRAMStack,a
   0272 A3                  849 	inc	dptr
   0273 12s00r00            850 	lcall	__gptrget
   0276 F5*02               851 	mov	(_pxXRAMStack + 1),a
                            852 ;     genAssign
   0278 75*03 21            853 	mov	_pxRAMStack,#0x21
                            854 ;     genAssign
   027B 85*01 82            855 	mov	dpl,_pxXRAMStack
   027E 85*02 83            856 	mov	dph,(_pxXRAMStack + 1)
                            857 ;     genPointerGet
                            858 ;     genFarPointerGet
   0281 E0                  859 	movx	a,@dptr
   0282 F5*00               860 	mov	_ucStackBytes,a
   0284                     861 00101$:
                            862 ;     genPlus
                            863 ;     genPlusIncr
   0284 05*01               864 	inc	_pxXRAMStack
   0286 E4                  865 	clr	a
   0287 B5*01 02            866 	cjne	a,_pxXRAMStack,00108$
   028A 05*02               867 	inc	(_pxXRAMStack + 1)
   028C                     868 00108$:
                            869 ;     genPlus
                            870 ;     genPlusIncr
   028C 05*03               871 	inc	_pxRAMStack
                            872 ;     genAssign
   028E A8*03               873 	mov	r0,_pxRAMStack
                            874 ;     genAssign
   0290 85*01 82            875 	mov	dpl,_pxXRAMStack
   0293 85*02 83            876 	mov	dph,(_pxXRAMStack + 1)
                            877 ;     genPointerGet
                            878 ;     genFarPointerGet
   0296 E0                  879 	movx	a,@dptr
   0297 FA                  880 	mov	r2,a
                            881 ;     genPointerSet
                            882 ;     genNearPointerSet
   0298 A6 02               883 	mov	@r0,ar2
                            884 ;     genMinus
                            885 ;     genMinusDec
   029A 15*00               886 	dec	_ucStackBytes
                            887 ;     genIfx
   029C E5*00               888 	mov	a,_ucStackBytes
                            889 ;     genIfxJump
   029E 60 03               890 	jz	00109$
   02A0 02s02r84            891 	ljmp	00101$
   02A3                     892 00109$:
                            893 ;     genCast
   02A3 85*03 81            894 	mov	_SP,_pxRAMStack
                            895 ;../../Source/portable/SDCC/ASIX/port.c:320: portRESTORE_CONTEXT();
                            896 ;     genInline
   02A6                     897  pop _bp pop PSW pop ar1 pop ar0 pop ar7 pop ar6 pop ar5 pop ar4 pop ar3 pop ar2 pop b pop DPH pop DPL pop ACC JB ACC.7,0098$ CLR IE.7 LJMP 0099$ 0098$:
   02CA                     898 SETB IE.7 0099$:
   02CC D0 E0 32            899 	pop ACC reti 
                            900 ;../../Source/portable/SDCC/ASIX/port.c:323: return pdTRUE;
                            901 ;     genRet
   02CF 75 82 01            902 	mov	dpl,#0x01
   02D2 75 83 00            903 	mov	dph,#0x00
   02D5                     904 00104$:
   02D5 85*00 81            905 	mov	sp,_bp
   02D8 D0*00               906 	pop	_bp
   02DA 22                  907 	ret
                            908 ;------------------------------------------------------------
                            909 ;Allocation info for local variables in function 'vPortEndScheduler'
                            910 ;------------------------------------------------------------
                            911 ;------------------------------------------------------------
                            912 ;../../Source/portable/SDCC/ASIX/port.c:327: void vPortEndScheduler( void )
                            913 ;	-----------------------------------------
                            914 ;	 function vPortEndScheduler
                            915 ;	-----------------------------------------
   02DB                     916 _vPortEndScheduler:
   02DB C0*00               917 	push	_bp
   02DD 85 81*00            918 	mov	_bp,sp
                            919 ;../../Source/portable/SDCC/ASIX/port.c:330: }
   02E0                     920 00101$:
   02E0 85*00 81            921 	mov	sp,_bp
   02E3 D0*00               922 	pop	_bp
   02E5 22                  923 	ret
                            924 ;------------------------------------------------------------
                            925 ;Allocation info for local variables in function 'vPortYield'
                            926 ;------------------------------------------------------------
                            927 ;------------------------------------------------------------
                            928 ;../../Source/portable/SDCC/ASIX/port.c:337: void vPortYield( void ) _naked
                            929 ;	-----------------------------------------
                            930 ;	 function vPortYield
                            931 ;	-----------------------------------------
   02E6                     932 _vPortYield:
                            933 ;	naked function: no prologue.
                            934 ;../../Source/portable/SDCC/ASIX/port.c:345: portSAVE_CONTEXT();
                            935 ;     genInline
   02E6 C0 E0 C0 A8 C2 AF   936 	 push ACC push IE clr _EA push DPL push DPH push b push ar2 push ar3 push ar4 push ar5 push ar6 push ar7 push ar0 push ar1 push PSW 
        C0 82 C0 83 C0 F0
        C0 02 C0 03 C0 04
        C0 05 C0 06 C0 07
        C0 00 C0 01 C0 D0
                            937 ;     genAssign
   0304 75 D0 00            938 	mov	_PSW,#0x00
                            939 ;     genInline
   0307 C0*00               940 	 push _bp 
                            941 ;../../Source/portable/SDCC/ASIX/port.c:346: portCOPY_STACK_TO_XRAM();
                            942 ;     genAssign
   0309 90s00r00            943 	mov	dptr,#_pxCurrentTCB
   030C E0                  944 	movx	a,@dptr
   030D FA                  945 	mov	r2,a
   030E A3                  946 	inc	dptr
   030F E0                  947 	movx	a,@dptr
   0310 FB                  948 	mov	r3,a
   0311 A3                  949 	inc	dptr
   0312 E0                  950 	movx	a,@dptr
   0313 FC                  951 	mov	r4,a
                            952 ;     genPointerGet
                            953 ;     genGenPointerGet
   0314 8A 82               954 	mov	dpl,r2
   0316 8B 83               955 	mov	dph,r3
   0318 8C F0               956 	mov	b,r4
   031A 12s00r00            957 	lcall	__gptrget
   031D F5*01               958 	mov	_pxXRAMStack,a
   031F A3                  959 	inc	dptr
   0320 12s00r00            960 	lcall	__gptrget
   0323 F5*02               961 	mov	(_pxXRAMStack + 1),a
                            962 ;     genAssign
   0325 75*03 22            963 	mov	_pxRAMStack,#0x22
                            964 ;     genMinus
   0328 E5 81               965 	mov	a,_SP
   032A 24 DF               966 	add	a,#0xdf
   032C F5*00               967 	mov	_ucStackBytes,a
                            968 ;     genAssign
   032E 85*01 82            969 	mov	dpl,_pxXRAMStack
   0331 85*02 83            970 	mov	dph,(_pxXRAMStack + 1)
                            971 ;     genPointerSet
                            972 ;     genFarPointerSet
   0334 E5*00               973 	mov	a,_ucStackBytes
   0336 F0                  974 	movx	@dptr,a
   0337                     975 00101$:
                            976 ;     genIfx
   0337 E5*00               977 	mov	a,_ucStackBytes
                            978 ;     genIfxJump
   0339 70 03               979 	jnz	00113$
   033B 02s03r59            980 	ljmp	00103$
   033E                     981 00113$:
                            982 ;     genPlus
                            983 ;     genPlusIncr
   033E 05*01               984 	inc	_pxXRAMStack
   0340 E4                  985 	clr	a
   0341 B5*01 02            986 	cjne	a,_pxXRAMStack,00114$
   0344 05*02               987 	inc	(_pxXRAMStack + 1)
   0346                     988 00114$:
                            989 ;     genAssign
   0346 85*01 82            990 	mov	dpl,_pxXRAMStack
   0349 85*02 83            991 	mov	dph,(_pxXRAMStack + 1)
                            992 ;     genAssign
   034C A8*03               993 	mov	r0,_pxRAMStack
                            994 ;     genPointerGet
                            995 ;     genNearPointerGet
   034E 86 02               996 	mov	ar2,@r0
                            997 ;     genPointerSet
                            998 ;     genFarPointerSet
   0350 EA                  999 	mov	a,r2
   0351 F0                 1000 	movx	@dptr,a
                           1001 ;     genPlus
                           1002 ;     genPlusIncr
   0352 05*03              1003 	inc	_pxRAMStack
                           1004 ;     genMinus
                           1005 ;     genMinusDec
   0354 15*00              1006 	dec	_ucStackBytes
   0356 02s03r37           1007 	ljmp	00101$
   0359                    1008 00103$:
                           1009 ;../../Source/portable/SDCC/ASIX/port.c:349: vTaskSwitchContext();
                           1010 ;     genCall
   0359 12s00r00           1011 	lcall	_vTaskSwitchContext
                           1012 ;../../Source/portable/SDCC/ASIX/port.c:353: portCOPY_XRAM_TO_STACK();
                           1013 ;     genAssign
   035C 90s00r00           1014 	mov	dptr,#_pxCurrentTCB
   035F E0                 1015 	movx	a,@dptr
   0360 FA                 1016 	mov	r2,a
   0361 A3                 1017 	inc	dptr
   0362 E0                 1018 	movx	a,@dptr
   0363 FB                 1019 	mov	r3,a
   0364 A3                 1020 	inc	dptr
   0365 E0                 1021 	movx	a,@dptr
   0366 FC                 1022 	mov	r4,a
                           1023 ;     genPointerGet
                           1024 ;     genGenPointerGet
   0367 8A 82              1025 	mov	dpl,r2
   0369 8B 83              1026 	mov	dph,r3
   036B 8C F0              1027 	mov	b,r4
   036D 12s00r00           1028 	lcall	__gptrget
   0370 F5*01              1029 	mov	_pxXRAMStack,a
   0372 A3                 1030 	inc	dptr
   0373 12s00r00           1031 	lcall	__gptrget
   0376 F5*02              1032 	mov	(_pxXRAMStack + 1),a
                           1033 ;     genAssign
   0378 75*03 21           1034 	mov	_pxRAMStack,#0x21
                           1035 ;     genAssign
   037B 85*01 82           1036 	mov	dpl,_pxXRAMStack
   037E 85*02 83           1037 	mov	dph,(_pxXRAMStack + 1)
                           1038 ;     genPointerGet
                           1039 ;     genFarPointerGet
   0381 E0                 1040 	movx	a,@dptr
   0382 F5*00              1041 	mov	_ucStackBytes,a
   0384                    1042 00104$:
                           1043 ;     genPlus
                           1044 ;     genPlusIncr
   0384 05*01              1045 	inc	_pxXRAMStack
   0386 E4                 1046 	clr	a
   0387 B5*01 02           1047 	cjne	a,_pxXRAMStack,00115$
   038A 05*02              1048 	inc	(_pxXRAMStack + 1)
   038C                    1049 00115$:
                           1050 ;     genPlus
                           1051 ;     genPlusIncr
   038C 05*03              1052 	inc	_pxRAMStack
                           1053 ;     genAssign
   038E A8*03              1054 	mov	r0,_pxRAMStack
                           1055 ;     genAssign
   0390 85*01 82           1056 	mov	dpl,_pxXRAMStack
   0393 85*02 83           1057 	mov	dph,(_pxXRAMStack + 1)
                           1058 ;     genPointerGet
                           1059 ;     genFarPointerGet
   0396 E0                 1060 	movx	a,@dptr
   0397 FA                 1061 	mov	r2,a
                           1062 ;     genPointerSet
                           1063 ;     genNearPointerSet
   0398 A6 02              1064 	mov	@r0,ar2
                           1065 ;     genMinus
                           1066 ;     genMinusDec
   039A 15*00              1067 	dec	_ucStackBytes
                           1068 ;     genIfx
   039C E5*00              1069 	mov	a,_ucStackBytes
                           1070 ;     genIfxJump
   039E 60 03              1071 	jz	00116$
   03A0 02s03r84           1072 	ljmp	00104$
   03A3                    1073 00116$:
                           1074 ;     genCast
   03A3 85*03 81           1075 	mov	_SP,_pxRAMStack
                           1076 ;../../Source/portable/SDCC/ASIX/port.c:354: portRESTORE_CONTEXT();
                           1077 ;     genInline
   03A6                    1078  pop _bp pop PSW pop ar1 pop ar0 pop ar7 pop ar6 pop ar5 pop ar4 pop ar3 pop ar2 pop b pop DPH pop DPL pop ACC JB ACC.7,0098$ CLR IE.7 LJMP 0099$ 0098$:
   03CA                    1079 SETB IE.7 0099$:
   03CC D0 E0 32           1080 	pop ACC reti 
   03CF                    1081 00107$:
                           1082 ;	naked function: no epilogue.
                           1083 ;------------------------------------------------------------
                           1084 ;Allocation info for local variables in function 'vTimer2ISR'
                           1085 ;------------------------------------------------------------
                           1086 ;------------------------------------------------------------
                           1087 ;../../Source/portable/SDCC/ASIX/port.c:359: void vTimer2ISR( void ) interrupt 5 _naked
                           1088 ;	-----------------------------------------
                           1089 ;	 function vTimer2ISR
                           1090 ;	-----------------------------------------
   03CF                    1091 _vTimer2ISR:
                           1092 ;	naked function: no prologue.
                           1093 ;../../Source/portable/SDCC/ASIX/port.c:365: portSAVE_CONTEXT();
                           1094 ;     genInline
   03CF C0 E0 C0 A8 C2 AF  1095 	 push ACC push IE clr _EA push DPL push DPH push b push ar2 push ar3 push ar4 push ar5 push ar6 push ar7 push ar0 push ar1 push PSW 
        C0 82 C0 83 C0 F0
        C0 02 C0 03 C0 04
        C0 05 C0 06 C0 07
        C0 00 C0 01 C0 D0
                           1096 ;     genAssign
   03ED 75 D0 00           1097 	mov	_PSW,#0x00
                           1098 ;     genInline
   03F0 C0*00              1099 	 push _bp 
                           1100 ;../../Source/portable/SDCC/ASIX/port.c:366: portCOPY_STACK_TO_XRAM();
                           1101 ;     genAssign
   03F2 90s00r00           1102 	mov	dptr,#_pxCurrentTCB
   03F5 E0                 1103 	movx	a,@dptr
   03F6 FA                 1104 	mov	r2,a
   03F7 A3                 1105 	inc	dptr
   03F8 E0                 1106 	movx	a,@dptr
   03F9 FB                 1107 	mov	r3,a
   03FA A3                 1108 	inc	dptr
   03FB E0                 1109 	movx	a,@dptr
   03FC FC                 1110 	mov	r4,a
                           1111 ;     genPointerGet
                           1112 ;     genGenPointerGet
   03FD 8A 82              1113 	mov	dpl,r2
   03FF 8B 83              1114 	mov	dph,r3
   0401 8C F0              1115 	mov	b,r4
   0403 12s00r00           1116 	lcall	__gptrget
   0406 F5*01              1117 	mov	_pxXRAMStack,a
   0408 A3                 1118 	inc	dptr
   0409 12s00r00           1119 	lcall	__gptrget
   040C F5*02              1120 	mov	(_pxXRAMStack + 1),a
                           1121 ;     genAssign
   040E 75*03 22           1122 	mov	_pxRAMStack,#0x22
                           1123 ;     genMinus
   0411 E5 81              1124 	mov	a,_SP
   0413 24 DF              1125 	add	a,#0xdf
   0415 F5*00              1126 	mov	_ucStackBytes,a
                           1127 ;     genAssign
   0417 85*01 82           1128 	mov	dpl,_pxXRAMStack
   041A 85*02 83           1129 	mov	dph,(_pxXRAMStack + 1)
                           1130 ;     genPointerSet
                           1131 ;     genFarPointerSet
   041D E5*00              1132 	mov	a,_ucStackBytes
   041F F0                 1133 	movx	@dptr,a
   0420                    1134 00101$:
                           1135 ;     genIfx
   0420 E5*00              1136 	mov	a,_ucStackBytes
                           1137 ;     genIfxJump
   0422 70 03              1138 	jnz	00113$
   0424 02s04r42           1139 	ljmp	00103$
   0427                    1140 00113$:
                           1141 ;     genPlus
                           1142 ;     genPlusIncr
   0427 05*01              1143 	inc	_pxXRAMStack
   0429 E4                 1144 	clr	a
   042A B5*01 02           1145 	cjne	a,_pxXRAMStack,00114$
   042D 05*02              1146 	inc	(_pxXRAMStack + 1)
   042F                    1147 00114$:
                           1148 ;     genAssign
   042F 85*01 82           1149 	mov	dpl,_pxXRAMStack
   0432 85*02 83           1150 	mov	dph,(_pxXRAMStack + 1)
                           1151 ;     genAssign
   0435 A8*03              1152 	mov	r0,_pxRAMStack
                           1153 ;     genPointerGet
                           1154 ;     genNearPointerGet
   0437 86 02              1155 	mov	ar2,@r0
                           1156 ;     genPointerSet
                           1157 ;     genFarPointerSet
   0439 EA                 1158 	mov	a,r2
   043A F0                 1159 	movx	@dptr,a
                           1160 ;     genPlus
                           1161 ;     genPlusIncr
   043B 05*03              1162 	inc	_pxRAMStack
                           1163 ;     genMinus
                           1164 ;     genMinusDec
   043D 15*00              1165 	dec	_ucStackBytes
   043F 02s04r20           1166 	ljmp	00101$
   0442                    1167 00103$:
                           1168 ;../../Source/portable/SDCC/ASIX/port.c:368: vTaskIncrementTick();
                           1169 ;     genCall
   0442 12s00r00           1170 	lcall	_vTaskIncrementTick
                           1171 ;../../Source/portable/SDCC/ASIX/port.c:369: vTaskSwitchContext();
                           1172 ;     genCall
   0445 12s00r00           1173 	lcall	_vTaskSwitchContext
                           1174 ;../../Source/portable/SDCC/ASIX/port.c:371: portCLEAR_INTERRUPT_FLAG();
                           1175 ;     genAnd
   0448 53 C8 7F           1176 	anl	_T2CON,#0x7F
                           1177 ;../../Source/portable/SDCC/ASIX/port.c:372: portCOPY_XRAM_TO_STACK();
                           1178 ;     genAssign
   044B 90s00r00           1179 	mov	dptr,#_pxCurrentTCB
   044E E0                 1180 	movx	a,@dptr
   044F FA                 1181 	mov	r2,a
   0450 A3                 1182 	inc	dptr
   0451 E0                 1183 	movx	a,@dptr
   0452 FB                 1184 	mov	r3,a
   0453 A3                 1185 	inc	dptr
   0454 E0                 1186 	movx	a,@dptr
   0455 FC                 1187 	mov	r4,a
                           1188 ;     genPointerGet
                           1189 ;     genGenPointerGet
   0456 8A 82              1190 	mov	dpl,r2
   0458 8B 83              1191 	mov	dph,r3
   045A 8C F0              1192 	mov	b,r4
   045C 12s00r00           1193 	lcall	__gptrget
   045F F5*01              1194 	mov	_pxXRAMStack,a
   0461 A3                 1195 	inc	dptr
   0462 12s00r00           1196 	lcall	__gptrget
   0465 F5*02              1197 	mov	(_pxXRAMStack + 1),a
                           1198 ;     genAssign
   0467 75*03 21           1199 	mov	_pxRAMStack,#0x21
                           1200 ;     genAssign
   046A 85*01 82           1201 	mov	dpl,_pxXRAMStack
   046D 85*02 83           1202 	mov	dph,(_pxXRAMStack + 1)
                           1203 ;     genPointerGet
                           1204 ;     genFarPointerGet
   0470 E0                 1205 	movx	a,@dptr
   0471 F5*00              1206 	mov	_ucStackBytes,a
   0473                    1207 00104$:
                           1208 ;     genPlus
                           1209 ;     genPlusIncr
   0473 05*01              1210 	inc	_pxXRAMStack
   0475 E4                 1211 	clr	a
   0476 B5*01 02           1212 	cjne	a,_pxXRAMStack,00115$
   0479 05*02              1213 	inc	(_pxXRAMStack + 1)
   047B                    1214 00115$:
                           1215 ;     genPlus
                           1216 ;     genPlusIncr
   047B 05*03              1217 	inc	_pxRAMStack
                           1218 ;     genAssign
   047D A8*03              1219 	mov	r0,_pxRAMStack
                           1220 ;     genAssign
   047F 85*01 82           1221 	mov	dpl,_pxXRAMStack
   0482 85*02 83           1222 	mov	dph,(_pxXRAMStack + 1)
                           1223 ;     genPointerGet
                           1224 ;     genFarPointerGet
   0485 E0                 1225 	movx	a,@dptr
   0486 FA                 1226 	mov	r2,a
                           1227 ;     genPointerSet
                           1228 ;     genNearPointerSet
   0487 A6 02              1229 	mov	@r0,ar2
                           1230 ;     genMinus
                           1231 ;     genMinusDec
   0489 15*00              1232 	dec	_ucStackBytes
                           1233 ;     genIfx
   048B E5*00              1234 	mov	a,_ucStackBytes
                           1235 ;     genIfxJump
   048D 60 03              1236 	jz	00116$
   048F 02s04r73           1237 	ljmp	00104$
   0492                    1238 00116$:
                           1239 ;     genCast
   0492 85*03 81           1240 	mov	_SP,_pxRAMStack
                           1241 ;../../Source/portable/SDCC/ASIX/port.c:373: portRESTORE_CONTEXT();
                           1242 ;     genInline
   0495                    1243  pop _bp pop PSW pop ar1 pop ar0 pop ar7 pop ar6 pop ar5 pop ar4 pop ar3 pop ar2 pop b pop DPH pop DPL pop ACC JB ACC.7,0098$ CLR IE.7 LJMP 0099$ 0098$:
   04B9                    1244 SETB IE.7 0099$:
   04BB D0 E0 32           1245 	pop ACC reti 
   04BE                    1246 00107$:
                           1247 ;	naked function: no epilogue.
                           1248 ;------------------------------------------------------------
                           1249 ;Allocation info for local variables in function 'prvSetupTimerInterrupt'
                           1250 ;------------------------------------------------------------
                           1251 ;ulTicksPerSecond          Allocated to registers 
                           1252 ;ulCaptureTime             Allocated to registers 
                           1253 ;ulCaptureValue            Allocated to registers 
                           1254 ;ucLowCaptureByte          Allocated to registers 
                           1255 ;ucHighCaptureByte         Allocated to registers 
                           1256 ;------------------------------------------------------------
                           1257 ;../../Source/portable/SDCC/ASIX/port.c:387: static void prvSetupTimerInterrupt( void )
                           1258 ;	-----------------------------------------
                           1259 ;	 function prvSetupTimerInterrupt
                           1260 ;	-----------------------------------------
   04BE                    1261 _prvSetupTimerInterrupt:
   04BE C0*00              1262 	push	_bp
   04C0 85 81*00           1263 	mov	_bp,sp
                           1264 ;../../Source/portable/SDCC/ASIX/port.c:401: RCAP2L = ucLowCaptureByte;
                           1265 ;     genAssign
   04C3 75 CA 3D           1266 	mov	_RCAP2L,#0x3D
                           1267 ;../../Source/portable/SDCC/ASIX/port.c:402: RCAP2H = ucHighCaptureByte;
                           1268 ;     genAssign
   04C6 75 CB 5D           1269 	mov	_RCAP2H,#0x5D
                           1270 ;../../Source/portable/SDCC/ASIX/port.c:405: TL2 = ucLowCaptureByte;
                           1271 ;     genAssign
   04C9 75 CC 3D           1272 	mov	_TL2,#0x3D
                           1273 ;../../Source/portable/SDCC/ASIX/port.c:406: TH2 = ucHighCaptureByte;
                           1274 ;     genAssign
   04CC 75 CD 5D           1275 	mov	_TH2,#0x5D
                           1276 ;../../Source/portable/SDCC/ASIX/port.c:409: IE |= portTIMER_2_INTERRUPT_ENABLE;
                           1277 ;     genOr
   04CF 43 A8 20           1278 	orl	_IE,#0x20
                           1279 ;../../Source/portable/SDCC/ASIX/port.c:413: T2CON = portENABLE_TIMER;
                           1280 ;     genAssign
   04D2 75 C8 04           1281 	mov	_T2CON,#0x04
   04D5                    1282 00101$:
   04D5 85*00 81           1283 	mov	sp,_bp
   04D8 D0*00              1284 	pop	_bp
   04DA 22                 1285 	ret
                           1286 	.area CSEG    (CODE)
                           1287 	.area XINIT   (CODE)
