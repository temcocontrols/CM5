C51 COMPILER V9.00   FONT                                                                  05/08/2013 16:47:36 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE FONT
OBJECT MODULE PLACED IN .\Build\font.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE display\font.c LARGE OMF2 ROM(D16M) BROWSE INTVECTOR(0X6020) INCDIR(..\SRC\
                    -FreeRTOSSource\include\;..\SRC\FreeRTOSSource\portable\Keil\AX11000;..\SRC\CPU\;..\SRC\MS_TIMER\;..\SRC\SW_DMA\;..\SRC\U
                    -ART\;..\SRC\ETHERNET\;..\SRC\APPLICATION\;..\SRC\ETHERNET\;..\SRC\tcpip\;..\SRC\ADAPTER;..\SRC\main;..\SRC\SD_Card\;..\S
                    -RC\GSM\;..\SRC\Web\;..\SRC\SPI\;..\SRC\I2C\;..\SRC\PCA\;..\SRC\Modbus\;..\SRC\buffer\;..\SRC\hsur\;..\SRC\management\;..
                    -\SRC\dhcp\;..\SRC\pppoe\;..\SRC\flash;..\SRC\SNTP;..\SRC\display;..\SRC\key;..\SRC\schedule;..\SRC\program;..\SRC\Scan) 
                    -DEFINE(KEIL_AX11000) VARBANKING DEBUG PRINT(.\Build\font.lst) OBJECT(.\Build\font.obj)

line level    source

   1          
   2          #include "font.h"
   3          #include "lcd.h"
   4          
   5          U8_T const code Character[14][6][22] = 
   6          {
   7                  {
   8                          {0x00,0x00,0x00,0x00,0x80,0xC0,0xE0,0xE0,0xF0,0xF0,0xF0,0xF0,0xF0,0xE0,0xE0,0xC0,0x80,0x00,0x00,0x00,0x0
             -0,0x00},
   9                          {0x00,0xE0,0xFC,0xFE,0xFF,0x7F,0x0F,0x03,0x01,0x00,0x00,0x00,0x00,0x01,0x03,0x1F,0xFF,0xFF,0xFE,0xF8,0x8
             -0,0x00},
  10                          {0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xF
             -F,0x00},
  11                          {0x00,0x7F,0xFF,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x3
             -F,0x00},
  12                          {0x00,0x00,0x03,0x0F,0x1F,0x7F,0x7E,0xF8,0xF0,0xE0,0xE0,0xE0,0xE0,0xF0,0xFC,0x7F,0x3F,0x1F,0x07,0x01,0x0
             -0,0x00},
  13                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},/*"0",0*/
  14                  },
  15                  {       
  16                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xF0,0xF0,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
  17                          {0x00,0x00,0x00,0x00,0x06,0x06,0x06,0x06,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
  18                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
  19                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
  20                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
  21                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},/*"1",1*/
  22                  },
  23                  {       
  24                          {0x00,0x00,0x00,0x00,0x80,0xC0,0xE0,0xE0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xE0,0xE0,0xC0,0x80,0x00,0x00,0x0
             -0,0x00},
  25                          {0x00,0x00,0xF0,0xFE,0xFF,0xFF,0x0F,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xF8,0x0
             -0,0x00},
  26                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xF0,0xFC,0xFF,0x7F,0x1F,0x07,0x01,0x0
             -0,0x00},
  27                          {0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0xF0,0xFC,0xFE,0x3F,0x1F,0x0F,0x07,0x01,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
  28                          {0x00,0xE0,0xF8,0xFC,0xFF,0xFF,0xEF,0xE3,0xE1,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0x0
             -0,0x00},
  29                          {0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x0
             -0,0x00},/*"2",2*/
  30                  },
  31                  {       
  32                          {0x00,0x00,0x00,0x00,0x80,0xC0,0xE0,0xE0,0xF0,0xF0,0x70,0x70,0xF0,0xF0,0xE0,0xE0,0xC0,0x80,0x00,0x00,0x0
C51 COMPILER V9.00   FONT                                                                  05/08/2013 16:47:36 PAGE 2   

             -0,0x00},
  33                          {0x00,0x00,0x3C,0x3F,0x3F,0x3F,0x07,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFE,0x00,0x0
             -0,0x00},
  34                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x70,0xF0,0xF8,0xF8,0xDC,0xDF,0x8F,0x07,0x03,0x00,0x0
             -0,0x00},
  35                          {0x00,0xC0,0xC0,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x07,0xFF,0xFF,0xFE,0xF8,0x0
             -0,0x00},
  36                          {0x00,0x03,0x0F,0x3F,0x7F,0xFF,0xF8,0xF0,0xE0,0xE0,0xE0,0xE0,0xE0,0xF0,0xF8,0xFE,0x7F,0x3F,0x0F,0x03,0x0
             -0,0x00},
  37                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},/*"3",3*/
  38                  },
  39                  {       
  40                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0xF0,0xF0,0xF0,0xF0,0x00,0x00,0x00,0x0
             -0,0x00},
  41                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0xF8,0xFE,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x0
             -0,0x00},
  42                          {0x00,0x00,0x00,0x80,0xE0,0xF8,0xFE,0x3F,0x0F,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x0
             -0,0x00},
  43                          {0xF0,0xFC,0xFE,0xFF,0xFF,0xF7,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0xF0,0xF0,0xF
             -0,0x00},
  44                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x0
             -0,0x00},
  45                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x0
             -0,0x00},/*"4",4*/
  46                  },
  47                  {       
  48                          {0x00,0x00,0x00,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0x00,0x0
             -0,0x00},
  49                          {0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
  50                          {0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x78,0x38,0x1C,0x1E,0x0E,0x0E,0x0E,0x1E,0x3E,0xFC,0xFC,0xF8,0xE0,0x80,0x0
             -0,0x00},
  51                          {0x00,0xC0,0xC0,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0
             -0,0x00},
  52                          {0x00,0x03,0x0F,0x3F,0x7F,0xFF,0xF8,0xF0,0xE0,0xE0,0xE0,0xE0,0xF0,0xF0,0xFC,0x7F,0x3F,0x1F,0x0F,0x01,0x0
             -0,0x00},
  53                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},/*"5",5*/
  54                  },
  55                  {       
  56                          {0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xE0,0xE0,0xF0,0xF0,0xF0,0xF0,0xF0,0xE0,0xE0,0xC0,0x80,0x00,0x0
             -0,0x00},
  57                          {0x00,0x00,0x80,0xF0,0xFC,0xFF,0xFF,0x1F,0x07,0x01,0x00,0x00,0x00,0x00,0x01,0x07,0x1F,0x1F,0x1F,0x1C,0x0
             -0,0x00},
  58                          {0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xF1,0x78,0x3C,0x1C,0x1E,0x0E,0x0E,0x1E,0x3E,0xFC,0xFC,0xF8,0xE0,0x80,0x0
             -0,0x00},
  59                          {0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x83,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0
             -0,0x00},
  60                          {0x00,0x00,0x00,0x07,0x1F,0x3F,0x7F,0xFC,0xF0,0xE0,0xE0,0xE0,0xE0,0xE0,0xF0,0xFC,0x7F,0x3F,0x1F,0x07,0x0
             -0,0x00},
  61                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},/*"6",6*/
  62                  },                                                                                                                                                                                                                                
  63                  {       
  64                          {0x00,0x00,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0x0
             -0,0x00},
  65                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xFE,0xFF,0xFF,0x1F,0x01,0x0
             -0,0x00},
  66                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFE,0xFF,0xFF,0x0F,0x01,0x00,0x00,0x0
             -0,0x00},
  67                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xF8,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0x0
C51 COMPILER V9.00   FONT                                                                  05/08/2013 16:47:36 PAGE 3   

             -0,0x00},
  68                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xF8,0xFF,0xFF,0x7F,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
  69                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},/*"7",7*/
  70                  },
  71                  {       
  72                          {0x00,0x00,0x00,0x00,0x80,0xC0,0xE0,0xE0,0xF0,0xF0,0x70,0x70,0xF0,0xF0,0xE0,0xE0,0xC0,0x80,0x00,0x00,0x0
             -0,0x00},
  73                          {0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x07,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xFE,0xF0,0x0
             -0,0x00},
  74                          {0x00,0x00,0x01,0x07,0x8F,0x9F,0xFE,0xF8,0xF0,0xF0,0xF0,0xF0,0xF0,0xF8,0xFC,0xDF,0x9F,0x0F,0x03,0x00,0x0
             -0,0x00},
  75                          {0x00,0xF0,0xFC,0xFF,0xFF,0x1F,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x07,0xFF,0xFF,0xFE,0xFC,0xE
             -0,0x00},
  76                          {0x00,0x03,0x0F,0x3F,0x7F,0xFF,0xF8,0xF0,0xE0,0xE0,0xE0,0xE0,0xE0,0xF0,0xF0,0xFC,0x7F,0x3F,0x1F,0x07,0x0
             -0,0x00},
  77                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},/*"8",8*/
  78                  },
  79                  {       
  80                          {0x00,0x00,0x00,0x00,0x80,0xC0,0xE0,0xE0,0xF0,0xF0,0x70,0xF0,0xF0,0xE0,0xE0,0xC0,0x80,0x00,0x00,0x00,0x0
             -0,0x00},
  81                          {0x00,0x80,0xFC,0xFF,0xFF,0xFF,0x07,0x01,0x00,0x00,0x00,0x00,0x00,0x01,0x07,0xFF,0xFF,0xFF,0xF8,0xC0,0x0
             -0,0x00},
  82                          {0x00,0x03,0x7F,0xFF,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0
             -0,0x00},
  83                          {0x00,0x00,0x00,0x01,0x03,0x07,0x0F,0x0F,0x0E,0x0E,0x0E,0x0E,0x0F,0x07,0x03,0xF9,0xFF,0xFF,0xFF,0x1F,0x0
             -0,0x00},
  84                          {0x00,0x00,0x07,0x1F,0x3F,0x7F,0xFC,0xF0,0xE0,0xE0,0xE0,0xE0,0xF0,0xFC,0x7F,0x3F,0x1F,0x07,0x01,0x00,0x0
             -0,0x00},
  85                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},/*"9",9*/
  86                  },
  87                  {
  88                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
  89                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
  90                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
  91                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
  92                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
  93                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},/*" ",10*/
  94                  },
  95                  {
  96                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
  97                          {0x00,0xC0,0xC0,0x80,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xC
             -0,0x00},
  98                          {0x02,0x07,0x0F,0x0F,0x1F,0x3E,0x7C,0x7C,0xF8,0xFF,0xFF,0xFF,0xFF,0xF8,0x7C,0x7C,0x3E,0x1F,0x0F,0x0F,0x0
             -7,0x02},
  99                          {0x20,0xF0,0xF8,0xF8,0x7C,0x3E,0x1F,0x1F,0x0F,0xFF,0xFF,0xFF,0xFF,0x0F,0x1F,0x1F,0x3E,0x7C,0xF8,0xF8,0xF
             -0,0x20},
 100                          {0x00,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x0
             -1,0x00},
 101                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},/*"*",11*/
 102                  },
C51 COMPILER V9.00   FONT                                                                  05/08/2013 16:47:36 PAGE 4   

 103                  {
 104                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
 105                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
 106                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
 107                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
 108                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
 109                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},/*".",0*/
 110                  },
 111                  {
 112                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
 113                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
 114                          {0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
 115                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
 116                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},
 117                          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
             -0,0x00},/*"-",0*/
 118                  }
 119          };
 120          
 121          #if 0
              U8_T const code signal_symbol[2][24] = 
              {
              //      {0x00,0x00,0x00,0x00,0x00,0xC0,0x20,0x90,0x48,0x28,0x80,0xC0,0xC0,0x80,0x28,0x48,0x90,0x20,0xC0,0x00,0x
             -00,0x00,0x00,0x00},
              //      {0x00,0x00,0x00,0x00,0x00,0x03,0x04,0x09,0x12,0x14,0x01,0x03,0x03,0x01,0x14,0x12,0x09,0x04,0x03,0x00,0x
             -00,0x00,0x00,0x00},
                      {0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x40,0x20,0xA0,0x00,0x00,0x00,0x00,0xA0,0x20,0x40,0x80,0x00,0x00,0x00
             -,0x00,0x00,0x00},
                      {0x00,0x00,0x00,0x00,0x00,0x0F,0x10,0x26,0x49,0x50,0x06,0x0F,0x0F,0x06,0x50,0x49,0x26,0x10,0x0F,0x00,0x00
             -,0x00,0x00,0x00},
              };
              
              U8_T const code high_alarm_symbol[2][24] = 
              {
              //      {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0xF8,0xF8,0x
             -00,0x00,0x00,0x00},
              //      {0x00,0x00,0x00,0x00,0x7C,0x7C,0x00,0x00,0x00,0x00,0x00,0x7F,0x7F,0x00,0x00,0x00,0x00,0x00,0x7F,0x7F,0x
             -00,0x00,0x00,0x00},
                      {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0xFC,0xFC,0x00,0x00,0x00
             -,0x00,0x00,0x00},
                      {0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x7C,0x00,0x00,0x00,0x7F,0x7F,0x00,0x00,0x00,0x7F,0x7F,0x00,0x00,0x00
             -,0x00,0x00,0x00},
              };
              
              U8_T const code middle_alarm_symbol[2][24] = 
              {
              //      {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x
             -00,0x00,0x00,0x00},
              //      {0x00,0x00,0x00,0x00,0x7C,0x7C,0x00,0x00,0x00,0x00,0x00,0x7F,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x
             -00,0x00,0x00,0x00},
                      {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
C51 COMPILER V9.00   FONT                                                                  05/08/2013 16:47:36 PAGE 5   

             -,0x00,0x00,0x00},
                      {0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x7C,0x00,0x00,0x00,0x7F,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
             -,0x00,0x00,0x00},
              };
              
              U8_T const code low_alarm_symbol[2][24] = 
              {
              //      {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x
             -00,0x00,0x00,0x00},
              //      {0x00,0x00,0x00,0x00,0x7C,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x
             -00,0x00,0x00,0x00},
                      {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
             -,0x00,0x00,0x00},
                      {0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
             -,0x00,0x00,0x00},
              };
              
              void print_online_status(bit flag)
              {
                      U8_T i;
                      Lcd_Set_Y_Addr(4);
                      Lcd_Set_X_Addr(108);
                      if(flag == TRUE)
                      {
                              for(i = 0; i < 24; i++)
                                      Lcd_Write_Byte(signal_symbol[0][i]);
                      }
                      else
                      {
                              for(i = 0; i < 24; i++)
                                      Lcd_Write_Byte(0x00);
                      }
                      
                      Lcd_Set_Y_Addr(5);
                      Lcd_Set_X_Addr(108);
                      if(flag == TRUE)
                      {
                              for(i = 0; i < 24; i++)
                                      Lcd_Write_Byte(signal_symbol[1][i]);
                      }
                      else
                      {
                              for(i = 0; i < 24; i++)
                                      Lcd_Write_Byte(0x00);
                      }
              }
              
              #endif
 185          
 186          /*
 187          void print_alarm_status(U8_T alarm_level)
 188          {
 189                  U8_T i;
 190                  if(pre_alarm_level == (alarm_level & (~ALARM_MANUAL)))
 191                          return;
 192          
 193                  pre_alarm_level = alarm_level & (~ALARM_MANUAL);
 194          
 195                  Lcd_Set_Y_Addr(6);
 196                  Lcd_Set_X_Addr(108);
 197                  if((pre_alarm_level == CONTINUOUS_ALARM) || (pre_alarm_level == NO_SENSOR_ALARM))
 198                  {
C51 COMPILER V9.00   FONT                                                                  05/08/2013 16:47:36 PAGE 6   

 199                          for(i = 0; i < 24; i++)
 200                          {
 201                                  Lcd_Write_Byte(high_alarm_symbol[0][i]);
 202                          }
 203                  }
 204                  else if(pre_alarm_level == PRE_ALARM)
 205                  {
 206                          for(i = 0; i < 24; i++)
 207                          {
 208                                  Lcd_Write_Byte(middle_alarm_symbol[0][i]);
 209                          }
 210                  }
 211                  else // if(alarm_level == STOP_ALARM)
 212                  {
 213                          for(i = 0; i < 24; i++)
 214                          {
 215                                  Lcd_Write_Byte(low_alarm_symbol[0][i]);
 216                          }
 217                  }
 218                  
 219                  Lcd_Set_Y_Addr(7);
 220                  Lcd_Set_X_Addr(108);
 221                  if((pre_alarm_level == CONTINUOUS_ALARM) || (pre_alarm_level == NO_SENSOR_ALARM))
 222                  {
 223                          for(i = 0; i < 24; i++)
 224                          {
 225                                  Lcd_Write_Byte(high_alarm_symbol[1][i]);
 226                          }
 227                  }
 228                  else if(pre_alarm_level == PRE_ALARM)
 229                  {
 230                          for(i = 0; i < 24; i++)
 231                          {
 232                                  Lcd_Write_Byte(middle_alarm_symbol[1][i]);
 233                          }
 234                  }
 235                  else // if(alarm_level == STOP_ALARM)
 236                  {
 237                          for(i = 0; i < 24; i++)
 238                          {
 239                                  Lcd_Write_Byte(low_alarm_symbol[1][i]);
 240                          }
 241                  }
 242          }
 243          */
 244          void printCharacter(U8_T row, U8_T line, U8_T c)
 245          {
 246   1              U8_T i, j;
 247   1              U8_T index;
 248   1              if(c == ' ')
 249   1              {
 250   2                      index = 10;
 251   2              }
 252   1              else if(c == '*')
 253   1              {
 254   2                      index = 11;
 255   2              }
 256   1              else if(c == '.')
 257   1              {
 258   2                      index = 12;
 259   2              }
 260   1              else if((c >= '0') && (c <= '9'))
C51 COMPILER V9.00   FONT                                                                  05/08/2013 16:47:36 PAGE 7   

 261   1              {
 262   2                      index = c - '0';
 263   2              }
 264   1              else if(c == '-')
 265   1              {
 266   2                      index = 13;
 267   2              }
 268   1              else
 269   1              {
 270   2                      return;
 271   2              }
 272   1              Lcd_Write_Command(0x07);
 273   1              for(i = 0; i < 6; i++) // 6 pages
 274   1              {
 275   2                      Lcd_Set_X_Addr(line * 22);
 276   2                      Lcd_Set_Y_Addr(row + i);
 277   2                      for(j = 0; j < 22; j++)
 278   2                      {
 279   3                              Lcd_Write_Byte(Character[index][i][j]);
 280   3                      }                       
 281   2              }
 282   1              Lcd_Write_Command(0x06);
 283   1      }
 284          
 285          void print_number(U16_T num, U8_T dot)
 286          {
 287   1              U8_T i, str[5];
 288   1      
 289   1              if(dot >= 1)
 290   1                      dot = 1;
 291   1      
 292   1              if(dot == 0)
 293   1              {
 294   2      /*              if(num == EXCEPTION_PPM)
 295   2                      {
 296   2                              str[0] = ' ';
 297   2                              str[1] = ' ';
 298   2                              str[2] = '*';
 299   2                              str[3] = '*';
 300   2                              str[4] = '*';
 301   2                      }
 302   2                      else*/ if(num >= 10000)
 303   2                      {
 304   3                              str[0] = num / 10000 + '0';
 305   3                              num %= 10000;
 306   3                              str[1] = num / 1000 + '0';
 307   3                              num %= 1000;
 308   3                              str[2] = num / 100 + '0';
 309   3                              num %= 100;
 310   3                              str[3] = num / 10 + '0';
 311   3                              str[4] = num % 10 + '0';
 312   3                      }
 313   2                      else if(num >= 1000)
 314   2                      {
 315   3                              str[0] = ' ';
 316   3                              str[1] = num / 1000 + '0';
 317   3                              num %= 1000;
 318   3                              str[2] = num / 100 + '0';
 319   3                              num %= 100;
 320   3                              str[3] = num / 10 + '0';
 321   3                              str[4] = num % 10 + '0';
 322   3                      }
C51 COMPILER V9.00   FONT                                                                  05/08/2013 16:47:36 PAGE 8   

 323   2                      else if(num >= 100)
 324   2                      {
 325   3                              str[0] = ' ';
 326   3                              str[1] = ' ';
 327   3                              str[2] = num / 100 + '0';
 328   3                              num %= 100;
 329   3                              str[3] = num / 10 + '0';
 330   3                              str[4] = num % 10 + '0';
 331   3                      }
 332   2                      else if(num >= 10)
 333   2                      {
 334   3                              str[0] = ' ';
 335   3                              str[1] = ' ';
 336   3                              str[2] = ' ';
 337   3                              str[3] = num / 10 + '0';
 338   3                              str[4] = num % 10 + '0';
 339   3                      }
 340   2                      else
 341   2                      {
 342   3                              str[0] = ' ';
 343   3                              str[1] = ' ';
 344   3                              str[2] = ' ';
 345   3                              str[3] = ' ';
 346   3                              str[4] = num + '0';
 347   3                      }
 348   2              }
 349   1              else // if(dot == 1)
 350   1              {
 351   2                      bit flag_negative = 0; 
 352   2                      if(num & 0x8000)  // negative num
 353   2                      {
 354   3                              num = 65536 - num;
 355   3                              flag_negative = 1;
 356   3                      }
 357   2                      if(num >= 1000)
 358   2                      {
 359   3                              return;
 360   3                      }
 361   2                      /*else if(num >= 1000)
 362   2                      {
 363   2                              str[0] = num / 1000 + '0';
 364   2                              num %= 1000;
 365   2                              str[1] = num / 100 + '0';
 366   2                              num %= 100;
 367   2                              str[2] = num / 10 + '0';
 368   2                              str[3] = '.';
 369   2                              str[4] = num % 10 + '0';
 370   2                      }*/
 371   2                      else if(num >= 100)
 372   2                      {
 373   3                              if(flag_negative)
 374   3                                      str[0] = '-';
 375   3                              else
 376   3                                      str[0] = ' ';
 377   3                              str[1] = num / 100 + '0';
 378   3                              num %= 100;
 379   3                              str[2] = num / 10 + '0';
 380   3                              str[3] = '.';
 381   3                              str[4] = num % 10 + '0';
 382   3                      }
 383   2                      else
 384   2                      {
C51 COMPILER V9.00   FONT                                                                  05/08/2013 16:47:36 PAGE 9   

 385   3                              str[0] = ' ';
 386   3                              str[1] = ' ';
 387   3                              str[2] = num / 10 + '0';
 388   3                              str[3] = '.';
 389   3                              str[4] = num % 10 + '0';
 390   3                      }
 391   2              }
 392   1      
 393   1      //      Lcd_Write_Command(0x06);
 394   1              for(i = 0; i < 5; i++)
 395   1              {
 396   2                      printCharacter(2, i, str[i]);
 397   2              }
 398   1      //      Lcd_Write_Command(0x07);
 399   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    701    ----
   CONSTANT SIZE    =   1848    ----
   XDATA SIZE       =   ----      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
