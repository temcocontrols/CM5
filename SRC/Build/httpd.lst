C51 COMPILER V9.00   HTTPD                                                                 05/08/2013 16:47:34 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE HTTPD
OBJECT MODULE PLACED IN .\Build\httpd.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE application\httpd.c LARGE OMF2 ROM(D16M) BROWSE INTVECTOR(0X6020) INCDIR(..
                    -\SRC\FreeRTOSSource\include\;..\SRC\FreeRTOSSource\portable\Keil\AX11000;..\SRC\CPU\;..\SRC\MS_TIMER\;..\SRC\SW_DMA\;..\
                    -SRC\UART\;..\SRC\ETHERNET\;..\SRC\APPLICATION\;..\SRC\ETHERNET\;..\SRC\tcpip\;..\SRC\ADAPTER;..\SRC\main;..\SRC\SD_Card\
                    -;..\SRC\GSM\;..\SRC\Web\;..\SRC\SPI\;..\SRC\I2C\;..\SRC\PCA\;..\SRC\Modbus\;..\SRC\buffer\;..\SRC\hsur\;..\SRC\managemen
                    -t\;..\SRC\dhcp\;..\SRC\pppoe\;..\SRC\flash;..\SRC\SNTP;..\SRC\display;..\SRC\key;..\SRC\schedule;..\SRC\program;..\SRC\S
                    -can) DEFINE(KEIL_AX11000) VARBANKING DEBUG PRINT(.\Build\httpd.lst) OBJECT(.\Build\httpd.obj)

line level    source

   1          /*
   2           ******************************************************************************
   3           *     Copyright (c) 2006       ASIX Electronic Corporation      All rights reserved.
   4           *
   5           *     This is unpublished proprietary source code of ASIX Electronic Corporation
   6           *
   7           *     The copyright notice above does not evidence any actual or intended
   8           *     publication of such source code.
   9           ******************************************************************************
  10           */
  11          /*=============================================================================
  12           * Module Name: httpd.c
  13           * Purpose:
  14           * Author:
  15           * Date:
  16           * Notes:
  17           * $Log: httpd.c,v $
  18           * Revision 1.1.1.1  2006/06/20 05:50:28  borbin
  19           * no message
  20           *
  21           * Revision 1.2  2006/02/24 00:33:06  borbin
  22           * no message
  23           *
  24           * Revision 1.1.1.1  2006/02/23 00:55:10  borbin
  25           * no message
  26           *
  27           *=============================================================================
  28           */
  29          
  30          
  31          /* INCLUDE FILE DECLARATIONS */
  32          #include "httpd.h"
  33          //#include "filesys.h"
  34          #include "adapter.h"
  35          #include "tcpip.h"
  36          #include "mstimer.h"
  37          #include "uart.h"
  38          
  39          
  40          #if STOE_TRANSPARENT
              #include "uip_arp.h"
              #endif
  43          #if (!STOE_TRANSPARENT)
  44          #include "mstimer.h"
  45          #include "projdefs.h"
  46          #include "task.h"
  47          #endif
  48          #include "absacc.h"
  49          #include "ax11000.h"
  50          #include <string.h>
C51 COMPILER V9.00   HTTPD                                                                 05/08/2013 16:47:34 PAGE 2   

  51          #include "interrupt.h"
  52          #include "define.h"
  53          
  54          //U8_T far  Para[5670];
  55          
  56          #if 1
  57          /* NAMING CONSTANT DECLARATIONS */
  58          
  59          /* GLOBAL VARIABLES DECLARATIONS */
  60          
  61          /* LOCAL VARIABLES DECLARATIONS */
  62          static HTTP_SERVER_CONN XDATA HTTP_Connects[MAX_HTTP_CONNECT];
  63          static U8_T http_InterfaceId = 0;
  64          
  65          
  66          void responseCmd(U8_T type,U8_T* pData,HTTP_SERVER_CONN * pHttpConn); 
  67          
  68          
  69          
  70          /*
  71           * ----------------------------------------------------------------------------
  72           * Function Name: HTTP_Init
  73           * Purpose: Initialize HTTP server. 
  74           * Params:
  75           * Returns:
  76           * Note:
  77           * ----------------------------------------------------------------------------
  78           */
  79          void HTTP_Init(void)
  80          {
  81   1              U8_T    i;
  82   1              
  83   1              for (i = 0; i < MAX_HTTP_CONNECT; i++)
  84   1              {
  85   2                      HTTP_Connects[i].State = HTTP_STATE_FREE;
  86   2                      HTTP_Connects[i].FileId = 0xff;
  87   2              }
  88   1              
  89   1              http_InterfaceId = TCPIP_Bind(HTTP_NewConn, HTTP_Event, HTTP_Receive);
  90   1              TCPIP_TcpListen(HTTP_SERVER_PORT ,http_InterfaceId);
  91   1      //      FSYS_Init();   // for test
  92   1      }
  93          
  94          /*
  95           * ----------------------------------------------------------------------------
  96           * Function Name: HTTP_NewConn
  97           * Purpose: 
  98           * Params:
  99           * Returns:
 100           * Note:
 101           * ----------------------------------------------------------------------------
 102           */
 103          U8_T HTTP_NewConn(U32_T XDATA* pip, U16_T remotePort, U8_T socket)
 104          {
 105   1              U8_T    i;
 106   1      
 107   1              for (i = 0; i < MAX_HTTP_CONNECT; i++)
 108   1              {
 109   2                      if (HTTP_Connects[i].State == HTTP_STATE_FREE)
 110   2                      {
 111   3                              HTTP_Connects[i].State = HTTP_STATE_ACTIVE;
 112   3                              HTTP_Connects[i].Timer = (U16_T)/*xTaskGetTickCount()*/SWTIMER_Tick();// changed by chelsea 
C51 COMPILER V9.00   HTTPD                                                                 05/08/2013 16:47:34 PAGE 3   

 113   3                              HTTP_Connects[i].Ip = *pip;
 114   3                              HTTP_Connects[i].Port = remotePort;
 115   3                              HTTP_Connects[i].TcpSocket = socket;
 116   3      
 117   3                              return i;
 118   3                      }
 119   2              }
 120   1              return TCPIP_NO_NEW_CONN;
 121   1      }
 122          
 123          /*
 124           * ----------------------------------------------------------------------------
 125           * Function Name: HTTP_Event
 126           * Purpose: 
 127           * Params:
 128           * Returns:
 129           * Note:
 130           * ----------------------------------------------------------------------------
 131           */
 132          void HTTP_Event(U8_T id, U8_T event)
 133          {
 134   1      
 135   1      
 136   1      } /* End of HTTP_Event() */
*** WARNING C280 IN LINE 132 OF APPLICATION\HTTPD.C: 'id': unreferenced local variable
*** WARNING C280 IN LINE 132 OF APPLICATION\HTTPD.C: 'event': unreferenced local variable
 137          
 138          
 139          /*
 140           * ----------------------------------------------------------------------------
 141           * Function Name: HTTP_Receive
 142           * Purpose: 
 143           * Params:
 144           * Returns:
 145           * Note:
 146           * ----------------------------------------------------------------------------
 147           */
 148          
 149          //unsigned short sessonid=1;
 150          //U32_T address=0;
 151          U8_T far send_tcp[300]={0};
 152          
 153          //U8_T E2prom_Write_Byte(U8_T addr,U8_T dat);
 154          
 155          void HTTP_Receive(U8_T XDATA* pData, U16_T length, U8_T conn_id)
 156          {
 157   1              HTTP_SERVER_CONN XDATA* pHttpConn = &HTTP_Connects[conn_id];
 158   1      /*      U8_T XDATA                              str_post[] = {"POST"};
 159   1              U8_T                                    command, status, fileId, index, fileStatus;
 160   1              U8_T XDATA*                     pFName;
 161   1              U8_T XDATA*                     pFNameExt;
 162   1              U8_T CODE*                              pSour;
 163   1              U8_T XDATA*                     pExpanSour;
 164   1              U16_T                                   data_len;
 165   1      */
 166   1       /*     U16_T far ReCount;
 167   1          U16_T far SeCount; 
 168   1          U32_T far StartAdd;  
 169   1          U8_T  far RealNum;
 170   1          U16_T far Sin_Add;
 171   1              U16_T far RegNum;
 172   1              U32_T far i;
C51 COMPILER V9.00   HTTPD                                                                 05/08/2013 16:47:34 PAGE 4   

 173   1              U32_T far loop;
 174   1              U8_T  far NTFlag=0;*/
 175   1      
 176   1              if((pData[UIP_HEAD] ==  Modbus_address)||(pData[UIP_HEAD] == 0xff))//Address of NetControl 
 177   1              {       
 178   2                      responseCmd(TCP_IP,pData,pHttpConn);
 179   2              } 
 180   1      
 181   1      } /* End of HTTP_Receive() */
*** WARNING C280 IN LINE 155 OF APPLICATION\HTTPD.C: 'length': unreferenced local variable
 182          
 183          
 184          
 185          
 186          
 187          
 188          
 189          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    474    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   1153      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =    300    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
