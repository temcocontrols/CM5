C51 COMPILER V9.00   UART                                                                  05/08/2013 16:47:34 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Build\uart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\SRC\UART\uart.c LARGE OMF2 ROM(D16M) BROWSE INTVECTOR(0X6020) INCDIR(..\
                    -SRC\FreeRTOSSource\include\;..\SRC\FreeRTOSSource\portable\Keil\AX11000;..\SRC\CPU\;..\SRC\MS_TIMER\;..\SRC\SW_DMA\;..\S
                    -RC\UART\;..\SRC\ETHERNET\;..\SRC\APPLICATION\;..\SRC\ETHERNET\;..\SRC\tcpip\;..\SRC\ADAPTER;..\SRC\main;..\SRC\SD_Card\;
                    -..\SRC\GSM\;..\SRC\Web\;..\SRC\SPI\;..\SRC\I2C\;..\SRC\PCA\;..\SRC\Modbus\;..\SRC\buffer\;..\SRC\hsur\;..\SRC\management
                    -\;..\SRC\dhcp\;..\SRC\pppoe\;..\SRC\flash;..\SRC\SNTP;..\SRC\display;..\SRC\key;..\SRC\schedule;..\SRC\program;..\SRC\Sc
                    -an) DEFINE(KEIL_AX11000) VARBANKING DEBUG PRINT(.\Build\uart.lst) OBJECT(.\Build\uart.obj)

line level    source

   1          /*
   2           *********************************************************************************
   3           *     Copyright (c) 2005       ASIX Electronic Corporation      All rights reserved.
   4           *
   5           *     This is unpublished proprietary source code of ASIX Electronic Corporation
   6           *
   7           *     The copyright notice above does not evidence any actual or intended
   8           *     publication of such source code.
   9           *********************************************************************************
  10           */
  11          /*================================================================================
  12           * Module Name : uart.c
  13           * Purpose     : The UART module driver. It manages the character
  14           *               buffer and handles the ISR. This driver includes UART0 and UART1.
  15           * Author      : Robin Lee
  16           * Date        : 2006-01-10
  17           * Notes       : None.
  18           * $Log: uart.c,v $
  19           * Revision 1.3  2006/05/18 02:15:34  robin6633
  20           * 1.Add UART1 disable definition.
  21           *
  22           * Revision 1.2  2006/05/17 08:31:32  robin6633
  23           * 1. Changed the default baudrate to 115200.
  24           *
  25           * Revision 1.1  2006/05/12 14:24:47  robin6633
  26           * no message
  27           *
  28           * Revision 1.3  2006/05/03 02:45:55  robin6633
  29           * Changed the the function name UART_GetBufCount()
  30           * to UART_GetRxBufCount() .
  31           *
  32           * Revision 1.2  2006/05/02 01:43:40  robin6633
  33           * Add an expanding function to get the counter value of UART software buffer.
  34           *
  35           * Revision 1.1  2006/04/07 11:39:14  robin6633
  36           * no message
  37           *
  38           *================================================================================
  39           */
  40          
  41          /* INCLUDE FILE DECLARATIONS */
  42          #include "../cpu/reg80390.h"
  43          #include "uart.h"
  44          
  45          static void uart0_Init(void)
  46          {
  47   1              U8_T sysClk = 0;
  48   1              // Initialize TIMER1 for standard 8051 UART clock
  49   1      //      PCON |= 0x80;                   // Disable BaudRate doubler.
  50   1              SM01 = 1;                       // Use serial port 0 in mode 1 with 8-bits data.
C51 COMPILER V9.00   UART                                                                  05/08/2013 16:47:34 PAGE 2   

  51   1              REN0 = 1;                       // Enable UART0 receiver.
  52   1      //      TMOD |= 0x20;           // Use timer 1 in mode 2, 8-bit counter with auto-reload.
  53   1      
  54   1              TL2 = 0xD7;
  55   1              TH2 = 0xFF;
  56   1              RLDL = 0xD7;
  57   1              RLDH = 0xFF;
  58   1      
  59   1              T2CON = (1 << 2) | (1 << 4) | (1 << 5);
  60   1      
  61   1      //      sysClk = CSREPR & 0xC0;
  62   1      //      switch(sysClk)
  63   1      //      {
  64   1      //              case SCS_100M :
  65   1      //                      TH1 = 0xE4;             // Baud rate = 9600 @ 100MHz.
  66   1      //                      break;
  67   1      //              case SCS_50M :
  68   1      //                      TH1 = 0xF2;             // Baud rate = 9600 @ 50MHz.
  69   1      //                      break;
  70   1      //              case SCS_25M :
  71   1      //                      TH1 = 0xF9;             // Baud rate = 9600 @ 25MHz.
  72   1      //                      break;
  73   1      //              default :
  74   1      //                      TH1 = 0xF9;             // Baud rate = 9600 @ 25MHz.
  75   1      //                      break;
  76   1      //      }
  77   1      
  78   1              ES0     = 1;                            // Enable serial port Interrupt request
  79   1      //      TR1 = 1;                                // Run Timer 1
  80   1              TI0 = 0;
  81   1              PS0 = 1;
  82   1      } /* End of UART_Init */
  83          
  84          
  85          static void uart1_Init(void)
  86          {
  87   1              U8_T sysClk = 0;
  88   1              // Initialize TIMER1 for standard 8051 UART clock
  89   1              PCON |= 0x40;                   // Disable BaudRate doubler.
  90   1              SM10 = 0;
  91   1              SM11 = 1;                       // Use serial port 1 in mode 1 with 8-bits data.
  92   1              REN1 = 1;                       // Enable UART1 receiver.
  93   1              TMOD |= 0x20;           // Use timer 1 in mode 2, 8-bit counter with auto-reload.
  94   1      
  95   1              sysClk = CSREPR & 0xC0;
  96   1              switch (sysClk)
  97   1              {
  98   2                      case SCS_100M :
  99   2                              TH1 = 0xE4;             // Baud rate = 9600 @ 100MHz.
 100   2                              break;
 101   2                      case SCS_50M :
 102   2                              TH1 = 0xF2;             // Baud rate = 9600 @ 50MHz.
 103   2                              break;
 104   2                      case SCS_25M :
 105   2                              TH1 = 0xF9;             // Baud rate = 9600 @ 25MHz.
 106   2                              break;
 107   2                      default :
 108   2                              TH1 = 0xF9;             // Baud rate = 9600 @ 25MHz.
 109   2                              break;
 110   2              }
 111   1      
 112   1              ES1     = 1;                            // Enable serial port Interrupt request
C51 COMPILER V9.00   UART                                                                  05/08/2013 16:47:34 PAGE 3   

 113   1              TR1 = 1;                                // Run Timer 1
 114   1              TI1 = 0;
 115   1              PS1 = 1;
 116   1      }
 117          
 118          void UART_Init(U8_T port)
 119          {
 120   1              if(port == 0)
 121   1              {
 122   2                      uart0_Init();
 123   2              }
 124   1              else if(port == 1)
 125   1              {
 126   2                      uart1_Init();
 127   2              }
 128   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     96    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
