C51 COMPILER V9.00   CLOCK                                                                 05/08/2013 16:47:35 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE CLOCK
OBJECT MODULE PLACED IN .\Build\clock.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE I2C\clock.c LARGE OMF2 ROM(D16M) BROWSE INTVECTOR(0X6020) INCDIR(..\SRC\Fre
                    -eRTOSSource\include\;..\SRC\FreeRTOSSource\portable\Keil\AX11000;..\SRC\CPU\;..\SRC\MS_TIMER\;..\SRC\SW_DMA\;..\SRC\UART
                    -\;..\SRC\ETHERNET\;..\SRC\APPLICATION\;..\SRC\ETHERNET\;..\SRC\tcpip\;..\SRC\ADAPTER;..\SRC\main;..\SRC\SD_Card\;..\SRC\
                    -GSM\;..\SRC\Web\;..\SRC\SPI\;..\SRC\I2C\;..\SRC\PCA\;..\SRC\Modbus\;..\SRC\buffer\;..\SRC\hsur\;..\SRC\management\;..\SR
                    -C\dhcp\;..\SRC\pppoe\;..\SRC\flash;..\SRC\SNTP;..\SRC\display;..\SRC\key;..\SRC\schedule;..\SRC\program;..\SRC\Scan) DEF
                    -INE(KEIL_AX11000) VARBANKING DEBUG PRINT(.\Build\clock.lst) OBJECT(.\Build\clock.obj)

line level    source

   1          
   2          #if 1
   3          
   4          #include        "clock.h"
   5          #include        "define.h"
   6          
   7          
   8          U8_T  month_length[12] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
   9          
  10          U8_T data sec,min,hour,day,week,mon,year;
  11          
  12          //Date_block    ora_current;
  13          
  14          extern I2C_BUF  Read_Data;
  15          
  16          
  17          U8_T BcdToHex(U8_T byte)  
  18          {
  19   1              U8_T i,j;                 
  20   1          i = byte >> 4;
  21   1              j = byte & 0x0f;     
  22   1              return i*10+j;
  23   1      }
  24          
  25          
  26          U8_T HexToBcd(U8_T byte)
  27          {
  28   1              U8_T i,j;
  29   1              i = byte / 10;
  30   1              j = byte % 10;
  31   1              return  (i << 4) + j ;
  32   1      }
  33          
  34          
  35          
  36          
  37          U8_T Set_Clock(U8_T addr,U8_T dat)
  38          {
  39   1              U8_T far result;
  40   1              U16_T   far i;
  41   1              result = I2C_ByteWrite(0x51, addr, HexToBcd(dat), I2C_STOP_COND);
  42   1              for(i = 0; i < 1500; i++)                       _nop_ ();
  43   1              return result;
  44   1      }
  45          
  46          
  47          
  48          U8_T Get_Clock(U8_T addr,U8_T *value)
  49          {
  50   1              U8_T temp = 0;
C51 COMPILER V9.00   CLOCK                                                                 05/08/2013 16:47:35 PAGE 2   

  51   1              I2C_RdmRead(0x51, addr, &Read_Data, 1, I2C_STOP_COND);
  52   1              temp = Read_Data.I2cData[0];
  53   1              if(addr == PCF_SEC)     temp = temp & 0x7f;
  54   1              else if(addr == PCF_MIN)                temp = temp & 0x7f;
  55   1              else if(addr == PCF_HOUR)       temp = temp & 0x3f;
  56   1              else if(addr == PCF_DAY)                temp = temp & 0x3f;
  57   1              else if(addr == PCF_WEEK)       temp = temp & 0x07;
  58   1              else if(addr == PCF_MON)                temp = temp & 0x1f;
  59   1      
  60   1              *value = BcdToHex(temp);
  61   1              return 1;
  62   1      }
  63          
  64          
  65          
  66          
  67          void Initial_Clock(void)
  68          {
  69   1              Set_Clock(0,0);
  70   1              Set_Clock(1,0);
  71   1              Set_Clock(PCF_SEC,0);
  72   1              Set_Clock(PCF_MIN,0);
  73   1              Set_Clock(PCF_HOUR,0);
  74   1              Set_Clock(PCF_DAY,1);
  75   1              Set_Clock(PCF_WEEK,0);
  76   1              Set_Clock(PCF_MON,1);
  77   1              Set_Clock(PCF_YEAR,7);
  78   1      
  79   1      /*       Tim.Clk.sec = 0;
  80   1               Tim.Clk.min = 0;
  81   1               Tim.Clk.hour = 0;
  82   1               Tim.Clk.day = 1;
  83   1               Tim.Clk.week = 0;
  84   1               Tim.Clk.mon = 1;
  85   1               Tim.Clk.year = 7;
  86   1      */
  87   1      
  88   1      }
  89          
  90          
  91          //  0.5s 
  92          void Updata_Clock(void)
  93          {
  94   1              U8_T tempday,i;
  95   1              Get_Clock(PCF_SEC,&sec);
  96   1              Get_Clock(PCF_MIN,&min);
  97   1              Get_Clock(PCF_HOUR,&hour);
  98   1              Get_Clock(PCF_DAY,&day);
  99   1              Get_Clock(PCF_WEEK,&week);
 100   1              Get_Clock(PCF_MON,&mon);
 101   1              Get_Clock(PCF_YEAR,&year);
 102   1      
 103   1               RTC.Clk.sec = sec;
 104   1               RTC.Clk.min = min;
 105   1               RTC.Clk.hour = hour;
 106   1               RTC.Clk.day = day;
 107   1               RTC.Clk.week = week;
 108   1               RTC.Clk.mon = mon;
 109   1               RTC.Clk.year = year;
 110   1      
 111   1              
 112   1      
C51 COMPILER V9.00   CLOCK                                                                 05/08/2013 16:47:35 PAGE 3   

 113   1              
 114   1      }
*** WARNING C280 IN LINE 94 OF I2C\CLOCK.C: 'tempday': unreferenced local variable
*** WARNING C280 IN LINE 94 OF I2C\CLOCK.C: 'i': unreferenced local variable
 115          
 116          
 117          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    466    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     12       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =      3    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
