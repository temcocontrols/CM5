AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE     1


MACRO ASSEMBLER AX51 V3.06h
OBJECT MODULE PLACED IN .\Build\START390.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.EXE ..\SRC\CPU\START390.A51 MOD_CONT INCDIR(.;..\SRC\CPU\;..\SRC\SW_DMA\;..\S
                      RC\ETHERNET\;..\SRC\ADAPTER;..\SRC\main) SET(LARGE) DEBUG PRINT(.\Build\START390.lst) OBJECT(.\Build\START390.obj) EP

LOC    OBJ             LINE     SOURCE

                          1     $nomod51 
                          2     ;#include "ax11000_cfg.h"
                    +1    3     
                    +1    4     
                    +1    5     
                    +1    6     
                    +1    7     
                    +1    8     
                    +1    9     
                    +1   10     
                    +1   11     
                    +1   12     
                    +1   13     
                    +1   14     
                    +1   15     
                    +1   16     
                    +1   17     
                    +1   18     
                    +1   19     
                    +1   20     
                    +1   21     
                    +1   22     
                    +1   23     
                    +1   24     
                    +1   25     
                    +1   26     
                    +1   27     
                    +1   28     
                    +1   29     
                    +1   30     
                    +1   31     
                    +1   32     
                    +1   33     
                    +1   34     
                    +1   35     
                    +1   36     
                    +1   37     
                    +1   38     
                    +1   39     
                    +1   40     
                    +1   41     
                    +1   42     
                    +1   43     
                    +1   44     
                    +1   45     
                    +1   46     
                    +1   47     
                    +1   48     
                    +1   49     
                    +1   50     
                    +1   51     
                    +1   52     
                    +1   53     
                    +1   54     
                    +1   55     
                         56     
                         57     
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE     2

                         58     ;#include "stoe_cfg.h"
                    +1   59     
                    +1   60     
                    +1   61     
                    +1   62     
                    +1   63     
                    +1   64     
                    +1   65     
                    +1   66     
                    +1   67     
                    +1   68     
                    +1   69     
                    +1   70     
                    +1   71     
                    +1   72     
                    +1   73     
                    +1   74     
                    +1   75     
                    +1   76     
                    +1   77     
                    +1   78     
                    +1   79     
                    +1   80     
                    +1   81     
                    +1   82     
                    +1   83     
                    +1   84     
                    +1   85     
                    +1   86     
                    +1   87     
                    +1   88     
                    +1   89     
                    +1   90     
                    +1   91     
                    +1   92     
                    +1   93     
                    +1   94     
                    +1   95     
                    +1   96     
                    +1   97     
                    +1   98     
                    +1   99     
                    +1  100     
                    +1  101     
                    +1  102     
                    +1  103     
                    +1  104     
                    +1  105     
                    +1  106     
                    +1  107     
                    +1  108     
                    +1  109     
                    +1  110     
                    +1  111     
                    +1  112     
                    +1  113     
                    +1  114     
                    +1  115     
                    +1  116     
                    +1  117     
                    +1  118     
                    +1  119     
                    +1  120     
                    +1  121     
                    +1  122     
                    +1  123     
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE     3

                    +1  124     
                    +1  125     
                    +1  126     
                    +1  127     
                    +1  128     
                    +1  129     
                    +1  130     
                    +1  131     
                    +1  132     
                    +1  133     
                    +1  134     
                    +1  135     
                    +1  136     
                    +1  137     
                    +1  138     
                    +1  139     
                    +1  140     
                    +1  141     
                    +1  142     
                    +1  143     
                    +1  144     
                    +1  145     
                    +1  146     
                    +1  147     
                    +1  148     
                    +1  149     
                    +1  150     
                    +1  151     
                    +1  152     
                    +1  153     
                    +1  154     
                    +1  155     
                    +1  156     
                    +1  157     
                    +1  158     
                    +1  159     
                    +1  160     
                    +1  161     
                        162     
                        163     
                        164     ;------------------------------------------------------------------------------
                        165     ;  This file is part of the C51 Compiler package
                        166     ;  Copyright (c) 1988-2001 Keil Elektronik GmbH and Keil Software, Inc.
                        167     ;  Startup code for Flipper CPU, Contigious Mode
                        168     ;------------------------------------------------------------------------------
                        169     ;  START390.A51:  This code is executed after processor reset.
                        170     ;  You may add this file to a uVision2 project.
                        171     ;
                        172     ;  To translate this file use A51 with the following invocation:
                        173     ;
                        174     ;     AX51 START390.A51 MOD_CONT
                        175     ;
                        176     ;  To link the modified STARTUP.OBJ file to your application use the following
                        177     ;  LX51 invocation:
                        178     ;
                        179     ;     LX51 <your object file list>, START390.OBJ <controls>
                        180     ;
                        181     ;------------------------------------------------------------------------------
                        182     ;
                        183     ;------------------------------------------------------------------------------
                        184     ;
                        185     ;  Code Block Size
                        186     ;
                        187     ;  This Block Size must be set before system initialization.
                        188     ;  Hardware will check this value for memory shadow function first.
                        189     ;  It could be obtained after compilied whole source code.
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE     4

                        190     ;  
 008C                   191     CODEBLOCK       EQU     8CH     ; the block size of code space.
                        192     ;
                        193     ;  Notes:  Each Block has 32KBytes memory space, and must not be set to '00H'.
                        194     ;          It must be placed at address 0x3FFF of code space.
                        195     ;------------------------------------------------------------------------------
                        196     ;
                        197     ;  User-defined Power-On Initialization of Memory
                        198     ;
                        199     ;  With the following EQU statements the initialization of memory
                        200     ;  at processor reset can be defined:
                        201     ;
                        202     ;               ; the absolute start-address of IDATA memory is always 0
 0080                   203     IDATALEN        EQU     80H     ; the length of IDATA memory in bytes.
                        204     ;
 0000                   205     XDATASTART      EQU     0H      ; the absolute start-address of XDATA memory
 8000                   206     XDATALEN        EQU     8000H   ; the length of XDATA memory in bytes.
                        207     ;
 0000                   208     PDATASTART      EQU     0H      ; the absolute start-address of PDATA memory
 0000                   209     PDATALEN        EQU     0H      ; the length of PDATA memory in bytes.
                        210     ;
                        211     ;  Notes:  The IDATA space overlaps physically the DATA and BIT areas of the
                        212     ;          8051 CPU. At minimum the memory space occupied from the C51 
                        213     ;          run-time routines must be set to zero.
                        214     ;------------------------------------------------------------------------------
                        215     ;
                        216     ;  Reentrant Stack Initilization
                        217     ;
                        218     ;  The following EQU statements define the stack pointer for reentrant
                        219     ;  functions and initialized it:
                        220     ;
                        221     ;  Stack Space for reentrant functions in the SMALL model.
 0000                   222     IBPSTACK        EQU     0       ; set to 1 if small reentrant is used.
 00F1                   223     IBPSTACKTOP     EQU     0F0H+1  ; set top of stack to highest location+1.
                        224     ;
                        225     ;  Stack Space for reentrant functions in the LARGE model.      
 0001                   226     XBPSTACK        EQU     1       ; set to 1 if large reentrant is used.
                        227     
 56D8                   228     XBPSTACKTOP     EQU     (32727-(256*(16+24+1)))+1
                        229                                     ; set top of stack to highest location+1 below STOE buff
                               er.
                                
                                
                                
                        233     ;
                        234     ;  Stack Space for reentrant functions in the COMPACT model.    
 0000                   235     PBPSTACK        EQU     0       ; set to 1 if compact reentrant is used.
 F500                   236     PBPSTACKTOP     EQU     0F4FFH+1; set top of stack to highest location+1.
                        237     ;
                        238     ;------------------------------------------------------------------------------
                        239     ;
                        240     ;  Page Definition for Using the Compact Model with 64 KByte xdata RAM
                        241     ;
                        242     ;  The following EQU statements define the xdata page used for pdata
                        243     ;  variables. The EQU PPAGE must conform with the PPAGE control used
                        244     ;  in the linker invocation.
                        245     ;
 0000                   246     PPAGEENABLE     EQU     0       ; set to 1 if pdata object are used.
 00F4                   247     PPAGE           EQU     0F4H    ; define PPAGE number. 
                        248     ;
                        249     ;------------------------------------------------------------------------------
                        250     
                        251     ;#include "reg80390.h"
                    +1  252     
                    +1  253     
                    +1  254     
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE     5

                    +1  255     
                    +1  256     
                    +1  257     
                    +1  258     
                    +1  259     
                    +1  260     
                    +1  261     
                    +1  262     
                    +1  263     
                    +1  264     
                    +1  265     
                    +1  266     
                    +1  267     
  0080              +1  268     sfr     P0                      = 0x80;// Port 0
  0081              +1  269     sfr     SP                      = 0x81;// Stack Pointer
  0082              +1  270     sfr     DPL0            = 0x82;// Data Pointer 0 Low Byte
  0083              +1  271     sfr     DPH0            = 0x83;// Data Pointer 0 High Byte
  0082              +1  272     sfr     DPL                     = 0x82;// Data Pointer 0 Low Byte
  0083              +1  273     sfr     DPH                     = 0x83;// Data Pointer 0 High Byte
  0084              +1  274     sfr     DPL1            = 0x84;// Data Pointer 1 Low Byte
  0085              +1  275     sfr     DPH1            = 0x85;// Data Pointer 1 High Byte
  0086              +1  276     sfr     DPS                     = 0x86;// Data Pointers Select Register
  0087              +1  277     sfr     PCON            = 0x87;// Power Configuration Register
  0088              +1  278     sfr TCON                = 0x88;// Timer 0,1 Configuration Register
  0089              +1  279     sfr TMOD                = 0x89;// Timer 0,1 Control Mode Register
  008A              +1  280     sfr TL0                 = 0x8A;// Timer 0 Low Byte Counter
  008B              +1  281     sfr TL1                 = 0x8B;// Timer 1 Low Byte Counter
  008C              +1  282     sfr TH0                 = 0x8C;// Timer 0 High Byte Counter
  008D              +1  283     sfr TH1                 = 0x8D;// Timer 1 High Byte Counter
  008E              +1  284     sfr CKCON               = 0x8E;// Clock Control Register
  008F              +1  285     sfr CSREPR              = 0x8F;// Software Reset and External Program RAM Select Registe
                               r
                    +1  286     
  0090              +1  287     sfr P1                  = 0x90;// Port 1
  0091              +1  288     sfr EIF                 = 0x91;// Extended Interrupt Flag Register
  0092              +1  289     sfr WTST                = 0x92;// Program Wait States Register
  0093              +1  290     sfr DPX0                = 0x93;// Data Pointer Extended Register 0
  0093              +1  291     sfr DPX                 = 0x93;// Data Pointer Extended Register 0
  0094              +1  292     sfr     SDSTSR          = 0x94;// Software Timer and Software DMA complete interrupt sta
                               tus
  0095              +1  293     sfr DPX1                = 0x95;// Data Pointer Extended Register 1
  0096              +1  294     sfr I2CCIR              = 0x96;// I2C Command Index Register
  0097              +1  295     sfr I2CDR               = 0x97;// I2C Data Register
  0098              +1  296     sfr SCON0               = 0x98;// UART 0 Configuration Register
  0099              +1  297     sfr SBUF0               = 0x99;// UART 0 Buffer Register
  009A              +1  298     sfr DBAR                = 0x9A;// DMA Bus Arbitration Register
  009B              +1  299     sfr DCIR                = 0x9B;// DMA Command Index Register
  009C              +1  300     sfr DDR                 = 0x9C;// DMA Data Register
  009D              +1  301     sfr ACON                = 0x9D;// Address Control Register
  009E              +1  302     sfr PISSR1              = 0x9E;// Peripheral Interrupt Status Summary Register 1
  009F              +1  303     sfr PISSR2              = 0x9F;// Peripheral Interrupt Status Summary Register 2
                    +1  304     
  00A0              +1  305     sfr P2                  = 0xA0;// Port 2
                    +1  306     
  00A1              +1  307     sfr LMSR                = 0xA1;// Local Bus Mode Setup Register
  00A2              +1  308     sfr LCR                 = 0xA2;// Local Bus Command Register
  00A3              +1  309     sfr LSR                 = 0xA3;// Local Bus Status Register
  00A4              +1  310     sfr LDALR               = 0xA4;// Local Bus Device Address Low Register
  00A5              +1  311     sfr LDAHR               = 0xA5;// Local Bus Device Address High Register
  00A6              +1  312     sfr LDCSR               = 0xA6;// Local Bus Device Chip Select Register
                    +1  313     
  00A1              +1  314     sfr LSAIER              = 0xA1;// Local Bus Slave mode Action and Interrupt Enable Regis
                               ter
  00A2              +1  315     sfr LSCR                = 0xA2;// Local Bus Slave mode Command Register
  00A3              +1  316     sfr LSSR                = 0xA3;// Local Bus Slave mode Status Register
  00A4              +1  317     sfr XMWLR               = 0xA4;// External Master Write-read Low Register
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE     6

  00A5              +1  318     sfr XMWHR               = 0xA5;// External Master Write-read High Register
  00A6              +1  319     sfr XMRLR               = 0xA6;// External Master Read-only Low Register
  00A7              +1  320     sfr XMRHR               = 0xA7;// External Master Read-only High Register
                    +1  321     
  00A8              +1  322     sfr IE                  = 0xA8;// Interrupt Enable register
  00A9              +1  323     sfr LDLR                = 0xA9;// Local Bus Data Low Register
  00AA              +1  324     sfr LDHR                = 0xAA;// Local Bus Data High Register
  00AB              +1  325     sfr DMALR               = 0xAB;// Local Bus DMA Address Low Register
  00AC              +1  326     sfr DMAMR               = 0xAC;// Local Bus DMA Address Medium Register
  00AD              +1  327     sfr DMAHR               = 0xAD;// Local Bus DMA Address High Register
  00AE              +1  328     sfr TCIR                = 0xAE;// TOE Command Index Register
  00AF              +1  329     sfr     TDR                     = 0xAF;// TOE Data Register
                    +1  330     
  00B0              +1  331     sfr P3                  = 0xB0;// Port 3
  00B1              +1  332     sfr CCAPL0      = 0xB1;// PCA Module 0 Compare/Capture Low Byte Register
  00B2              +1  333     sfr CCAPL1      = 0xB2;// PCA Module 1 Compare/Capture Low Byte Register
  00B3              +1  334     sfr CCAPL2      = 0xB3;// PCA Module 2 Compare/Capture Low Byte Register
  00B4              +1  335     sfr CCAPL3      = 0xB4;// PCA Module 3 Compare/Capture Low Byte Register
  00B5              +1  336     sfr CCAPL4      = 0xB5;// PCA Module 4 Compare/Capture Low Byte Register
  00B6              +1  337     sfr MCIR                = 0xB6;// MAC Command Index Register
  00B7              +1  338     sfr MDR                 = 0xB7;// MAC Data Register
  00B8              +1  339     sfr IP                  = 0xB8;// Interrupt Priority Register
  00B9              +1  340     sfr CCAPH0      = 0xB9;// PCA Module 0 Compare/Capture High Byte Register
  00BA              +1  341     sfr CCAPH1      = 0xBA;// PCA Module 1 Compare/Capture High Byte Register
  00BB              +1  342     sfr CCAPH2      = 0xBB;// PCA Module 2 Compare/Capture High Byte Register
  00BC              +1  343     sfr CCAPH3      = 0xBC;// PCA Module 3 Compare/Capture High Byte Register
  00BD              +1  344     sfr CCAPH4      = 0xBD;// PCA Module 4 Compare/Capture High Byte Register
  00BE              +1  345     sfr EPCR                = 0xBE;// Ethernet PHY Command Index Register
  00BF              +1  346     sfr EPDR                = 0xBF;// Ethernet PHY Data Register
                    +1  347     
  00C0              +1  348     sfr SCON1               = 0xC0;// UART 1 Configuration Register
  00C1              +1  349     sfr SBUF1               = 0xC1;// UART 1 Buffer Register
  00C2              +1  350     sfr CMOD                = 0xC2;// PCA Timer/Counter Mode Register
  00C3              +1  351     sfr CCON                = 0xC3;// PCA Timer/Counter Control Register
  00C4              +1  352     sfr CL                  = 0xC4;// PCA Timer/Counter Low
  00C5              +1  353     sfr CH                  = 0xC5;// PCA Timer/Counter High
  00C8              +1  354     sfr T2CON               = 0xC8;// Timer 2 Configuration Register
  00C9              +1  355     sfr T2IF                = 0xC9;// Timer 2 Interrupt Flags
  00CA              +1  356     sfr RLDL                = 0xCA;// Timer 2 Reload Low Byte
  00CB              +1  357     sfr RLDH                = 0xCB;// Timer 2 Reload High Byte
  00CC              +1  358     sfr TL2                 = 0xCC;// Timer 2 Low Byte Counter
  00CD              +1  359     sfr TH2                 = 0xCD;// Timer 2 High Byte Counter
  00CE              +1  360     sfr SPICIR              = 0xCE;// SPI Command Index Register
  00CF              +1  361     sfr SPIDR               = 0xCF;// SPI Data Register
                    +1  362     
  00D0              +1  363     sfr PSW                 = 0xD0;// Program Status Word
  00D1              +1  364     sfr CCAPM0              = 0xD1;// PCA Compare/Capture Module Mode Register 0
  00D2              +1  365     sfr CCAPM1              = 0xD2;// PCA Compare/Capture Module Mode Register 1
  00D3              +1  366     sfr CCAPM2              = 0xD3;// PCA Compare/Capture Module Mode Register 2
  00D4              +1  367     sfr CCAPM3              = 0xD4;// PCA Compare/Capture Module Mode Register 3
  00D5              +1  368     sfr CCAPM4              = 0xD5;// PCA Compare/Capture Module Mode Register 4
  00D6              +1  369     sfr OWCIR               = 0xD6;// OneWire Command Index Register
  00D7              +1  370     sfr OWDR                = 0xD7;// OneWire Data Register
  00D8              +1  371     sfr WDCON               = 0xD8;// Watchdog Configuration
  00DE              +1  372     sfr CANCIR              = 0xDE;// CAN Bus Command Index Register
  00DF              +1  373     sfr CANDR               = 0xDF;// CAN Bus Data Register
                    +1  374     
  00E0              +1  375     sfr ACC                 = 0xE0;// Accumulator
                    +1  376     
                    +1  377     
  00E1              +1  378     sfr     UR2_DLL         = 0xE1;// High Speed UART2 Divisor Latch Low Register
  00E1              +1  379     sfr     UR2_THR         = 0xE1;// High Speed UART2 Transmit Holding Register for Writing
  00E1              +1  380     sfr     UR2_RBR         = 0xE1;// High Speed UART2 Receive Buffer Register for Reading
  00E2              +1  381     sfr     UR2_DLH         = 0xE2;// High Speed UART2 Divisor Latch High Register
  00E2              +1  382     sfr     UR2_IER         = 0xE2;// High Speed UART2 Interrupt Enable Register
  00E3              +1  383     sfr     UR2_FCR         = 0xE3;// High Speed UART2 FIFO Control Register for Writing
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE     7

  00E3              +1  384     sfr     UR2_IIR         = 0xE3;// High Speed UART2 Interrupt Identification Register for
                                Reading
  00E4              +1  385     sfr     UR2_LCR         = 0xE4;// High Speed UART2 Line Control Register
  00E5              +1  386     sfr     UR2_MCR         = 0xE5;// High Speed UART2 Modem Control Register
  00E6              +1  387     sfr     UR2_LSR         = 0xE6;// High Speed UART2 Line Status Register
  00E7              +1  388     sfr     UR2_MSR         = 0xE7;// High Speed UART2 Modem Status Register
                    +1  389     
  00E8              +1  390     sfr EIE                 = 0xE8;// External Interrupt Enable
  00E9              +1  391     sfr STATUS              = 0xE9;// Status Register
  00EA              +1  392     sfr MXAX                = 0xEA;// MOVX @Ri Extended Register
  00EB              +1  393     sfr TA                  = 0xEB;// Timed Access Protection
                    +1  394     
  00F0              +1  395     sfr B                   = 0xF0;// B Working Register
  00F8              +1  396     sfr EIP                 = 0xF8;// Extended Interrupt Priority Register
  00F9              +1  397     sfr MD0                 = 0xF9;// MDU Data 0
  00FA              +1  398     sfr MD1                 = 0xFA;// MDU Data 1
  00FB              +1  399     sfr MD2                 = 0xFB;// MDU Data 2
  00FC              +1  400     sfr MD3                 = 0xFC;// MDU Data 3
  00FD              +1  401     sfr MD4                 = 0xFD;// MDU Data 4
  00FE              +1  402     sfr MD5                 = 0xFE;// MDU Data 5
  00FF              +1  403     sfr ARCON               = 0xFF;// MDU Control Register
                    +1  404     
                    +1  405     
                    +1  406     
                    +1  407     
                    +1  408     
0080.0              +1  409     sbit P0_0               = 0x80;
0080.1              +1  410     sbit P0_1               = 0x81;
0080.2              +1  411     sbit P0_2               = 0x82;
0080.3              +1  412     sbit P0_3               = 0x83;
0080.4              +1  413     sbit P0_4               = 0x84;
0080.5              +1  414     sbit P0_5               = 0x85;
0080.6              +1  415     sbit P0_6               = 0x86;
0080.7              +1  416     sbit P0_7               = 0x87;
                    +1  417     
                    +1  418     
                    +1  419     
                    +1  420     
                    +1  421     
                    +1  422     
                    +1  423     
                    +1  424     
                    +1  425     
                    +1  426     
                    +1  427     
                    +1  428     
                    +1  429     
                    +1  430     
                    +1  431     
                    +1  432     
                    +1  433     
                    +1  434     
                    +1  435     
                    +1  436     
                    +1  437     
                    +1  438     
0088.0              +1  439     sbit    IT0             = 0x88;
0088.1              +1  440     sbit    IE0             = 0x89;
0088.2              +1  441     sbit    IT1             = 0x8A;
0088.3              +1  442     sbit    IE1             = 0x8B;
0088.4              +1  443     sbit    TR0             = 0x8C;
0088.5              +1  444     sbit    TF0             = 0x8D;
0088.6              +1  445     sbit    TR1             = 0x8E;
0088.7              +1  446     sbit    TF1             = 0x8F;
                    +1  447     
                    +1  448     
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE     8

                    +1  449     
                    +1  450     
                    +1  451     
                    +1  452     
                    +1  453     
                    +1  454     
                    +1  455     
                    +1  456     
                    +1  457     
                    +1  458     
                    +1  459     
                    +1  460     
                    +1  461     
                    +1  462     
                    +1  463     
                    +1  464     
                    +1  465     
                    +1  466     
                    +1  467     
                    +1  468     
                    +1  469     
                    +1  470     
                    +1  471     
                    +1  472     
                    +1  473     
                    +1  474     
                    +1  475     
                    +1  476     
                    +1  477     
                    +1  478     
                    +1  479     
                    +1  480     
                    +1  481     
                    +1  482     
                    +1  483     
                    +1  484     
                    +1  485     
                    +1  486     
                    +1  487     
                    +1  488     
                    +1  489     
                    +1  490     
0090.0              +1  491     sbit P1_0               = 0x90;
0090.1              +1  492     sbit P1_1               = 0x91;
0090.2              +1  493     sbit P1_2               = 0x92;
0090.3              +1  494     sbit P1_3               = 0x93;
0090.4              +1  495     sbit P1_4               = 0x94;
0090.5              +1  496     sbit P1_5               = 0x95;
0090.6              +1  497     sbit P1_6               = 0x96;
0090.7              +1  498     sbit P1_7               = 0x97;
                    +1  499     
                    +1  500     
                    +1  501     
                    +1  502     
                    +1  503     
                    +1  504     
                    +1  505     
                    +1  506     
                    +1  507     
                    +1  508     
                    +1  509     
                    +1  510     
                    +1  511     
0098.0              +1  512     sbit RI0                        = 0x98;
0098.1              +1  513     sbit TI0                        = 0x99;
0098.2              +1  514     sbit RB08                       = 0x9A;
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE     9

0098.3              +1  515     sbit TB08                       = 0x9B;
0098.4              +1  516     sbit REN0                       = 0x9C;
0098.5              +1  517     sbit SM02                       = 0x9D;
0098.6              +1  518     sbit SM01                       = 0x9E;
0098.7              +1  519     sbit SM00                       = 0x9F;
                    +1  520     
                    +1  521     
                    +1  522     
                    +1  523     
                    +1  524     
                    +1  525     
                    +1  526     
                    +1  527     
                    +1  528     
                    +1  529     
                    +1  530     
                    +1  531     
                    +1  532     
                    +1  533     
                    +1  534     
                    +1  535     
                    +1  536     
                    +1  537     
                    +1  538     
                    +1  539     
                    +1  540     
                    +1  541     
                    +1  542     
                    +1  543     
                    +1  544     
                    +1  545     
                    +1  546     
                    +1  547     
                    +1  548     
                    +1  549     
                    +1  550     
                    +1  551     
                    +1  552     
00A0.0              +1  553     sbit P2_0               = 0xA0;
00A0.1              +1  554     sbit P2_1               = 0xA1;
00A0.2              +1  555     sbit P2_2               = 0xA2;
00A0.3              +1  556     sbit P2_3               = 0xA3;
00A0.4              +1  557     sbit P2_4               = 0xA4;
00A0.5              +1  558     sbit P2_5               = 0xA5;
00A0.6              +1  559     sbit P2_6               = 0xA6;
00A0.7              +1  560     sbit P2_7               = 0xA7;
                    +1  561     
                    +1  562     
                    +1  563     
                    +1  564     
00A8.0              +1  565     sbit EX0                = 0xA8;       /* 1=Enable External interrupt 0 */
00A8.1              +1  566     sbit ET0                = 0xA9;       /* 1=Enable Timer 0 interrupt */
00A8.2              +1  567     sbit EX1                = 0xAA;       /* 1=Enable External interrupt 1 */
00A8.3              +1  568     sbit ET1                = 0xAB;       /* 1=Enable Timer 1 interrupt */
00A8.4              +1  569     sbit ES0                = 0xAC;       /* 1=Enable Serial port 0 interrupt */
00A8.5              +1  570     sbit ET2                = 0xAD;       /* 1=Enable Timer 2 interrupt */
00A8.6              +1  571     sbit ES1                = 0xAE;       /* 1=Enable Serial port 1 interrupt */
00A8.7              +1  572     sbit EA                 = 0xAF;       /* 0=Disable all interrupts */
                    +1  573     
                    +1  574     
                    +1  575     
                    +1  576     
00B0.0              +1  577     sbit P3_0               = 0xB0;
00B0.1              +1  578     sbit P3_1               = 0xB1;
00B0.2              +1  579     sbit P3_2               = 0xB2;
00B0.3              +1  580     sbit P3_3               = 0xB3;
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE    10

00B0.4              +1  581     sbit P3_4               = 0xB4;
00B0.5              +1  582     sbit P3_5               = 0xB5;
00B0.6              +1  583     sbit P3_6               = 0xB6;
00B0.7              +1  584     sbit P3_7               = 0xB7;
                    +1  585     
00B0.0              +1  586     sbit RXD                = 0xB0;       /* Serial data input */
00B0.1              +1  587     sbit TXD                = 0xB1;       /* Serial data output */
00B0.2              +1  588     sbit INT0               = 0xB2;       /* External interrupt 0 */
00B0.3              +1  589     sbit INT1               = 0xB3;       /* External interrupt 1 */
00B0.4              +1  590     sbit T0                 = 0xB4;       /* Timer 0 external input */
00B0.5              +1  591     sbit T1                 = 0xB5;       /* Timer 1 external input */
00B0.6              +1  592     sbit WR                 = 0xB6;       /* External data memory write strobe */
00B0.7              +1  593     sbit RD                 = 0xB7;       /* External data memory read strobe */
                    +1  594     
                    +1  595     
                    +1  596     
                    +1  597     
00B8.0              +1  598     sbit PX0                = 0xB8;
00B8.1              +1  599     sbit PT0                = 0xB9;
00B8.2              +1  600     sbit PX1                = 0xBA;
00B8.3              +1  601     sbit PT1                = 0xBB;
00B8.4              +1  602     sbit PS0                = 0xBC;
00B8.5              +1  603     sbit PT2                = 0xBD;
00B8.6              +1  604     sbit PS1                = 0xBE;
                    +1  605     
                    +1  606     
                    +1  607     
                    +1  608     
00C0.0              +1  609     sbit RI1                = 0xC0;
00C0.1              +1  610     sbit TI1                = 0xC1;
00C0.2              +1  611     sbit RB18               = 0xC2;
00C0.3              +1  612     sbit TB18               = 0xC3;
00C0.4              +1  613     sbit REN1               = 0xC4;
00C0.5              +1  614     sbit SM12               = 0xC5;
00C0.6              +1  615     sbit SM11               = 0xC6;
00C0.7              +1  616     sbit SM10               = 0xC7;
                    +1  617     
                    +1  618     
                    +1  619     
                    +1  620     
                    +1  621     
                    +1  622     
                    +1  623     
                    +1  624     
                    +1  625     
                    +1  626     
                    +1  627     
                    +1  628     
                    +1  629     
                    +1  630     
                    +1  631     
                    +1  632     
                    +1  633     
                    +1  634     
                    +1  635     
                    +1  636     
                    +1  637     
                    +1  638     
                    +1  639     
00C8.0              +1  640     sbit CPRL2              = 0xC8;
00C8.1              +1  641     sbit CT2                = 0xC9;
00C8.2              +1  642     sbit TR2                = 0xCA;
00C8.3              +1  643     sbit EXEN2              = 0xCB;
00C8.4              +1  644     sbit TCLK               = 0xCC;
00C8.5              +1  645     sbit RCLK               = 0xCD;
00C8.6              +1  646     sbit EXF2               = 0xCE;
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE    11

00C8.7              +1  647     sbit TF2                = 0xCF;
                    +1  648     
                    +1  649     
                    +1  650     
                    +1  651     
00D0.0              +1  652     sbit P                  = 0xD0;
00D0.1              +1  653     sbit F1                 = 0xD1;
00D0.2              +1  654     sbit OV                 = 0xD2;
00D0.3              +1  655     sbit RS0                = 0xD3;
00D0.4              +1  656     sbit RS1                = 0xD4;
00D0.5              +1  657     sbit F0                 = 0xD5;
00D0.6              +1  658     sbit AC                 = 0xD6;
00D0.7              +1  659     sbit CY                 = 0xD7;
                    +1  660     
                    +1  661     
                    +1  662     
                    +1  663     
                    +1  664     
                    +1  665     
                    +1  666     
                    +1  667     
                    +1  668     
                    +1  669     
                    +1  670     
                    +1  671     
                    +1  672     
                    +1  673     
                    +1  674     
                    +1  675     
00D8.0              +1  676     sbit RWT                = 0xD8;
00D8.1              +1  677     sbit EWT                = 0xD9;
00D8.2              +1  678     sbit WTRF               = 0xDA;
00D8.3              +1  679     sbit WDIF               = 0xDB;
                    +1  680     
                    +1  681     
                    +1  682     
                    +1  683     
                    +1  684     
                    +1  685     
                    +1  686     
                    +1  687     
                    +1  688     
                    +1  689     
                    +1  690     
                    +1  691     
                    +1  692     
                    +1  693     
                    +1  694     
                    +1  695     
                    +1  696     
                    +1  697     
                    +1  698     
                    +1  699     
                    +1  700     
                    +1  701     
                    +1  702     
                    +1  703     
                    +1  704     
                    +1  705     
                    +1  706     
                    +1  707     
                    +1  708     
                    +1  709     
                    +1  710     
                    +1  711     
                    +1  712     
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE    12

                    +1  713     
                    +1  714     
                    +1  715     
                    +1  716     
                    +1  717     
                    +1  718     
                    +1  719     
                    +1  720     
                    +1  721     
                    +1  722     
                    +1  723     
                    +1  724     
                    +1  725     
                    +1  726     
                    +1  727     
                    +1  728     
                    +1  729     
                    +1  730     
                    +1  731     
                    +1  732     
                    +1  733     
                    +1  734     
                    +1  735     
                    +1  736     
                    +1  737     
                    +1  738     
                    +1  739     
                    +1  740     
                    +1  741     
                    +1  742     
                    +1  743     
                    +1  744     
                    +1  745     
                    +1  746     
                    +1  747     
                    +1  748     
                    +1  749     
                    +1  750     
                    +1  751     
                    +1  752     
                    +1  753     
                    +1  754     
                    +1  755     
                    +1  756     
                    +1  757     
                    +1  758     
                    +1  759     
                    +1  760     
                    +1  761     
                    +1  762     
                    +1  763     
                    +1  764     
                    +1  765     
                    +1  766     
                    +1  767     
                    +1  768     
                    +1  769     
                    +1  770     
                    +1  771     
                    +1  772     
                    +1  773     
                    +1  774     
00E8.0              +1  775     sbit EINT2              = 0xE8;
00E8.1              +1  776     sbit EINT3              = 0xE9;
00E8.2              +1  777     sbit EINT4              = 0xEA;
00E8.3              +1  778     sbit EINT5              = 0xEB;
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE    13

00E8.4              +1  779     sbit EINT6              = 0xEC;
00E8.5              +1  780     sbit EWDI               = 0xED;
                    +1  781     
                    +1  782     
                    +1  783     
                    +1  784     
00F8.0              +1  785     sbit PINT2              = 0xF8;
00F8.1              +1  786     sbit PINT3              = 0xF9;
00F8.2              +1  787     sbit PINT4              = 0xFA;
00F8.3              +1  788     sbit PINT5              = 0xFB;
00F8.4              +1  789     sbit PINT6              = 0xFC;
00F8.5              +1  790     sbit PWDI               = 0xFD;
                    +1  791     
                    +1  792     
                    +1  793     
                    +1  794     
                    +1  795     
                        796     
                        797     
                        798                     NAME    ?C_STARTUP
                        799     
------                  800     ?C_C51STARTUP   SEGMENT   CODE
                        801     
------                  802     ?STACK          SEGMENT   IDATA
                        803     
------                  804                     RSEG    ?STACK
000000                  805                     DS      1
                        806     
                        807     ;               EXTRN CODE (MemoryPost)
                        808                     EXTRN CODE (?C_START)
                        809                     PUBLIC  ?C_STARTUP
                        810     
                        811     
                                
                                
006020                          ?C_CPURESET?0   SEGMENT CODE OFFS 0x6020
                        815     
------                  816                     RSEG    ?C_CPURESET?0   
                        817     
006020                  818     ?C_STARTUP      LABEL   NEAR
006020 02               819                     DB      02H     ; LJMP in Classic 8051 Mode
006021 0000       F     820                     DW      WORD0 STARTUP1
------                  821                     RSEG    ?C_C51STARTUP
                        822     
                        823     
                                                
                                
                        826     
000000                  827     STARTUP1:     
000000 75EBAA           828                     MOV     TA,#0xAA        ; Enable access to ACON
000003 75EB55           829                     MOV     TA,#0x55
000006 759D02           830                     MOV     ACON,#0x02
                        831     
                        832     IF IDATALEN <> 0
000009 787F             833                     MOV     R0,#IDATALEN - 1
00000B E4               834                     CLR     A
00000C F6               835     IDATALOOP:      MOV     @R0,A
00000D D8FD             836                     DJNZ    R0,IDATALOOP
                        837     ENDIF
                        838     
                        839     IF XDATALEN <> 0
00000F 90000000         840                     MOV     DPTR,#XDATASTART
000013 7F00             841                     MOV     R7,#BYTE0 (XDATALEN)
                        842       IF (BYTE0 (XDATALEN)) <> 0
                                                MOV     R6,#(BYTE1 XDATALEN) +1
                                  ELSE
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE    14

000015 7E80             845                     MOV     R6,#BYTE1 (XDATALEN)
                        846       ENDIF
                        847       IF (BYTE1 (XDATALEN)) <> 0
000017 7D01             848                     MOV     R5,#(BYTE2 XDATALEN) +1
                        849       ELSE
                                                MOV     R5,#BYTE2 (XDATALEN)
                                  ENDIF
000019 E4               852                     CLR     A
00001A F0               853     XDATALOOP:      MOVX    @DPTR,A
00001B A3               854                     INC     DPTR
00001C DFFC             855                     DJNZ    R7,XDATALOOP
00001E DEFA             856                     DJNZ    R6,XDATALOOP
000020 DDF8             857                     DJNZ    R5,XDATALOOP
                        858     ENDIF
                        859     
                        860     IF PPAGEENABLE <> 0
                                                MOV     P2,#PPAGE
                                                MOV     MXAX,#0
                                ENDIF
                        864     
                        865     IF PDATALEN <> 0
                                                MOV     R0,#PDATASTART
                                                MOV     R7,#LOW (PDATALEN)
                                                CLR     A
                                PDATALOOP:      MOVX    @R0,A
                                                INC     R0
                                                DJNZ    R7,PDATALOOP
                                ENDIF
                        873     
                        874     IF IBPSTACK <> 0
                                EXTRN DATA (?C_IBP)
                                
                                                MOV     ?C_IBP,#LOW IBPSTACKTOP
                                ENDIF
                        879     
                        880     IF XBPSTACK <> 0
                        881     EXTRN DATA (?C_XBP)
                        882     
000022 750056     E     883                     MOV     ?C_XBP,#HIGH XBPSTACKTOP
000025 7500D8     E     884                     MOV     ?C_XBP+1,#LOW XBPSTACKTOP
                        885     ENDIF
                        886     
                        887     IF PBPSTACK <> 0
                                EXTRN DATA (?C_PBP)
                                                MOV     ?C_PBP,#LOW PBPSTACKTOP
                                ENDIF
                        891     
000028 758100     F     892                     MOV     SP,#?STACK-1
                        893     ;               LJMP    MemoryPost      ;Memory test function
00002B 02000000   E     894                     LJMP    ?C_START
                        895     
                        896     
                                
                                                
                                
                                
                        901                     END
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE    15

SYMBOL TABLE LISTING
------ ----- -------


N A M E                        T Y P E  V A L U E     ATTRIBUTES

?C_C51STARTUP . . . . . . . .  C  SEG   00002FH       REL=UNIT, ALN=BYTE
?C_CPURESET?0 . . . . . . . .  C  SEG   006023H       REL=OFS, ALN=BYTE
?C_START. . . . . . . . . . .  C  ADDR  -------       EXT
?C_STARTUP. . . . . . . . . .  C  ADDR  6020H     R   SEG=?C_CPURESET?0
?C_XBP. . . . . . . . . . . .  D  ADDR  -------       EXT
?STACK. . . . . . . . . . . .  I  SEG   000001H       REL=UNIT, ALN=BYTE
AC. . . . . . . . . . . . . .  B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . .  D  ADDR  00E0H     A   
ACON. . . . . . . . . . . . .  D  ADDR  009DH     A   
ARCON . . . . . . . . . . . .  D  ADDR  00FFH     A   
B . . . . . . . . . . . . . .  D  ADDR  00F0H     A   
CANCIR. . . . . . . . . . . .  D  ADDR  00DEH     A   
CANDR . . . . . . . . . . . .  D  ADDR  00DFH     A   
CCAPH0. . . . . . . . . . . .  D  ADDR  00B9H     A   
CCAPH1. . . . . . . . . . . .  D  ADDR  00BAH     A   
CCAPH2. . . . . . . . . . . .  D  ADDR  00BBH     A   
CCAPH3. . . . . . . . . . . .  D  ADDR  00BCH     A   
CCAPH4. . . . . . . . . . . .  D  ADDR  00BDH     A   
CCAPL0. . . . . . . . . . . .  D  ADDR  00B1H     A   
CCAPL1. . . . . . . . . . . .  D  ADDR  00B2H     A   
CCAPL2. . . . . . . . . . . .  D  ADDR  00B3H     A   
CCAPL3. . . . . . . . . . . .  D  ADDR  00B4H     A   
CCAPL4. . . . . . . . . . . .  D  ADDR  00B5H     A   
CCAPM0. . . . . . . . . . . .  D  ADDR  00D1H     A   
CCAPM1. . . . . . . . . . . .  D  ADDR  00D2H     A   
CCAPM2. . . . . . . . . . . .  D  ADDR  00D3H     A   
CCAPM3. . . . . . . . . . . .  D  ADDR  00D4H     A   
CCAPM4. . . . . . . . . . . .  D  ADDR  00D5H     A   
CCON. . . . . . . . . . . . .  D  ADDR  00C3H     A   
CH. . . . . . . . . . . . . .  D  ADDR  00C5H     A   
CKCON . . . . . . . . . . . .  D  ADDR  008EH     A   
CL. . . . . . . . . . . . . .  D  ADDR  00C4H     A   
CMOD. . . . . . . . . . . . .  D  ADDR  00C2H     A   
CODEBLOCK . . . . . . . . . .  N  NUMB  008CH     A   
CPRL2 . . . . . . . . . . . .  B  ADDR  00C8H.0   A   
CSREPR. . . . . . . . . . . .  D  ADDR  008FH     A   
CT2 . . . . . . . . . . . . .  B  ADDR  00C8H.1   A   
CY. . . . . . . . . . . . . .  B  ADDR  00D0H.7   A   
DBAR. . . . . . . . . . . . .  D  ADDR  009AH     A   
DCIR. . . . . . . . . . . . .  D  ADDR  009BH     A   
DDR . . . . . . . . . . . . .  D  ADDR  009CH     A   
DMAHR . . . . . . . . . . . .  D  ADDR  00ADH     A   
DMALR . . . . . . . . . . . .  D  ADDR  00ABH     A   
DMAMR . . . . . . . . . . . .  D  ADDR  00ACH     A   
DPH . . . . . . . . . . . . .  D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . .  D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . .  D  ADDR  0085H     A   
DPL . . . . . . . . . . . . .  D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . .  D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . .  D  ADDR  0084H     A   
DPS . . . . . . . . . . . . .  D  ADDR  0086H     A   
DPX . . . . . . . . . . . . .  D  ADDR  0093H     A   
DPX0. . . . . . . . . . . . .  D  ADDR  0093H     A   
DPX1. . . . . . . . . . . . .  D  ADDR  0095H     A   
EA. . . . . . . . . . . . . .  B  ADDR  00A8H.7   A   
EIE . . . . . . . . . . . . .  D  ADDR  00E8H     A   
EIF . . . . . . . . . . . . .  D  ADDR  0091H     A   
EINT2 . . . . . . . . . . . .  B  ADDR  00E8H.0   A   
EINT3 . . . . . . . . . . . .  B  ADDR  00E8H.1   A   
EINT4 . . . . . . . . . . . .  B  ADDR  00E8H.2   A   
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE    16

EINT5 . . . . . . . . . . . .  B  ADDR  00E8H.3   A   
EINT6 . . . . . . . . . . . .  B  ADDR  00E8H.4   A   
EIP . . . . . . . . . . . . .  D  ADDR  00F8H     A   
EPCR. . . . . . . . . . . . .  D  ADDR  00BEH     A   
EPDR. . . . . . . . . . . . .  D  ADDR  00BFH     A   
ES0 . . . . . . . . . . . . .  B  ADDR  00A8H.4   A   
ES1 . . . . . . . . . . . . .  B  ADDR  00A8H.6   A   
ET0 . . . . . . . . . . . . .  B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . . .  B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . . .  B  ADDR  00A8H.5   A   
EWDI. . . . . . . . . . . . .  B  ADDR  00E8H.5   A   
EWT . . . . . . . . . . . . .  B  ADDR  00D8H.1   A   
EX0 . . . . . . . . . . . . .  B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . . .  B  ADDR  00A8H.2   A   
EXEN2 . . . . . . . . . . . .  B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . . .  B  ADDR  00C8H.6   A   
F0. . . . . . . . . . . . . .  B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . .  B  ADDR  00D0H.1   A   
I2CCIR. . . . . . . . . . . .  D  ADDR  0096H     A   
I2CDR . . . . . . . . . . . .  D  ADDR  0097H     A   
IBPSTACK. . . . . . . . . . .  N  NUMB  0000H     A   
IBPSTACKTOP . . . . . . . . .  N  NUMB  00F1H     A   
IDATALEN. . . . . . . . . . .  N  NUMB  0080H     A   
IDATALOOP . . . . . . . . . .  C  ADDR  000CH     R   SEG=?C_C51STARTUP
IE. . . . . . . . . . . . . .  D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . . .  B  ADDR  0088H.1   A   
IE1 . . . . . . . . . . . . .  B  ADDR  0088H.3   A   
INT0. . . . . . . . . . . . .  B  ADDR  00B0H.2   A   
INT1. . . . . . . . . . . . .  B  ADDR  00B0H.3   A   
IP. . . . . . . . . . . . . .  D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . . .  B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . . .  B  ADDR  0088H.2   A   
LCR . . . . . . . . . . . . .  D  ADDR  00A2H     A   
LDAHR . . . . . . . . . . . .  D  ADDR  00A5H     A   
LDALR . . . . . . . . . . . .  D  ADDR  00A4H     A   
LDCSR . . . . . . . . . . . .  D  ADDR  00A6H     A   
LDHR. . . . . . . . . . . . .  D  ADDR  00AAH     A   
LDLR. . . . . . . . . . . . .  D  ADDR  00A9H     A   
LMSR. . . . . . . . . . . . .  D  ADDR  00A1H     A   
LSAIER. . . . . . . . . . . .  D  ADDR  00A1H     A   
LSCR. . . . . . . . . . . . .  D  ADDR  00A2H     A   
LSR . . . . . . . . . . . . .  D  ADDR  00A3H     A   
LSSR. . . . . . . . . . . . .  D  ADDR  00A3H     A   
MCIR. . . . . . . . . . . . .  D  ADDR  00B6H     A   
MD0 . . . . . . . . . . . . .  D  ADDR  00F9H     A   
MD1 . . . . . . . . . . . . .  D  ADDR  00FAH     A   
MD2 . . . . . . . . . . . . .  D  ADDR  00FBH     A   
MD3 . . . . . . . . . . . . .  D  ADDR  00FCH     A   
MD4 . . . . . . . . . . . . .  D  ADDR  00FDH     A   
MD5 . . . . . . . . . . . . .  D  ADDR  00FEH     A   
MDR . . . . . . . . . . . . .  D  ADDR  00B7H     A   
MXAX. . . . . . . . . . . . .  D  ADDR  00EAH     A   
OV. . . . . . . . . . . . . .  B  ADDR  00D0H.2   A   
OWCIR . . . . . . . . . . . .  D  ADDR  00D6H     A   
OWDR. . . . . . . . . . . . .  D  ADDR  00D7H     A   
P . . . . . . . . . . . . . .  B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . . .  D  ADDR  0080H     A   
P0_0. . . . . . . . . . . . .  B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . . .  B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . . .  B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . . .  B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . . .  B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . . .  B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . . .  B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . . .  B  ADDR  0080H.7   A   
P1. . . . . . . . . . . . . .  D  ADDR  0090H     A   
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE    17

P1_0. . . . . . . . . . . . .  B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . . .  B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . . .  B  ADDR  0090H.2   A   
P1_3. . . . . . . . . . . . .  B  ADDR  0090H.3   A   
P1_4. . . . . . . . . . . . .  B  ADDR  0090H.4   A   
P1_5. . . . . . . . . . . . .  B  ADDR  0090H.5   A   
P1_6. . . . . . . . . . . . .  B  ADDR  0090H.6   A   
P1_7. . . . . . . . . . . . .  B  ADDR  0090H.7   A   
P2. . . . . . . . . . . . . .  D  ADDR  00A0H     A   
P2_0. . . . . . . . . . . . .  B  ADDR  00A0H.0   A   
P2_1. . . . . . . . . . . . .  B  ADDR  00A0H.1   A   
P2_2. . . . . . . . . . . . .  B  ADDR  00A0H.2   A   
P2_3. . . . . . . . . . . . .  B  ADDR  00A0H.3   A   
P2_4. . . . . . . . . . . . .  B  ADDR  00A0H.4   A   
P2_5. . . . . . . . . . . . .  B  ADDR  00A0H.5   A   
P2_6. . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
P2_7. . . . . . . . . . . . .  B  ADDR  00A0H.7   A   
P3. . . . . . . . . . . . . .  D  ADDR  00B0H     A   
P3_0. . . . . . . . . . . . .  B  ADDR  00B0H.0   A   
P3_1. . . . . . . . . . . . .  B  ADDR  00B0H.1   A   
P3_2. . . . . . . . . . . . .  B  ADDR  00B0H.2   A   
P3_3. . . . . . . . . . . . .  B  ADDR  00B0H.3   A   
P3_4. . . . . . . . . . . . .  B  ADDR  00B0H.4   A   
P3_5. . . . . . . . . . . . .  B  ADDR  00B0H.5   A   
P3_6. . . . . . . . . . . . .  B  ADDR  00B0H.6   A   
P3_7. . . . . . . . . . . . .  B  ADDR  00B0H.7   A   
PBPSTACK. . . . . . . . . . .  N  NUMB  0000H     A   
PBPSTACKTOP . . . . . . . . .  N  NUMB  F500H     A   
PCON. . . . . . . . . . . . .  D  ADDR  0087H     A   
PDATALEN. . . . . . . . . . .  N  NUMB  0000H     A   
PDATASTART. . . . . . . . . .  N  NUMB  0000H     A   
PINT2 . . . . . . . . . . . .  B  ADDR  00F8H.0   A   
PINT3 . . . . . . . . . . . .  B  ADDR  00F8H.1   A   
PINT4 . . . . . . . . . . . .  B  ADDR  00F8H.2   A   
PINT5 . . . . . . . . . . . .  B  ADDR  00F8H.3   A   
PINT6 . . . . . . . . . . . .  B  ADDR  00F8H.4   A   
PISSR1. . . . . . . . . . . .  D  ADDR  009EH     A   
PISSR2. . . . . . . . . . . .  D  ADDR  009FH     A   
PPAGE . . . . . . . . . . . .  N  NUMB  00F4H     A   
PPAGEENABLE . . . . . . . . .  N  NUMB  0000H     A   
PS0 . . . . . . . . . . . . .  B  ADDR  00B8H.4   A   
PS1 . . . . . . . . . . . . .  B  ADDR  00B8H.6   A   
PSW . . . . . . . . . . . . .  D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . . .  B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . . .  B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . . .  B  ADDR  00B8H.5   A   
PWDI. . . . . . . . . . . . .  B  ADDR  00F8H.5   A   
PX0 . . . . . . . . . . . . .  B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . . .  B  ADDR  00B8H.2   A   
RB08. . . . . . . . . . . . .  B  ADDR  0098H.2   A   
RB18. . . . . . . . . . . . .  B  ADDR  00C0H.2   A   
RCLK. . . . . . . . . . . . .  B  ADDR  00C8H.5   A   
RD. . . . . . . . . . . . . .  B  ADDR  00B0H.7   A   
REN0. . . . . . . . . . . . .  B  ADDR  0098H.4   A   
REN1. . . . . . . . . . . . .  B  ADDR  00C0H.4   A   
RI0 . . . . . . . . . . . . .  B  ADDR  0098H.0   A   
RI1 . . . . . . . . . . . . .  B  ADDR  00C0H.0   A   
RLDH. . . . . . . . . . . . .  D  ADDR  00CBH     A   
RLDL. . . . . . . . . . . . .  D  ADDR  00CAH     A   
RS0 . . . . . . . . . . . . .  B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . .  B  ADDR  00D0H.4   A   
RWT . . . . . . . . . . . . .  B  ADDR  00D8H.0   A   
RXD . . . . . . . . . . . . .  B  ADDR  00B0H.0   A   
SBUF0 . . . . . . . . . . . .  D  ADDR  0099H     A   
SBUF1 . . . . . . . . . . . .  D  ADDR  00C1H     A   
SCON0 . . . . . . . . . . . .  D  ADDR  0098H     A   
AX51 MACRO ASSEMBLER  START390                                                              05/08/13 16:47:33 PAGE    18

SCON1 . . . . . . . . . . . .  D  ADDR  00C0H     A   
SDSTSR. . . . . . . . . . . .  D  ADDR  0094H     A   
SM00. . . . . . . . . . . . .  B  ADDR  0098H.7   A   
SM01. . . . . . . . . . . . .  B  ADDR  0098H.6   A   
SM02. . . . . . . . . . . . .  B  ADDR  0098H.5   A   
SM10. . . . . . . . . . . . .  B  ADDR  00C0H.7   A   
SM11. . . . . . . . . . . . .  B  ADDR  00C0H.6   A   
SM12. . . . . . . . . . . . .  B  ADDR  00C0H.5   A   
SP. . . . . . . . . . . . . .  D  ADDR  0081H     A   
SPICIR. . . . . . . . . . . .  D  ADDR  00CEH     A   
SPIDR . . . . . . . . . . . .  D  ADDR  00CFH     A   
STARTUP1. . . . . . . . . . .  C  ADDR  0000H     R   SEG=?C_C51STARTUP
STATUS. . . . . . . . . . . .  D  ADDR  00E9H     A   
T0. . . . . . . . . . . . . .  B  ADDR  00B0H.4   A   
T1. . . . . . . . . . . . . .  B  ADDR  00B0H.5   A   
T2CON . . . . . . . . . . . .  D  ADDR  00C8H     A   
T2IF. . . . . . . . . . . . .  D  ADDR  00C9H     A   
TA. . . . . . . . . . . . . .  D  ADDR  00EBH     A   
TB08. . . . . . . . . . . . .  B  ADDR  0098H.3   A   
TB18. . . . . . . . . . . . .  B  ADDR  00C0H.3   A   
TCIR. . . . . . . . . . . . .  D  ADDR  00AEH     A   
TCLK. . . . . . . . . . . . .  B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . . .  D  ADDR  0088H     A   
TDR . . . . . . . . . . . . .  D  ADDR  00AFH     A   
TF0 . . . . . . . . . . . . .  B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . .  B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . . .  B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . . .  D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . .  D  ADDR  008DH     A   
TH2 . . . . . . . . . . . . .  D  ADDR  00CDH     A   
TI0 . . . . . . . . . . . . .  B  ADDR  0098H.1   A   
TI1 . . . . . . . . . . . . .  B  ADDR  00C0H.1   A   
TL0 . . . . . . . . . . . . .  D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . .  D  ADDR  008BH     A   
TL2 . . . . . . . . . . . . .  D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . . .  D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . .  B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . .  B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . . .  B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . . .  B  ADDR  00B0H.1   A   
UR2_DLH . . . . . . . . . . .  D  ADDR  00E2H     A   
UR2_DLL . . . . . . . . . . .  D  ADDR  00E1H     A   
UR2_FCR . . . . . . . . . . .  D  ADDR  00E3H     A   
UR2_IER . . . . . . . . . . .  D  ADDR  00E2H     A   
UR2_IIR . . . . . . . . . . .  D  ADDR  00E3H     A   
UR2_LCR . . . . . . . . . . .  D  ADDR  00E4H     A   
UR2_LSR . . . . . . . . . . .  D  ADDR  00E6H     A   
UR2_MCR . . . . . . . . . . .  D  ADDR  00E5H     A   
UR2_MSR . . . . . . . . . . .  D  ADDR  00E7H     A   
UR2_RBR . . . . . . . . . . .  D  ADDR  00E1H     A   
UR2_THR . . . . . . . . . . .  D  ADDR  00E1H     A   
WDCON . . . . . . . . . . . .  D  ADDR  00D8H     A   
WDIF. . . . . . . . . . . . .  B  ADDR  00D8H.3   A   
WR. . . . . . . . . . . . . .  B  ADDR  00B0H.6   A   
WTRF. . . . . . . . . . . . .  B  ADDR  00D8H.2   A   
WTST. . . . . . . . . . . . .  D  ADDR  0092H     A   
XBPSTACK. . . . . . . . . . .  N  NUMB  0001H     A   
XBPSTACKTOP . . . . . . . . .  N  NUMB  56D8H     A   
XDATALEN. . . . . . . . . . .  N  NUMB  8000H     A   
XDATALOOP . . . . . . . . . .  C  ADDR  001AH     R   SEG=?C_C51STARTUP
XDATASTART. . . . . . . . . .  N  NUMB  0000H     A   
XMRHR . . . . . . . . . . . .  D  ADDR  00A7H     A   
XMRLR . . . . . . . . . . . .  D  ADDR  00A6H     A   
XMWHR . . . . . . . . . . . .  D  ADDR  00A5H     A   
XMWLR . . . . . . . . . . . .  D  ADDR  00A4H     A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
