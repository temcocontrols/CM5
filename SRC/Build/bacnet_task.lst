C51 COMPILER V9.00   BACNET_TASK                                                           12/24/2012 16:27:50 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE BACNET_TASK
OBJECT MODULE PLACED IN .\Build\bacnet_task.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main\bacnet_task.c LARGE OMF2 ROM(D16M) BROWSE INTVECTOR(0X6020) INCDIR(..\
                    -SRC\FreeRTOSSource\include\;..\SRC\FreeRTOSSource\portable\Keil\AX11000;..\SRC\CPU\;..\SRC\MS_TIMER\;..\SRC\SW_DMA\;..\S
                    -RC\UART\;..\SRC\ETHERNET\;..\SRC\APPLICATION\;..\SRC\ETHERNET\;..\SRC\tcpip\;..\SRC\ADAPTER;..\SRC\main;..\SRC\SD_Card\;
                    -..\SRC\GSM\;..\SRC\Web\;..\SRC\SPI\;..\SRC\I2C\;..\SRC\PCA\;..\SRC\Modbus\;..\SRC\buffer\;..\SRC\hsur\;..\SRC\management
                    -\;..\SRC\dhcp\;..\SRC\pppoe\;..\SRC\MINI_262\;..\SRC\flash;..\SRC\SNTP) DEFINE(KEIL_AX11000) VARBANKING DEBUG PRINT(.\Bu
                    -ild\bacnet_task.lst) OBJECT(.\Build\bacnet_task.obj)

line level    source

   1          #include "main.h"
   2          
   3          #ifdef BACNET
              void TimerMSTP_task(void) reentrant
              {
                      Protocol_parameters *ps;
                      static U16_T count_1s = 0;
                      portTickType xDelayPeriod = ( portTickType ) 5 / portTICK_RATE_MS;
                      for (;;)
                      {       
                              vTaskDelay(xDelayPeriod);
                              ps = Port_parameters;
                              ps->SilenceTimer++; // add for MSTP
                              if(Modbus.PROTOCAL == BACNET_MSTP)
                                      ps->InactivityTimer++;  
                              if( ps->timepoints )
                                      ps->timepoints--;
                              
                      }
              }
              
              
              
              
              
              void BACnet_Common_task(void) reentrant
              {
                      Protocol_parameters *ps;
                      //Info_Table *inf;
                      static U8_T count_1s = 0;
                      portTickType xDelayPeriod = ( portTickType ) 50 / portTICK_RATE_MS;
                      for (;;)
                      {       
                              //if( port )
                              {                       
                                      ps = Port_parameters;
                              }
                      /*      else
                              {
                                      ps = &Port_parameters[1];
                              }*/     
                              vTaskDelay(xDelayPeriod);
                              /* add 3 timers for PTP state machine */                
                      
                              ps->ResponseTimer++;    // 5s 
              
                              // add for MSTP
                              //      misc_flags.sendtime = 1;
              
                              if(count_1s < 20)       count_1s++;
C51 COMPILER V9.00   BACNET_TASK                                                           12/24/2012 16:27:50 PAGE 2   

                              else
                              {       
                                      count_1s = 0;
                                      if(Modbus.PROTOCAL == BACNET_PTP)
                                              ps->InactivityTimer++;  // 60s    FOR PTP               
                      
                                      ps->HeartbeatTimer++;   // 15s
                                      if(flag_write_mass)
                                      {       
                                              Flash_Write_Mass();     
                                              flag_write_mass = 0;
                                      }       
                                      
                                      control_logic();  // implement this task per 1 second
                      
                                      if( flash.flag)
                                      {
                                              switch(flash.table)
                                              {
                                                      case OUT:       
                                                      memcpy(&Output[flash.index * 40],flash.dat,flash.len);
                                                      break;
                                                      case IN:
                                                      memcpy(&Input[flash.index * 38],flash.dat,flash.len);
                                                      break;
                                                      case PRG:
                                                      default: 
                                                      break;
                                              }
                                              flash.flag = 0;
                                      } 
                              
                              }
                              
                      }
              
              }
              
              
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
